  iTextSharp.text.error_messages.en.lng - Embedded, ContainedInManifestFile, 
  iTextSharp.text.error_messages.nl.lng - Embedded, ContainedInManifestFile, 
  iTextSharp.text.error_messages.pt.lng - Embedded, ContainedInManifestFile, 
  iTextSharp.text.pdf.fonts.Courier-Bold.afm - Embedded, ContainedInManifestFile, 
  iTextSharp.text.pdf.fonts.Courier-BoldOblique.afm - Embedded, ContainedInManifestFile, 
  iTextSharp.text.pdf.fonts.Courier-Oblique.afm - Embedded, ContainedInManifestFile, 
  iTextSharp.text.pdf.fonts.Courier.afm - Embedded, ContainedInManifestFile, 
  iTextSharp.text.pdf.fonts.Helvetica-Bold.afm - Embedded, ContainedInManifestFile, 
  iTextSharp.text.pdf.fonts.Helvetica-BoldOblique.afm - Embedded, ContainedInManifestFile, 
  iTextSharp.text.pdf.fonts.Helvetica-Oblique.afm - Embedded, ContainedInManifestFile, 
  iTextSharp.text.pdf.fonts.Helvetica.afm - Embedded, ContainedInManifestFile, 
  iTextSharp.text.pdf.fonts.Symbol.afm - Embedded, ContainedInManifestFile, 
  iTextSharp.text.pdf.fonts.Times-Bold.afm - Embedded, ContainedInManifestFile, 
  iTextSharp.text.pdf.fonts.Times-BoldItalic.afm - Embedded, ContainedInManifestFile, 
  iTextSharp.text.pdf.fonts.Times-Italic.afm - Embedded, ContainedInManifestFile, 
  iTextSharp.text.pdf.fonts.Times-Roman.afm - Embedded, ContainedInManifestFile, 
  iTextSharp.text.pdf.fonts.ZapfDingbats.afm - Embedded, ContainedInManifestFile, 
  iTextSharp.text.pdf.fonts.glyphlist.txt - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v2.0.50727
Assembly itextsharp, Version=5.5.13.0, Culture=neutral, PublicKeyToken=8354ae6d2174ddca: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Security, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Class Versions.Attributes.KeyVersionAttribute: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String KeyVersion 'get set' : 
  Methods:
    get_KeyVersion(): PrivateScope, Assembly, HideBySig, SpecialName
Class iTextSharp.awt.geom.AffineTransform: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.awt.geom.AffineTransform): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Fields:
    Int32 TYPE_IDENTITY = 0 : Public, Static, Literal, HasDefault
    Int32 TYPE_TRANSLATION = 1 : Public, Static, Literal, HasDefault
    Int32 TYPE_UNIFORM_SCALE = 2 : Public, Static, Literal, HasDefault
    Int32 TYPE_GENERAL_SCALE = 4 : Public, Static, Literal, HasDefault
    Int32 TYPE_QUADRANT_ROTATION = 8 : Public, Static, Literal, HasDefault
    Int32 TYPE_GENERAL_ROTATION = 16 : Public, Static, Literal, HasDefault
    Int32 TYPE_GENERAL_TRANSFORM = 32 : Public, Static, Literal, HasDefault
    Int32 TYPE_FLIP = 64 : Public, Static, Literal, HasDefault
    Int32 TYPE_MASK_SCALE = 6 : Public, Static, Literal, HasDefault
    Int32 TYPE_MASK_ROTATION = 24 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Type 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetScaleX(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetScaleY(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetShearX(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetShearY(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTranslateX(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTranslateY(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsIdentity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMatrix(Double[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDeterminant(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTransform(Double, Double, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTransform(AffineTransform): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetToIdentity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetToTranslation(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetToScale(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetToShear(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetToRotation(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetToRotation(Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTranslateInstance(Double, Double): PrivateScope, Public, Static, HideBySig
    GetScaleInstance(Double, Double): PrivateScope, Public, Static, HideBySig
    GetShearInstance(Double, Double): PrivateScope, Public, Static, HideBySig
    GetRotateInstance(Double): PrivateScope, Public, Static, HideBySig
    GetRotateInstance(Double, Double, Double): PrivateScope, Public, Static, HideBySig
    Translate(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Scale(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Shear(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Rotate(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Rotate(Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Concatenate(AffineTransform): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    preConcatenate(AffineTransform): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateInverse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Transform(Point2D, Point2D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Transform(Point2D[], Int32, Point2D[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Transform(Double[], Int32, Double[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Transform(Single[], Int32, Single[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Transform(Single[], Int32, Double[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Transform(Double[], Int32, Single[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeltaTransform(Point2D, Point2D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeltaTransform(Double[], Int32, Double[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InverseTransform(Point2D, Point2D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InverseTransform(Double[], Int32, Double[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InverseTransform(Single[], Int32, Single[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.awt.geom.Point2D: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    GetX(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetY(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetLocation(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetLocation(Point2D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DistanceSq(Double, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    DistanceSq(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DistanceSq(Point2D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Distance(Double, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    Distance(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Distance(Point2D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.awt.geom.Point2D+Float: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :iTextSharp.awt.geom.Point2D
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single x : Public
    Single y : Public
  Methods:
    GetX(): PrivateScope, Public, Virtual, HideBySig
    GetY(): PrivateScope, Public, Virtual, HideBySig
    SetLocation(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLocation(Double, Double): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.awt.geom.Point2D+Double: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :iTextSharp.awt.geom.Point2D
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double x : Public
    Double y : Public
  Methods:
    GetX(): PrivateScope, Public, Virtual, HideBySig
    GetY(): PrivateScope, Public, Virtual, HideBySig
    SetLocation(Double, Double): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.awt.geom.Point: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.awt.geom.Point2D
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.awt.geom.Point): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double x : Public
    Double y : Public
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetX(): PrivateScope, Public, Virtual, HideBySig
    GetY(): PrivateScope, Public, Virtual, HideBySig
    GetLocation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLocation(Point): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLocation(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLocation(Double, Double): PrivateScope, Public, Virtual, HideBySig
    Move(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Move(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Translate(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Translate(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.testutils.ITextTest: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    RunTest(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.AccessibleElementId: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable`1[iTextSharp.text.AccessibleElementId]
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    CompareTo(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.IElement: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Int32 Type 'get ' : 
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
  Methods:
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    IsContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsNestable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.ITextElementArray: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    iTextSharp.text.IElement
  Methods:
    Add(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.Phrase: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.Generic.List`1[iTextSharp.text.IElement]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Phrase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Chunk): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, iTextSharp.text.Chunk): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, iTextSharp.text.Font): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, System.String, iTextSharp.text.Font): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.ITextElementArray
    iTextSharp.text.IElement
  Properties:
    Int32 Type 'get ' : 
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
    Single MultipliedLeading 'get set' : 
    Single Leading 'get set' : 
    Single TotalLeading 'get ' : 
    iTextSharp.text.Font Font 'get set' : 
    System.String Content 'get ' : 
    iTextSharp.text.pdf.IHyphenationEvent Hyphenation 'get set' : 
    iTextSharp.text.TabSettings TabSettings 'get set' : 
  Methods:
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNestable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(Int32, IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddAll(ICollection`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSpecial(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasLeading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLeading(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_MultipliedLeading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MultipliedLeading(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Leading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Leading(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TotalLeading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Font(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Font(Font): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Content(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Hyphenation(IHyphenationEvent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Hyphenation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TabSettings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TabSettings(TabSettings): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetInstance(String): PrivateScope, Public, Static, HideBySig
    GetInstance(Int32, String): PrivateScope, Public, Static, HideBySig
    GetInstance(Int32, String, Font): PrivateScope, Public, Static, HideBySig
    Trim(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.Anchor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Phrase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Chunk): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, iTextSharp.text.Font): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, iTextSharp.text.Chunk): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, System.String, iTextSharp.text.Font): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Phrase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
    Int32 Type 'get ' : 
    System.String Name 'get set' : 
    System.String Reference 'get set' : 
    System.Uri Url 'get ' : 
  Methods:
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Reference(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Reference(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Url(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.Annotation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.Annotation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, System.String, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.IElement
  Fields:
    Int32 TEXT = 0 : Public, Static, Literal, HasDefault
    Int32 URL_NET = 1 : Public, Static, Literal, HasDefault
    Int32 URL_AS_STRING = 2 : Public, Static, Literal, HasDefault
    Int32 FILE_DEST = 3 : Public, Static, Literal, HasDefault
    Int32 FILE_PAGE = 4 : Public, Static, Literal, HasDefault
    Int32 NAMED_DEST = 5 : Public, Static, Literal, HasDefault
    Int32 LAUNCH = 6 : Public, Static, Literal, HasDefault
    Int32 SCREEN = 7 : Public, Static, Literal, HasDefault
    System.String TITLE = title : Public, Static, Literal, HasDefault
    System.String CONTENT = content : Public, Static, Literal, HasDefault
    System.String URL = url : Public, Static, Literal, HasDefault
    System.String FILE = file : Public, Static, Literal, HasDefault
    System.String DESTINATION = destination : Public, Static, Literal, HasDefault
    System.String PAGE = page : Public, Static, Literal, HasDefault
    System.String NAMED = named : Public, Static, Literal, HasDefault
    System.String APPLICATION = application : Public, Static, Literal, HasDefault
    System.String PARAMETERS = parameters : Public, Static, Literal, HasDefault
    System.String OPERATION = operation : Public, Static, Literal, HasDefault
    System.String DEFAULTDIR = defaultdir : Public, Static, Literal, HasDefault
    System.String LLX = llx : Public, Static, Literal, HasDefault
    System.String LLY = lly : Public, Static, Literal, HasDefault
    System.String URX = urx : Public, Static, Literal, HasDefault
    System.String URY = ury : Public, Static, Literal, HasDefault
    System.String MIMETYPE = mime : Public, Static, Literal, HasDefault
  Properties:
    Int32 Type 'get ' : 
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
    Int32 AnnotationType 'get ' : 
    System.String Title 'get ' : 
    System.String Content 'get ' : 
    System.Collections.Generic.Dictionary`2[System.String,System.Object] Attributes 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetDimensions(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLlx(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUrx(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUry(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLlx(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLly(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUrx(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUry(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AnnotationType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Title(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Content(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Attributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNestable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.DocumentException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.BadElementException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :iTextSharp.text.DocumentException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.BaseColor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.BaseColor WHITE : Public, Static, InitOnly
    iTextSharp.text.BaseColor LIGHT_GRAY : Public, Static, InitOnly
    iTextSharp.text.BaseColor GRAY : Public, Static, InitOnly
    iTextSharp.text.BaseColor DARK_GRAY : Public, Static, InitOnly
    iTextSharp.text.BaseColor BLACK : Public, Static, InitOnly
    iTextSharp.text.BaseColor RED : Public, Static, InitOnly
    iTextSharp.text.BaseColor PINK : Public, Static, InitOnly
    iTextSharp.text.BaseColor ORANGE : Public, Static, InitOnly
    iTextSharp.text.BaseColor YELLOW : Public, Static, InitOnly
    iTextSharp.text.BaseColor GREEN : Public, Static, InitOnly
    iTextSharp.text.BaseColor MAGENTA : Public, Static, InitOnly
    iTextSharp.text.BaseColor CYAN : Public, Static, InitOnly
    iTextSharp.text.BaseColor BLUE : Public, Static, InitOnly
  Properties:
    Int32 RGB  'get ' : 
    Int32 R    'get ' : 
    Int32 G    'get ' : 
    Int32 B    'get ' : 
    Int32 A    'get ' : 
  Methods:
    get_RGB(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_R(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_G(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_B(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_A(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Brighter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Darker(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToArgb(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Interface iTextSharp.text.ILargeElement: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    iTextSharp.text.IElement
  Properties:
    Boolean ElementComplete 'get set' : 
  Methods:
    get_ElementComplete(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ElementComplete(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    FlushContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.api.IIndentable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Single IndentationLeft 'get set' : 
    Single IndentationRight 'get set' : 
  Methods:
    get_IndentationLeft(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_IndentationLeft(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IndentationRight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_IndentationRight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface iTextSharp.text.pdf.interfaces.IAccessibleElement: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    iTextSharp.text.AccessibleElementId ID 'get set' : 
    Boolean IsInline 'get ' : 
  Methods:
    GetAccessibleAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetAccessibleAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAccessibleAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Role(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ID(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class iTextSharp.text.Section: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.Generic.List`1[iTextSharp.text.IElement]
  Interfaces:
    iTextSharp.text.ITextElementArray
    iTextSharp.text.IElement
    iTextSharp.text.ILargeElement
    iTextSharp.text.api.IIndentable
    iTextSharp.text.pdf.interfaces.IAccessibleElement
  Fields:
    Int32 NUMBERSTYLE_DOTTED = 0 : Public, Static, Literal, HasDefault
    Int32 NUMBERSTYLE_DOTTED_WITHOUT_FINAL_DOT = 1 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Type 'get ' : 
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
    iTextSharp.text.Paragraph Title 'get set' : 
    Int32 NumberStyle 'get set' : 
    Int32 NumberDepth 'get set' : 
    Single IndentationLeft 'get set' : 
    Single IndentationRight 'get set' : 
    Single Indentation 'get set' : 
    Int32 Depth 'get ' : 
    Boolean BookmarkOpen 'get set' : 
    System.String BookmarkTitle 'set' : 
    Boolean TriggerNewPage 'get set' : 
    Boolean NotAddedYet 'get set' : 
    Boolean ElementComplete 'get set' : 
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    iTextSharp.text.AccessibleElementId ID 'get set' : 
    Boolean IsInline 'get ' : 
  Methods:
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNestable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(Int32, IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(IElement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddAll(ICollection`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSection(Single, Paragraph, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSection(Single, Paragraph): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSection(Paragraph, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddMarkedSection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSection(Paragraph): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSection(Single, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSection(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSection(Single, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSection(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Title(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Title(Paragraph): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NumberStyle(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumberStyle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ConstructTitle(Paragraph, List`1, Int32, Int32): PrivateScope, Public, Static, HideBySig
    IsChapter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsSection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_NumberDepth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NumberDepth(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IndentationLeft(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IndentationLeft(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IndentationRight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IndentationRight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Indentation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Indentation(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Depth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BookmarkOpen(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BookmarkOpen(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBookmarkTitle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_BookmarkTitle(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_TriggerNewPage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TriggerNewPage(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetChapterNumber(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_NotAddedYet(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NotAddedYet(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    FlushContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ElementComplete(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ElementComplete(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    NewPage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessibleAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Role(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ID(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.Chapter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Section
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Paragraph, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Type 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    IsNestable(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.ChapterAutoNumber: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Chapter
    Void .ctor(iTextSharp.text.Paragraph): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddSection(String): PrivateScope, Public, Virtual, HideBySig
    AddSection(Paragraph): PrivateScope, Public, Virtual, HideBySig
    SetAutomaticNumber(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.Chunk: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Chunk): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, iTextSharp.text.Font): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char, iTextSharp.text.Font): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Image, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.draw.IDrawInterface): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.draw.IDrawInterface, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.draw.IDrawInterface, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(iTextSharp.text.pdf.draw.IDrawInterface, Single, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(iTextSharp.text.Image, Single, Single, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.IElement
    iTextSharp.text.pdf.interfaces.IAccessibleElement
  Fields:
    iTextSharp.text.Chunk NEWLINE : Public, Static, InitOnly
    iTextSharp.text.Chunk NEXTPAGE : Public, Static, InitOnly
    iTextSharp.text.Chunk TABBING : Public, Static, InitOnly
    iTextSharp.text.Chunk SPACETABBING : Public, Static, InitOnly
    System.String OBJECT_REPLACEMENT_CHARACTER = ￼ : Public, Static, Literal, HasDefault
    System.String SEPARATOR = SEPARATOR : Public, Static, Literal, HasDefault
    System.String TAB = TAB : Public, Static, Literal, HasDefault
    System.String TABSETTINGS = TABSETTINGS : Public, Static, Literal, HasDefault
    System.String HSCALE = HSCALE : Public, Static, Literal, HasDefault
    System.String UNDERLINE = UNDERLINE : Public, Static, Literal, HasDefault
    System.String SUBSUPSCRIPT = SUBSUPSCRIPT : Public, Static, Literal, HasDefault
    System.String SKEW = SKEW : Public, Static, Literal, HasDefault
    System.String BACKGROUND = BACKGROUND : Public, Static, Literal, HasDefault
    System.String TEXTRENDERMODE = TEXTRENDERMODE : Public, Static, Literal, HasDefault
    System.String SPLITCHARACTER = SPLITCHARACTER : Public, Static, Literal, HasDefault
    System.String HYPHENATION = HYPHENATION : Public, Static, Literal, HasDefault
    System.String REMOTEGOTO = REMOTEGOTO : Public, Static, Literal, HasDefault
    System.String LOCALGOTO = LOCALGOTO : Public, Static, Literal, HasDefault
    System.String LOCALDESTINATION = LOCALDESTINATION : Public, Static, Literal, HasDefault
    System.String GENERICTAG = GENERICTAG : Public, Static, Literal, HasDefault
    System.String LINEHEIGHT = LINEHEIGHT : Public, Static, Literal, HasDefault
    System.String IMAGE = IMAGE : Public, Static, Literal, HasDefault
    System.String ACTION = ACTION : Public, Static, Literal, HasDefault
    System.String NEWPAGE = NEWPAGE : Public, Static, Literal, HasDefault
    System.String PDFANNOTATION = PDFANNOTATION : Public, Static, Literal, HasDefault
    System.String COLOR = COLOR : Public, Static, Literal, HasDefault
    System.String ENCODING = ENCODING : Public, Static, Literal, HasDefault
    System.String CHAR_SPACING = CHAR_SPACING : Public, Static, Literal, HasDefault
    System.String WORD_SPACING = WORD_SPACING : Public, Static, Literal, HasDefault
    System.String WHITESPACE = WHITESPACE : Public, Static, Literal, HasDefault
  Properties:
    Int32 Type 'get ' : 
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
    iTextSharp.text.Font Font 'get set' : 
    System.String Content 'get ' : 
    System.Collections.Generic.Dictionary`2[System.String,System.Object] Attributes 'get set' : 
    Single HorizontalScaling 'get ' : 
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    iTextSharp.text.AccessibleElementId ID 'get set' : 
    Boolean IsInline 'get ' : 
  Methods:
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Append(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Font(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Font(Font): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Content(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetWidthPoint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasAccessibleAttributes(): PrivateScope, Public, HideBySig
    get_Attributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Attributes(Dictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetHorizontalScaling(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_HorizontalScaling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetUnderline(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetUnderline(BaseColor, Single, Single, Single, Single, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTextRise(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTextRise(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSkew(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetBackground(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetBackground(BaseColor, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTextRenderMode(Int32, Single, BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSplitCharacter(ISplitCharacter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetHyphenation(IHyphenationEvent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRemoteGoto(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRemoteGoto(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLocalGoto(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLocalDestination(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGenericTag(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setLineHeight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetImage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAction(PdfAction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAnchor(Uri): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAnchor(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetNewPage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAnnotation(PdfAnnotation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNestable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHyphenation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCharacterSpacing(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCharacterSpacing(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetWordSpacing(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetWordSpacing(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateWhitespace(String): PrivateScope, Public, Static, HideBySig
    CreateWhitespace(String, Boolean): PrivateScope, Public, Static, HideBySig
    IsWhitespace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateTabspace(): PrivateScope, Public, Static, HideBySig (Obsolete)
    CreateTabspace(Single): PrivateScope, Public, Static, HideBySig (Obsolete)
    IsTabspace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetAccessibleAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessibleAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Role(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ID(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetTextExpansion(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTextExpansion(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.IElementListener: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Add(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.IDocListener: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    iTextSharp.text.IElementListener
    System.IDisposable
  Properties:
    Int32 PageCount 'set' : 
  Methods:
    Open(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    NewPage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPageSize(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetMargins(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetMarginMirroring(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetMarginMirroringTopBottom(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    set_PageCount(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ResetPageCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.Document: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Rectangle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Rectangle, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.IDocListener
    iTextSharp.text.IElementListener
    System.IDisposable
    iTextSharp.text.pdf.interfaces.IAccessibleElement
  Fields:
    Boolean Compress : Public, Static
    Single WmfFontCorrection : Public, Static
  Properties:
    Int32 PageCount 'set' : 
    Int32 PageNumber 'get ' : 
    Single LeftMargin 'get ' : 
    Single RightMargin 'get ' : 
    Single TopMargin 'get ' : 
    Single BottomMargin 'get ' : 
    Single Left 'get ' : 
    Single Right 'get ' : 
    Single Top 'get ' : 
    Single Bottom 'get ' : 
    iTextSharp.text.Rectangle PageSize 'get ' : 
    System.String JavaScript_onLoad 'get set' : 
    System.String JavaScript_onUnLoad 'get set' : 
    System.String HtmlStyleClass 'get set' : 
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    iTextSharp.text.AccessibleElementId ID 'get set' : 
    Boolean IsInline 'get ' : 
  Methods:
    AddDocListener(IDocListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveIDocListener(IDocListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Open(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OpenDocument(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPageSize(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMargins(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NewPage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetPageCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_PageCount(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PageNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CloseDocument(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddHeader(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddTitle(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSubject(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddKeywords(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddAuthor(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddCreator(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddProducer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddLanguage(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddCreationDate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_LeftMargin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RightMargin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TopMargin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BottomMargin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetLeft(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTop(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBottom(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_PageSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsOpen(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_JavaScript_onLoad(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_JavaScript_onLoad(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_JavaScript_onUnLoad(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_JavaScript_onUnLoad(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HtmlStyleClass(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HtmlStyleClass(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetMarginMirroring(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMarginMirroringTopBottom(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsMarginMirroring(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessibleAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Role(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ID(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.DocWriter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    iTextSharp.text.IDocListener
    iTextSharp.text.IElementListener
    System.IDisposable
  Fields:
    Byte NEWLINE = 10 : Public, Static, Literal, HasDefault
    Byte TAB = 9 : Public, Static, Literal, HasDefault
    Byte LT = 60 : Public, Static, Literal, HasDefault
    Byte SPACE = 32 : Public, Static, Literal, HasDefault
    Byte EQUALS = 61 : Public, Static, Literal, HasDefault
    Byte QUOTE = 34 : Public, Static, Literal, HasDefault
    Byte GT = 62 : Public, Static, Literal, HasDefault
    Byte FORWARD = 47 : Public, Static, Literal, HasDefault
  Properties:
    Int32 PageCount 'set' : 
    Boolean CloseStream 'get set' : 
  Methods:
    Add(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Open(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPageSize(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMargins(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NewPage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetPageCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_PageCount(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetISOBytes(String): PrivateScope, Public, Static, HideBySig
    Pause(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsPaused(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Resume(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Flush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_CloseStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CloseStream(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetMarginMirroring(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMarginMirroringTopBottom(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.Element: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 HEADER = 0 : Public, Static, Literal, HasDefault
    Int32 TITLE = 1 : Public, Static, Literal, HasDefault
    Int32 SUBJECT = 2 : Public, Static, Literal, HasDefault
    Int32 KEYWORDS = 3 : Public, Static, Literal, HasDefault
    Int32 AUTHOR = 4 : Public, Static, Literal, HasDefault
    Int32 PRODUCER = 5 : Public, Static, Literal, HasDefault
    Int32 CREATIONDATE = 6 : Public, Static, Literal, HasDefault
    Int32 CREATOR = 7 : Public, Static, Literal, HasDefault
    Int32 LANGUAGE = 8 : Public, Static, Literal, HasDefault
    Int32 CHUNK = 10 : Public, Static, Literal, HasDefault
    Int32 PHRASE = 11 : Public, Static, Literal, HasDefault
    Int32 PARAGRAPH = 12 : Public, Static, Literal, HasDefault
    Int32 SECTION = 13 : Public, Static, Literal, HasDefault
    Int32 LIST = 14 : Public, Static, Literal, HasDefault
    Int32 LISTITEM = 15 : Public, Static, Literal, HasDefault
    Int32 CHAPTER = 16 : Public, Static, Literal, HasDefault
    Int32 ANCHOR = 17 : Public, Static, Literal, HasDefault
    Int32 PTABLE = 23 : Public, Static, Literal, HasDefault
    Int32 ANNOTATION = 29 : Public, Static, Literal, HasDefault
    Int32 RECTANGLE = 30 : Public, Static, Literal, HasDefault
    Int32 JPEG = 32 : Public, Static, Literal, HasDefault
    Int32 JPEG2000 = 33 : Public, Static, Literal, HasDefault
    Int32 IMGRAW = 34 : Public, Static, Literal, HasDefault
    Int32 IMGTEMPLATE = 35 : Public, Static, Literal, HasDefault
    Int32 JBIG2 = 36 : Public, Static, Literal, HasDefault
    Int32 DIV = 37 : Public, Static, Literal, HasDefault
    Int32 BODY = 38 : Public, Static, Literal, HasDefault
    Int32 MARKED = 50 : Public, Static, Literal, HasDefault
    Int32 YMARK = 55 : Public, Static, Literal, HasDefault
    Int32 WRITABLE_DIRECT = 666 : Public, Static, Literal, HasDefault
    Int32 ALIGN_UNDEFINED = -1 : Public, Static, Literal, HasDefault
    Int32 ALIGN_LEFT = 0 : Public, Static, Literal, HasDefault
    Int32 ALIGN_CENTER = 1 : Public, Static, Literal, HasDefault
    Int32 ALIGN_RIGHT = 2 : Public, Static, Literal, HasDefault
    Int32 ALIGN_JUSTIFIED = 3 : Public, Static, Literal, HasDefault
    Int32 ALIGN_TOP = 4 : Public, Static, Literal, HasDefault
    Int32 ALIGN_MIDDLE = 5 : Public, Static, Literal, HasDefault
    Int32 ALIGN_BOTTOM = 6 : Public, Static, Literal, HasDefault
    Int32 ALIGN_BASELINE = 7 : Public, Static, Literal, HasDefault
    Int32 ALIGN_JUSTIFIED_ALL = 8 : Public, Static, Literal, HasDefault
    Int32 CCITTG4 = 256 : Public, Static, Literal, HasDefault
    Int32 CCITTG3_1D = 257 : Public, Static, Literal, HasDefault
    Int32 CCITTG3_2D = 258 : Public, Static, Literal, HasDefault
    Int32 CCITT_BLACKIS1 = 1 : Public, Static, Literal, HasDefault
    Int32 CCITT_ENCODEDBYTEALIGN = 2 : Public, Static, Literal, HasDefault
    Int32 CCITT_ENDOFLINE = 4 : Public, Static, Literal, HasDefault
    Int32 CCITT_ENDOFBLOCK = 8 : Public, Static, Literal, HasDefault
Class iTextSharp.text.error_messages.MessageLocalization: AutoLayout, AnsiClass, Class, Public
  Methods:
    GetMessage(String): PrivateScope, Public, Static, HideBySig
    GetMessage(String, Boolean): PrivateScope, Public, Static, HideBySig
    GetComposedMessage(String, Object[]): PrivateScope, Public, Static, HideBySig
    SetLanguage(String, String): PrivateScope, Public, Static, HideBySig
    SetMessages(TextReader): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.exceptions.BadPasswordException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.exceptions.IllegalPdfSyntaxException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.ArgumentException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.exceptions.InvalidImageException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.exceptions.InvalidPdfException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.exceptions.UnsupportedPdfException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :iTextSharp.text.exceptions.InvalidPdfException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.factories.GreekAlphabetFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetString(Int32): PrivateScope, Public, Static, HideBySig
    GetLowerCaseString(Int32): PrivateScope, Public, Static, HideBySig
    GetUpperCaseString(Int32): PrivateScope, Public, Static, HideBySig
    GetString(Int32, Boolean): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.factories.RomanAlphabetFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetString(Int32): PrivateScope, Public, Static, HideBySig
    GetLowerCaseString(Int32): PrivateScope, Public, Static, HideBySig
    GetUpperCaseString(Int32): PrivateScope, Public, Static, HideBySig
    GetString(Int32, Boolean): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.factories.RomanNumberFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetString(Int32): PrivateScope, Public, Static, HideBySig
    GetLowerCaseString(Int32): PrivateScope, Public, Static, HideBySig
    GetUpperCaseString(Int32): PrivateScope, Public, Static, HideBySig
    GetString(Int32, Boolean): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.factories.RomanNumberFactory+RomanDigit: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(Char, Int32, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Char digit : Public
    Int32 value : Public
    Boolean pre : Public
Class iTextSharp.text.Font: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.Font): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(FontFamily, Single, Int32, iTextSharp.text.BaseColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.BaseFont, Single, Int32, iTextSharp.text.BaseColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.BaseFont, Single, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.BaseFont, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.BaseFont): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(FontFamily, Single, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(FontFamily, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(FontFamily): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable`1[iTextSharp.text.Font]
  Fields:
    Int32 NORMAL = 0 : Public, Static, Literal, HasDefault
    Int32 BOLD = 1 : Public, Static, Literal, HasDefault
    Int32 ITALIC = 2 : Public, Static, Literal, HasDefault
    Int32 UNDERLINE = 4 : Public, Static, Literal, HasDefault
    Int32 STRIKETHRU = 8 : Public, Static, Literal, HasDefault
    Int32 BOLDITALIC = 3 : Public, Static, Literal, HasDefault
    Int32 UNDEFINED = -1 : Public, Static, Literal, HasDefault
    Int32 DEFAULTSIZE = 12 : Public, Static, Literal, HasDefault
  Properties:
    FontFamily Family 'get ' : 
    System.String Familyname 'get ' : 
    Single Size 'get set' : 
    Single CalculatedSize 'get ' : 
    Int32 Style 'get ' : 
    Int32 CalculatedStyle 'get ' : 
    iTextSharp.text.BaseColor Color 'get set' : 
    iTextSharp.text.pdf.BaseFont BaseFont 'get ' : 
  Methods:
    CompareTo(Font): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Family(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Familyname(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetFamily(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFamilyIndex(String): PrivateScope, Public, Static, HideBySig
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Size(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CalculatedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetCalculatedLeading(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Style(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CalculatedStyle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsBold(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsItalic(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsUnderlined(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsStrikethru(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetStyle(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetStyle(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStyleValue(String): PrivateScope, Public, Static, HideBySig
    get_Color(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Color(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetColor(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_BaseFont(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetCalculatedBaseFont(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsStandardFont(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Difference(Font): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct iTextSharp.text.Font+FontFamily: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    FontFamily COURIER = 0 : Public, Static, Literal, HasDefault
    FontFamily HELVETICA = 1 : Public, Static, Literal, HasDefault
    FontFamily TIMES_ROMAN = 2 : Public, Static, Literal, HasDefault
    FontFamily SYMBOL = 3 : Public, Static, Literal, HasDefault
    FontFamily ZAPFDINGBATS = 4 : Public, Static, Literal, HasDefault
    FontFamily UNDEFINED = -1 : Public, Static, Literal, HasDefault
Class iTextSharp.text.FontFactory: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Fields:
    System.String COURIER = Courier : Public, Static, Literal, HasDefault
    System.String COURIER_BOLD = Courier-Bold : Public, Static, Literal, HasDefault
    System.String COURIER_OBLIQUE = Courier-Oblique : Public, Static, Literal, HasDefault
    System.String COURIER_BOLDOBLIQUE = Courier-BoldOblique : Public, Static, Literal, HasDefault
    System.String HELVETICA = Helvetica : Public, Static, Literal, HasDefault
    System.String HELVETICA_BOLD = Helvetica-Bold : Public, Static, Literal, HasDefault
    System.String HELVETICA_OBLIQUE = Helvetica-Oblique : Public, Static, Literal, HasDefault
    System.String HELVETICA_BOLDOBLIQUE = Helvetica-BoldOblique : Public, Static, Literal, HasDefault
    System.String SYMBOL = Symbol : Public, Static, Literal, HasDefault
    System.String TIMES = Times : Public, Static, Literal, HasDefault
    System.String TIMES_ROMAN = Times-Roman : Public, Static, Literal, HasDefault
    System.String TIMES_BOLD = Times-Bold : Public, Static, Literal, HasDefault
    System.String TIMES_ITALIC = Times-Italic : Public, Static, Literal, HasDefault
    System.String TIMES_BOLDITALIC = Times-BoldItalic : Public, Static, Literal, HasDefault
    System.String ZAPFDINGBATS = ZapfDingbats : Public, Static, Literal, HasDefault
  Properties:
    System.Collections.Generic.ICollection`1[System.String] RegisteredFonts 'get ' : 
    System.Collections.Generic.ICollection`1[System.String] RegisteredFamilies 'get ' : 
    System.String DefaultEncoding 'get ' : 
    Boolean DefaultEmbedding 'get ' : 
    iTextSharp.text.FontFactoryImp FontImp 'get set' : 
  Methods:
    GetFont(String, String, Boolean, Single, Int32, BaseColor): PrivateScope, Public, Static, HideBySig
    GetFont(String, String, Boolean, Single, Int32, BaseColor, Boolean): PrivateScope, Public, Static, HideBySig
    GetFont(String, String, Boolean, Single, Int32): PrivateScope, Public, Static, HideBySig
    GetFont(String, String, Boolean, Single): PrivateScope, Public, Static, HideBySig
    GetFont(String, String, Boolean): PrivateScope, Public, Static, HideBySig
    GetFont(String, String, Single, Int32, BaseColor): PrivateScope, Public, Static, HideBySig
    GetFont(String, String, Single, Int32): PrivateScope, Public, Static, HideBySig
    GetFont(String, String, Single): PrivateScope, Public, Static, HideBySig
    GetFont(String, String): PrivateScope, Public, Static, HideBySig
    GetFont(String, Single, Int32, BaseColor): PrivateScope, Public, Static, HideBySig
    GetFont(String, Single, BaseColor): PrivateScope, Public, Static, HideBySig
    GetFont(String, Single, Int32): PrivateScope, Public, Static, HideBySig
    GetFont(String, Single): PrivateScope, Public, Static, HideBySig
    GetFont(String): PrivateScope, Public, Static, HideBySig
    RegisterFamily(String, String, String): PrivateScope, Public, Static, HideBySig
    Register(Properties): PrivateScope, Public, Static, HideBySig
    Register(String): PrivateScope, Public, Static, HideBySig
    Register(String, String): PrivateScope, Public, Static, HideBySig
    RegisterDirectory(String): PrivateScope, Public, Static, HideBySig
    RegisterDirectory(String, Boolean): PrivateScope, Public, Static, HideBySig
    RegisterDirectories(): PrivateScope, Public, Static, HideBySig
    get_RegisteredFonts(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RegisteredFamilies(): PrivateScope, Public, Static, HideBySig, SpecialName
    Contains(String): PrivateScope, Public, Static, HideBySig
    IsRegistered(String): PrivateScope, Public, Static, HideBySig
    get_DefaultEncoding(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DefaultEmbedding(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FontImp(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_FontImp(FontFactoryImp): PrivateScope, Public, Static, HideBySig, SpecialName
Interface iTextSharp.text.IFontProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    IsRegistered(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFont(String, String, Boolean, Single, Int32, BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.FontFactoryImp: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.IFontProvider
  Properties:
    System.Collections.Generic.ICollection`1[System.String] RegisteredFonts 'get ' : 
    System.Collections.Generic.ICollection`1[System.String] RegisteredFamilies 'get ' : 
    System.String DefaultEncoding 'get set' : 
    Boolean DefaultEmbedding 'get set' : 
  Methods:
    GetFont(String, String, Boolean, Single, Int32, BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFont(String, String, Boolean, Single, Int32, BaseColor, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFont(String, String, Boolean, Single, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFont(String, String, Boolean, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFont(String, String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFont(String, String, Single, Int32, BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFont(String, String, Single, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFont(String, String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFont(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFont(String, Single, Int32, BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFont(String, Single, BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFont(String, Single, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFont(String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFont(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RegisterFamily(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Register(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Register(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RegisterDirectory(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RegisterDirectory(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RegisterDirectories(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_RegisteredFonts(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RegisteredFamilies(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsRegistered(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_DefaultEncoding(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DefaultEncoding(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DefaultEmbedding(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DefaultEmbedding(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.List: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.ITextElementArray
    iTextSharp.text.IElement
    iTextSharp.text.api.IIndentable
    iTextSharp.text.pdf.interfaces.IAccessibleElement
  Fields:
    Boolean ORDERED = True : Public, Static, Literal, HasDefault
    Boolean UNORDERED = False : Public, Static, Literal, HasDefault
    Boolean NUMERICAL = False : Public, Static, Literal, HasDefault
    Boolean ALPHABETICAL = True : Public, Static, Literal, HasDefault
    Boolean UPPERCASE = False : Public, Static, Literal, HasDefault
    Boolean LOWERCASE = True : Public, Static, Literal, HasDefault
  Properties:
    Int32 Type 'get ' : 
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
    Boolean Numbered 'get set' : 
    Boolean Lettered 'get set' : 
    Boolean Lowercase 'get set' : 
    Boolean IsLowercase 'get set' : 
    Boolean Autoindent 'get set' : 
    Boolean Alignindent 'get set' : 
    Int32 First 'get set' : 
    iTextSharp.text.Chunk ListSymbol 'set' : 
    Single IndentationLeft 'get set' : 
    Single IndentationRight 'get set' : 
    Single SymbolIndent 'get set' : 
    System.Collections.Generic.List`1[iTextSharp.text.IElement] Items 'get ' : 
    Int32 Size 'get ' : 
    Single TotalLeading 'get ' : 
    iTextSharp.text.Chunk Symbol 'get set' : 
    System.String PostSymbol 'get set' : 
    System.String PreSymbol 'get set' : 
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    iTextSharp.text.AccessibleElementId ID 'get set' : 
    Boolean IsInline 'get ' : 
  Methods:
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CloneShallow(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NormalizeIndentation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Numbered(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Numbered(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Lettered(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Lettered(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Lowercase(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Lowercase(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsLowercase(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsLowercase(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Autoindent(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Autoindent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Alignindent(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Alignindent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_First(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_First(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ListSymbol(Chunk): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetListSymbol(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IndentationLeft(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IndentationLeft(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IndentationRight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IndentationRight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SymbolIndent(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SymbolIndent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNestable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Items(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_TotalLeading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Symbol(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Symbol(Chunk): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    getPostSymbol(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_PostSymbol(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PostSymbol(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PreSymbol(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PreSymbol(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetFirstItem(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLastItem(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessibleAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Role(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ID(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.GreekList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.List
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(IElement): PrivateScope, Public, Virtual, HideBySig
    CloneShallow(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.Meta: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.IElement
  Fields:
    System.String UNKNOWN = unknown : Public, Static, Literal, HasDefault
    System.String PRODUCER = producer : Public, Static, Literal, HasDefault
    System.String CREATIONDATE = creationdate : Public, Static, Literal, HasDefault
    System.String AUTHOR = author : Public, Static, Literal, HasDefault
    System.String KEYWORDS = keywords : Public, Static, Literal, HasDefault
    System.String SUBJECT = subject : Public, Static, Literal, HasDefault
    System.String TITLE = title : Public, Static, Literal, HasDefault
  Properties:
    Int32 Type 'get ' : 
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
    System.String Content 'get ' : 
    System.String Name 'get ' : 
  Methods:
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNestable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Append(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Content(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetType(String): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.Header: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Meta
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class iTextSharp.text.html.HtmlEncoder: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed (Obsolete)
  Methods:
    Encode(String): PrivateScope, Public, Static, HideBySig
    Encode(BaseColor): PrivateScope, Public, Static, HideBySig
    GetAlignment(Int32): PrivateScope, Public, Static, HideBySig
    IsNewLineTag(String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.html.HtmlTags: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit (Obsolete)
  Fields:
    System.String A = a : Public, Static, Literal, HasDefault
    System.String B = b : Public, Static, Literal, HasDefault
    System.String BODY = body : Public, Static, Literal, HasDefault
    System.String BLOCKQUOTE = blockquote : Public, Static, Literal, HasDefault
    System.String BR = br : Public, Static, Literal, HasDefault
    System.String DIV = div : Public, Static, Literal, HasDefault
    System.String EM = em : Public, Static, Literal, HasDefault
    System.String FONT = font : Public, Static, Literal, HasDefault
    System.String H1 = h1 : Public, Static, Literal, HasDefault
    System.String H2 = h2 : Public, Static, Literal, HasDefault
    System.String H3 = h3 : Public, Static, Literal, HasDefault
    System.String H4 = h4 : Public, Static, Literal, HasDefault
    System.String H5 = h5 : Public, Static, Literal, HasDefault
    System.String H6 = h6 : Public, Static, Literal, HasDefault
    System.String HR = hr : Public, Static, Literal, HasDefault
    System.String I = i : Public, Static, Literal, HasDefault
    System.String IMG = img : Public, Static, Literal, HasDefault
    System.String LI = li : Public, Static, Literal, HasDefault
    System.String OL = ol : Public, Static, Literal, HasDefault
    System.String P = p : Public, Static, Literal, HasDefault
    System.String PRE = pre : Public, Static, Literal, HasDefault
    System.String S = s : Public, Static, Literal, HasDefault
    System.String SPAN = span : Public, Static, Literal, HasDefault
    System.String STRIKE = strike : Public, Static, Literal, HasDefault
    System.String STRONG = strong : Public, Static, Literal, HasDefault
    System.String SUB = sub : Public, Static, Literal, HasDefault
    System.String SUP = sup : Public, Static, Literal, HasDefault
    System.String TABLE = table : Public, Static, Literal, HasDefault
    System.String TD = td : Public, Static, Literal, HasDefault
    System.String TH = th : Public, Static, Literal, HasDefault
    System.String TR = tr : Public, Static, Literal, HasDefault
    System.String U = u : Public, Static, Literal, HasDefault
    System.String UL = ul : Public, Static, Literal, HasDefault
    System.String ALIGN = align : Public, Static, Literal, HasDefault
    System.String BGCOLOR = bgcolor : Public, Static, Literal, HasDefault
    System.String BORDER = border : Public, Static, Literal, HasDefault
    System.String CELLPADDING = cellpadding : Public, Static, Literal, HasDefault
    System.String COLSPAN = colspan : Public, Static, Literal, HasDefault
    System.String EXTRAPARASPACE = extraparaspace : Public, Static, Literal, HasDefault
    System.String ENCODING = encoding : Public, Static, Literal, HasDefault
    System.String FACE = face : Public, Static, Literal, HasDefault
    System.String HEIGHT = height : Public, Static, Literal, HasDefault
    System.String HREF = href : Public, Static, Literal, HasDefault
    System.String HYPHENATION = hyphenation : Public, Static, Literal, HasDefault
    System.String IMAGEPATH = image_path : Public, Static, Literal, HasDefault
    System.String INDENT = indent : Public, Static, Literal, HasDefault
    System.String LEADING = leading : Public, Static, Literal, HasDefault
    System.String ROWSPAN = rowspan : Public, Static, Literal, HasDefault
    System.String SIZE = size : Public, Static, Literal, HasDefault
    System.String SRC = src : Public, Static, Literal, HasDefault
    System.String VALIGN = valign : Public, Static, Literal, HasDefault
    System.String WIDTH = width : Public, Static, Literal, HasDefault
    System.String ALIGN_LEFT = left : Public, Static, Literal, HasDefault
    System.String ALIGN_CENTER = center : Public, Static, Literal, HasDefault
    System.String ALIGN_RIGHT = right : Public, Static, Literal, HasDefault
    System.String ALIGN_JUSTIFY = justify : Public, Static, Literal, HasDefault
    System.String ALIGN_JUSTIFIED_ALL = JustifyAll : Public, Static, Literal, HasDefault
    System.String ALIGN_TOP = top : Public, Static, Literal, HasDefault
    System.String ALIGN_MIDDLE = middle : Public, Static, Literal, HasDefault
    System.String ALIGN_BOTTOM = bottom : Public, Static, Literal, HasDefault
    System.String ALIGN_BASELINE = baseline : Public, Static, Literal, HasDefault
    System.String STYLE = style : Public, Static, Literal, HasDefault
    System.String CLASS = class : Public, Static, Literal, HasDefault
    System.String COLOR = color : Public, Static, Literal, HasDefault
    System.String FONTFAMILY = font-family : Public, Static, Literal, HasDefault
    System.String FONTSIZE = font-size : Public, Static, Literal, HasDefault
    System.String FONTSTYLE = font-style : Public, Static, Literal, HasDefault
    System.String FONTWEIGHT = font-weight : Public, Static, Literal, HasDefault
    System.String LINEHEIGHT = line-height : Public, Static, Literal, HasDefault
    System.String PADDINGLEFT = padding-left : Public, Static, Literal, HasDefault
    System.String TEXTALIGN = text-align : Public, Static, Literal, HasDefault
    System.String TEXTDECORATION = text-decoration : Public, Static, Literal, HasDefault
    System.String VERTICALALIGN = vertical-align : Public, Static, Literal, HasDefault
    System.String BOLD = bold : Public, Static, Literal, HasDefault
    System.String ITALIC = italic : Public, Static, Literal, HasDefault
    System.String LINETHROUGH = line-through : Public, Static, Literal, HasDefault
    System.String NORMAL = normal : Public, Static, Literal, HasDefault
    System.String OBLIQUE = oblique : Public, Static, Literal, HasDefault
    System.String UNDERLINE = underline : Public, Static, Literal, HasDefault
    System.String AFTER = after : Public, Static, Literal, HasDefault
    System.String BEFORE = before : Public, Static, Literal, HasDefault
Class iTextSharp.text.html.simpleparser.ChainedProperties: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.IList`1[iTextSharp.text.html.simpleparser.ChainedProperties+TagAttributes] chain : Public
  Properties:
    System.String Item [System.String] 'get ' : 
  Methods:
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    HasProperty(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddToChain(String, IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveChain(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.html.simpleparser.ChainedProperties+TagAttributes: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
    Void .ctor(System.String, System.Collections.Generic.IDictionary`2[System.String,System.String]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String tag : Assembly
    System.Collections.Generic.IDictionary`2[System.String,System.String] attrs : Assembly
Interface iTextSharp.text.xml.simpleparser.ISimpleXMLDocHandler: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    StartElement(String, IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndElement(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StartDocument(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndDocument(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Text(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.html.simpleparser.HTMLWorker: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
    Void .ctor(iTextSharp.text.IDocListener): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.IDocListener, System.Collections.Generic.IDictionary`2[System.String,iTextSharp.text.html.simpleparser.IHTMLTagProcessor], iTextSharp.text.html.simpleparser.StyleSheet): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.xml.simpleparser.ISimpleXMLDocHandler
    iTextSharp.text.IDocListener
    iTextSharp.text.IElementListener
    System.IDisposable
  Fields:
    System.String IMG_PROVIDER = img_provider : Public, Static, Literal, HasDefault
    System.String IMG_PROCESSOR = img_interface : Public, Static, Literal, HasDefault
    System.String IMG_STORE = img_static : Public, Static, Literal, HasDefault
    System.String IMG_BASEURL = img_baseurl : Public, Static, Literal, HasDefault
    System.String FONT_PROVIDER = font_factory : Public, Static, Literal, HasDefault
    System.String LINK_PROVIDER = alink_interface : Public, Static, Literal, HasDefault
  Properties:
    Int32 PageCount 'set' : 
  Methods:
    SetSupportedTags(IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetStyleSheet(StyleSheet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Parse(TextReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    StartDocument(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    StartElement(String, IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Text(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndElement(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndDocument(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NewLine(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CarriageReturn(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FlushContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PushToStack(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateChain(String, IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateChain(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetProviders(IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateChunk(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateParagraph(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateList(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateListItem(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateLineSeparator(IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateImage(IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateCell(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessLink(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessList(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessListItem(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessImage(Image, IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessTable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessRow(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PushTableState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PopTableState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsPendingTR(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPendingTR(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsPendingTD(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPendingTD(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsPendingLI(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPendingLI(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsInsidePRE(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetInsidePRE(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsSkipText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSkipText(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ParseToList(TextReader, StyleSheet): PrivateScope, Public, Static, HideBySig
    ParseToList(TextReader, StyleSheet, Dictionary`2): PrivateScope, Public, Static, HideBySig
    ParseToList(TextReader, StyleSheet, IDictionary`2, Dictionary`2): PrivateScope, Public, Static, HideBySig
    Add(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NewPage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Open(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetPageCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMarginMirroring(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMarginMirroringTopBottom(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMargins(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_PageCount(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetPageSize(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetInterfaceProps(Dictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetInterfaceProps(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.html.simpleparser.IImageProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract (Obsolete)
  Methods:
    GetImage(String, IDictionary`2, ChainedProperties, IDocListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.html.simpleparser.StyleSheet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    LoadTagStyle(String, IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LoadTagStyle(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LoadStyle(String, Dictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LoadStyle(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ApplyStyle(String, IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResolveStyleAttribute(IDictionary`2, ChainedProperties): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.html.WebColors: AutoLayout, AnsiClass, Class, Public (Obsolete)
  :System.Collections.Generic.Dictionary`2[System.String,System.Int32[]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.html.WebColors NAMES : Public, Static
  Methods:
    GetRGBColor(String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.Rectangle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Element
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Rectangle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.util.RectangleJ): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.IElement
  Fields:
    Int32 UNDEFINED = -1 : Public, Static, Literal, HasDefault
    Int32 TOP_BORDER = 1 : Public, Static, Literal, HasDefault
    Int32 BOTTOM_BORDER = 2 : Public, Static, Literal, HasDefault
    Int32 LEFT_BORDER = 4 : Public, Static, Literal, HasDefault
    Int32 RIGHT_BORDER = 8 : Public, Static, Literal, HasDefault
    Int32 NO_BORDER = 0 : Public, Static, Literal, HasDefault
    Int32 BOX = 15 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Type 'get ' : 
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
    Single Top 'get set' : 
    Int32 Border 'get set' : 
    Single GrayFill 'get set' : 
    Single Left 'get set' : 
    Single Right 'get set' : 
    Single Bottom 'get set' : 
    iTextSharp.text.BaseColor BorderColorBottom 'get set' : 
    iTextSharp.text.BaseColor BorderColorTop 'get set' : 
    iTextSharp.text.BaseColor BorderColorLeft 'get set' : 
    iTextSharp.text.BaseColor BorderColorRight 'get set' : 
    Single Width 'get set' : 
    Single Height 'get ' : 
    Single BorderWidth 'get set' : 
    iTextSharp.text.BaseColor BorderColor 'get set' : 
    iTextSharp.text.BaseColor BackgroundColor 'get set' : 
    Int32 Rotation 'get set' : 
    Single BorderWidthLeft 'get set' : 
    Single BorderWidthRight 'get set' : 
    Single BorderWidthTop 'get set' : 
    Single BorderWidthBottom 'get set' : 
    Boolean UseVariableBorders 'get set' : 
  Methods:
    CloneNonPositionParameters(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SoftCloneNonPositionParameters(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNestable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Normalize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRectangle(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Rotate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Top(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Top(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    EnableBorderSide(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DisableBorderSide(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Border(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Border(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GrayFill(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_GrayFill(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Left(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Right(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Bottom(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BorderColorBottom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BorderColorBottom(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BorderColorTop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BorderColorTop(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BorderColorLeft(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BorderColorLeft(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BorderColorRight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BorderColorRight(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetLeft(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTop(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBottom(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Width(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Width(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    HasBorders(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasBorder(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_BorderWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BorderWidth(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BorderColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BorderColor(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BackgroundColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BackgroundColor(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Rotation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Rotation(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BorderWidthLeft(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BorderWidthLeft(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BorderWidthRight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BorderWidthRight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BorderWidthTop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BorderWidthTop(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BorderWidthBottom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BorderWidthBottom(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UseVariableBorders(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_UseVariableBorders(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Interface iTextSharp.text.api.ISpaceable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Single SpacingBefore 'get set' : 
    Single SpacingAfter 'get set' : 
    Single PaddingTop 'get set' : 
  Methods:
    get_SpacingBefore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SpacingBefore(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SpacingAfter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SpacingAfter(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PaddingTop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_PaddingTop(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface iTextSharp.text.pdf.interfaces.IAlternateDescription: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String Alt 'get set' : 
  Methods:
    get_Alt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Alt(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class iTextSharp.text.Image: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :iTextSharp.text.Rectangle
    Void .ctor(System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Image): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.api.IIndentable
    iTextSharp.text.api.ISpaceable
    iTextSharp.text.pdf.interfaces.IAccessibleElement
    iTextSharp.text.pdf.interfaces.IAlternateDescription
  Fields:
    Int32 DEFAULT = 0 : Public, Static, Literal, HasDefault
    Int32 RIGHT_ALIGN = 2 : Public, Static, Literal, HasDefault
    Int32 LEFT_ALIGN = 0 : Public, Static, Literal, HasDefault
    Int32 MIDDLE_ALIGN = 1 : Public, Static, Literal, HasDefault
    Int32 TEXTWRAP = 4 : Public, Static, Literal, HasDefault
    Int32 UNDERLYING = 8 : Public, Static, Literal, HasDefault
    Int32 AX = 0 : Public, Static, Literal, HasDefault
    Int32 AY = 1 : Public, Static, Literal, HasDefault
    Int32 BX = 2 : Public, Static, Literal, HasDefault
    Int32 BY = 3 : Public, Static, Literal, HasDefault
    Int32 CX = 4 : Public, Static, Literal, HasDefault
    Int32 CY = 5 : Public, Static, Literal, HasDefault
    Int32 DX = 6 : Public, Static, Literal, HasDefault
    Int32 DY = 7 : Public, Static, Literal, HasDefault
    Int32 ORIGINAL_NONE = 0 : Public, Static, Literal, HasDefault
    Int32 ORIGINAL_JPEG = 1 : Public, Static, Literal, HasDefault
    Int32 ORIGINAL_PNG = 2 : Public, Static, Literal, HasDefault
    Int32 ORIGINAL_GIF = 3 : Public, Static, Literal, HasDefault
    Int32 ORIGINAL_BMP = 4 : Public, Static, Literal, HasDefault
    Int32 ORIGINAL_TIFF = 5 : Public, Static, Literal, HasDefault
    Int32 ORIGINAL_WMF = 6 : Public, Static, Literal, HasDefault
    Int32 ORIGINAL_JPEG2000 = 8 : Public, Static, Literal, HasDefault
    Int32 ORIGINAL_JBIG2 = 9 : Public, Static, Literal, HasDefault
  Properties:
    Single Rotation 'set' : 
    Single RotationDegrees 'set' : 
    iTextSharp.text.Annotation Annotation 'get set' : 
    Int32 Bpc  'get ' : 
    Byte[] RawData 'get ' : 
    iTextSharp.text.pdf.PdfTemplate TemplateData 'get set' : 
    Single AbsoluteX 'get ' : 
    Single AbsoluteY 'get ' : 
    Int32 Type 'get ' : 
    System.Uri Url 'get set' : 
    Int32 Alignment 'get set' : 
    System.String Alt 'get set' : 
    Single ScaledWidth 'get ' : 
    Single ScaledHeight 'get ' : 
    Int32 Colorspace 'get ' : 
    Int32 ColorTransform 'get set' : 
    Int32[] Transparency 'get set' : 
    Single PlainWidth 'get ' : 
    Single PlainHeight 'get ' : 
    Int64 MySerialId 'get ' : 
    Int32 DpiX 'get ' : 
    Int32 DpiY 'get ' : 
    iTextSharp.text.Image ImageMask 'get set' : 
    Boolean Inverted 'get set' : 
    Boolean Interpolation 'get set' : 
    iTextSharp.text.pdf.ICC_Profile TagICC 'get set' : 
    Boolean Deflated 'get set' : 
    iTextSharp.text.pdf.PdfDictionary Additional 'get set' : 
    Boolean Smask 'get set' : 
    Single XYRatio 'get set' : 
    Single IndentationLeft 'get set' : 
    Single IndentationRight 'get set' : 
    Int32 OriginalType 'get set' : 
    Byte[] OriginalData 'get set' : 
    Single SpacingBefore 'get set' : 
    Single SpacingAfter 'get set' : 
    Single PaddingTop 'get set' : 
    Single WidthPercentage 'get set' : 
    Boolean ScaleToFitLineWhenOverflow 'get set' : 
    Boolean ScaleToFitHeight 'get set' : 
    iTextSharp.text.pdf.IPdfOCG Layer 'get set' : 
    Single InitialRotation 'get set' : 
    iTextSharp.text.pdf.PdfIndirectReference DirectReference 'get set' : 
    Int32 CompressionLevel 'get set' : 
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    iTextSharp.text.AccessibleElementId ID 'get set' : 
    Boolean IsInline 'get ' : 
  Methods:
    GetInstance(Image): PrivateScope, Public, Static, HideBySig
    GetInstance(Uri): PrivateScope, Public, Static, HideBySig
    GetInstance(Uri, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Stream): PrivateScope, Public, Static, HideBySig
    GetInstance(String, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Byte[]): PrivateScope, Public, Static, HideBySig
    GetInstance(Byte[], Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Image, BaseColor, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Image, ImageFormat): PrivateScope, Public, Static, HideBySig
    GetInstance(Image, BaseColor): PrivateScope, Public, Static, HideBySig
    GetInstance(String): PrivateScope, Public, Static, HideBySig
    GetInstance(Int32, Int32, Int32, Int32, Byte[]): PrivateScope, Public, Static, HideBySig
    GetInstance(Int32, Int32, Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
    GetInstance(PRIndirectReference): PrivateScope, Public, Static, HideBySig
    GetInstance(PdfTemplate): PrivateScope, Public, Static, HideBySig
    GetInstance(Int32, Int32, Boolean, Int32, Int32, Byte[]): PrivateScope, Public, Static, HideBySig
    GetInstance(Int32, Int32, Boolean, Int32, Int32, Byte[], Int32[]): PrivateScope, Public, Static, HideBySig
    GetInstance(Int32, Int32, Int32, Int32, Byte[], Int32[]): PrivateScope, Public, Static, HideBySig
    SetAbsolutePosition(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ScaleAbsolute(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ScaleAbsolute(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ScaleAbsoluteWidth(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ScaleAbsoluteHeight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ScalePercent(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ScalePercent(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ScaleToFit(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ScaleToFit(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetImageRotation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Rotation(Single): PrivateScope, Public, HideBySig, SpecialName
    set_RotationDegrees(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Annotation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Annotation(Annotation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bpc(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RawData(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TemplateData(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TemplateData(PdfTemplate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    HasAbsolutePosition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasAbsoluteX(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AbsoluteX(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AbsoluteY(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    IsNestable(): PrivateScope, Public, Virtual, HideBySig
    IsJpeg(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsImgRaw(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsImgTemplate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Url(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Url(Uri): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Alignment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Alignment(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Alt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Alt(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ScaledWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ScaledHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Colorspace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ColorTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ColorTransform(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetMatrix(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMatrix(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Transparency(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Transparency(Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PlainWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PlainHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MySerialId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DpiX(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DpiY(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetDpi(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsMaskCandidate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MakeMask(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ImageMask(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ImageMask(Image): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsMask(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Inverted(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Inverted(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Interpolation(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Interpolation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TagICC(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TagICC(ICC_Profile): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    HasICCProfile(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Deflated(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Deflated(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Additional(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Additional(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Smask(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Smask(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_XYRatio(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_XYRatio(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IndentationLeft(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IndentationLeft(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IndentationRight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IndentationRight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OriginalType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_OriginalType(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OriginalData(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_OriginalData(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SpacingBefore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SpacingBefore(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SpacingAfter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SpacingAfter(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PaddingTop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PaddingTop(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_WidthPercentage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_WidthPercentage(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ScaleToFitLineWhenOverflow(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ScaleToFitLineWhenOverflow(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ScaleToFitHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ScaleToFitHeight(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Layer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Layer(IPdfOCG): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SimplifyColorspace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_InitialRotation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_InitialRotation(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DirectReference(PdfIndirectReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DirectReference(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CompressionLevel(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompressionLevel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetAccessibleAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessibleAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Role(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ID(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.ImgCCITT: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Image
    Void .ctor(iTextSharp.text.Image): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Boolean, Int32, Int32, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.ImgJBIG2: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Image
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] GlobalBytes 'get ' : 
    Byte[] GlobalHash 'get ' : 
  Methods:
    get_GlobalBytes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GlobalHash(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.ImgRaw: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Image
    Void .ctor(iTextSharp.text.Image): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.ImgTemplate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Image
    Void .ctor(iTextSharp.text.Image): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfTemplate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.ImgWMF: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Image
    Void .ctor(iTextSharp.text.Image): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadWMF(PdfTemplate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.io.IRandomAccessSource: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    Int64 Length 'get ' : 
  Methods:
    Get(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Get(Int64, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.io.ArrayRandomAccessSource: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.io.IRandomAccessSource
    System.IDisposable
  Properties:
    Int64 Length 'get ' : 
  Methods:
    Get(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Get(Int64, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.io.GetBufferedRandomAccessSource: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.io.IRandomAccessSource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.io.IRandomAccessSource
    System.IDisposable
  Properties:
    Int64 Length 'get ' : 
  Methods:
    Get(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Get(Int64, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.io.GroupedRandomAccessSource: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Collections.Generic.ICollection`1[iTextSharp.text.io.IRandomAccessSource]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.io.IRandomAccessSource
    System.IDisposable
  Properties:
    Int64 Length 'get ' : 
  Methods:
    Get(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Get(Int64, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.io.IndependentRandomAccessSource: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.io.IRandomAccessSource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.io.IRandomAccessSource
    System.IDisposable
  Properties:
    Int64 Length 'get ' : 
  Methods:
    Get(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Get(Int64, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.io.RAFRandomAccessSource: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.FileStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.io.IRandomAccessSource
    System.IDisposable
  Properties:
    Int64 Length 'get ' : 
  Methods:
    Get(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Get(Int64, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.io.RandomAccessSourceFactory: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetForceRead(Boolean): PrivateScope, Public, HideBySig
    SetExclusivelyLockFile(Boolean): PrivateScope, Public, HideBySig
    CreateSource(Byte[]): PrivateScope, Public, HideBySig
    CreateSource(FileStream): PrivateScope, Public, HideBySig
    CreateSource(Uri): PrivateScope, Public, HideBySig
    CreateSource(Stream): PrivateScope, Public, HideBySig
    CreateBestSource(String): PrivateScope, Public, HideBySig
    CreateRanged(IRandomAccessSource, IList`1): PrivateScope, Public, HideBySig
Class iTextSharp.text.io.RASInputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(iTextSharp.text.io.IRandomAccessSource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.io.StreamUtil: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Collections.Generic.List`1[System.Object] resourceSearch : Assembly, Static
  Methods:
    InputStreamToArray(Stream): PrivateScope, Public, Static, HideBySig
    CopyBytes(IRandomAccessSource, Int64, Int64, Stream): PrivateScope, Public, Static, HideBySig
    AddToResourceSearch(Object): PrivateScope, Public, Static, HideBySig
    GetResourceStream(String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.io.WindowRandomAccessSource: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.io.IRandomAccessSource, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.io.IRandomAccessSource, Int64, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.io.IRandomAccessSource
    System.IDisposable
  Properties:
    Int64 Length 'get ' : 
  Methods:
    Get(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Get(Int64, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.IRtfElementInterface: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
Interface iTextSharp.text.ISplitCharacter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    IsSplitCharacter(Int32, Int32, Int32, Char[], PdfChunk[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.Jpeg: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Image
    Void .ctor(iTextSharp.text.Image): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32[] VALID_MARKERS : Public, Static
    Int32[] UNSUPPORTED_MARKERS : Public, Static
    Int32[] NOPARAM_MARKERS : Public, Static
    Byte[] JFIF_ID : Public, Static
    Byte[] PS_8BIM_RESO : Public, Static, InitOnly
    Int32 NOT_A_MARKER = -1 : Public, Static, Literal, HasDefault
    Int32 VALID_MARKER = 0 : Public, Static, Literal, HasDefault
    Int32 UNSUPPORTED_MARKER = 1 : Public, Static, Literal, HasDefault
    Int32 NOPARAM_MARKER = 2 : Public, Static, Literal, HasDefault
    Int32 M_APP0 = 224 : Public, Static, Literal, HasDefault
    Int32 M_APP2 = 226 : Public, Static, Literal, HasDefault
    Int32 M_APPE = 238 : Public, Static, Literal, HasDefault
    Int32 M_APPD = 237 : Public, Static, Literal, HasDefault
Class iTextSharp.text.Jpeg2000: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Image
    Void .ctor(iTextSharp.text.Image): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 JP2_JP = 1783636000 : Public, Static, Literal, HasDefault
    Int32 JP2_IHDR = 1768449138 : Public, Static, Literal, HasDefault
    Int32 JPIP_JPIP = 1785751920 : Public, Static, Literal, HasDefault
    Int32 JP2_FTYP = 1718909296 : Public, Static, Literal, HasDefault
    Int32 JP2_JP2H = 1785737832 : Public, Static, Literal, HasDefault
    Int32 JP2_COLR = 1668246642 : Public, Static, Literal, HasDefault
    Int32 JP2_JP2C = 1785737827 : Public, Static, Literal, HasDefault
    Int32 JP2_URL = 1970433056 : Public, Static, Literal, HasDefault
    Int32 JP2_DBTL = 1685348972 : Public, Static, Literal, HasDefault
    Int32 JP2_BPCC = 1651532643 : Public, Static, Literal, HasDefault
    Int32 JP2_JP2 = 1785737760 : Public, Static, Literal, HasDefault
  Methods:
    Jp2_read_boxhdr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNumOfComps(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBpcBoxData(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetColorSpecBoxes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsJp2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.Jpeg2000+ColorSpecBox: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :System.Collections.Generic.List`1[System.Nullable`1[System.Int32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetMeth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPrec(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetApprox(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEnumCs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetColorProfile(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColorProfile(Byte[]): PrivateScope, Assembly, HideBySig
Class com.itextpdf.text.pdf.ListBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.ListItem, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.interfaces.IAccessibleElement
  Properties:
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    iTextSharp.text.AccessibleElementId ID 'get set' : 
    Boolean IsInline 'get ' : 
  Methods:
    GetAccessibleAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessibleAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Role(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ID(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.Paragraph: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Phrase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Chunk): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, iTextSharp.text.Chunk): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, iTextSharp.text.Font): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, System.String, iTextSharp.text.Font): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Phrase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.api.IIndentable
    iTextSharp.text.api.ISpaceable
    iTextSharp.text.pdf.interfaces.IAccessibleElement
  Properties:
    Int32 Type 'get ' : 
    Int32 Alignment 'get set' : 
    Single IndentationLeft 'get set' : 
    Single IndentationRight 'get set' : 
    Single SpacingBefore 'get set' : 
    Single SpacingAfter 'get set' : 
    Boolean KeepTogether 'get set' : 
    Single FirstLineIndent 'get set' : 
    Single ExtraParagraphSpace 'get set' : 
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    iTextSharp.text.AccessibleElementId ID 'get set' : 
    Boolean IsInline 'get ' : 
    Single PaddingTop 'get set' : 
  Methods:
    CloneShallow(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    cloneShallow(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    BreakUp(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    breakUp(): PrivateScope, Public, HideBySig (Obsolete)
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Add(IElement): PrivateScope, Public, Virtual, HideBySig
    get_Alignment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Alignment(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IndentationLeft(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IndentationLeft(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IndentationRight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IndentationRight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SpacingBefore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SpacingBefore(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SpacingAfter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SpacingAfter(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_KeepTogether(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_KeepTogether(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FirstLineIndent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FirstLineIndent(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExtraParagraphSpace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ExtraParagraphSpace(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetAccessibleAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessibleAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Role(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ID(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PaddingTop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PaddingTop(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.ListItem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Paragraph
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Chunk): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, iTextSharp.text.Font): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, iTextSharp.text.Chunk): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, System.String, iTextSharp.text.Font): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Phrase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Type 'get ' : 
    iTextSharp.text.Chunk ListSymbol 'get set' : 
    com.itextpdf.text.pdf.ListBody ListBody 'get ' : 
    com.itextpdf.text.pdf.ListLabel ListLabel 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CloneShallow(Boolean): PrivateScope, Public, Virtual, HideBySig
    get_ListSymbol(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ListSymbol(Chunk): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetIndentationLeft(Single, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AdjustListSymbolFont(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ListBody(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ListLabel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class com.itextpdf.text.pdf.ListLabel: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :com.itextpdf.text.pdf.ListBody
  Properties:
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    Single Indentation 'get set' : 
    Boolean TagLabelContent 'get set' :  (Obsolete)
    Boolean IsInline 'get ' : 
  Methods:
    GetAccessibleProperty(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessibleProperty(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleProperties(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Role(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Indentation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Indentation(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TagLabelContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TagLabelContent(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class iTextSharp.text.log.CounterFactory: AutoLayout, AnsiClass, Class, Public
  Methods:
    getInstance(): PrivateScope, Public, Static, HideBySig
    GetCounter(Type): PrivateScope, Public, Static, HideBySig
    GetCounter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCounter(ICounter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.log.ICounter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetCounter(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Read(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Written(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.log.DefaultCounter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.log.ICounter
  Methods:
    GetCounter(Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Read(Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Written(Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.log.NoOpCounter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.log.ICounter
  Methods:
    GetCounter(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Written(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.log.SysoCounter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.log.ICounter
  Methods:
    GetCounter(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Written(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.MarkedObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
    Void .ctor(iTextSharp.text.IElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.IElement
  Properties:
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
    Int32 Type 'get ' : 
    System.util.Properties MarkupAttributes 'get ' : 
  Methods:
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNestable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_MarkupAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetMarkupAttribute(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.MarkedSection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :iTextSharp.text.MarkedObject
    Void .ctor(iTextSharp.text.Section): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.api.IIndentable
  Properties:
    iTextSharp.text.MarkedObject Title 'get set' : 
    Int32 NumberDepth 'set' : 
    Single IndentationLeft 'get set' : 
    Single IndentationRight 'get set' : 
    Single Indentation 'set' : 
    Boolean BookmarkOpen 'set' : 
    Boolean TriggerNewPage 'set' : 
    System.String BookmarkTitle 'set' : 
  Methods:
    Add(Int32, IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig
    AddAll(ICollection`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSection(Single, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSection(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSection(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Title(MarkedObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Title(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NumberDepth(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IndentationLeft(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IndentationLeft(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IndentationRight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IndentationRight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Indentation(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BookmarkOpen(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TriggerNewPage(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BookmarkTitle(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    NewPage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.PageSize: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.Rectangle LETTER : Public, Static, InitOnly
    iTextSharp.text.Rectangle NOTE : Public, Static, InitOnly
    iTextSharp.text.Rectangle LEGAL : Public, Static, InitOnly
    iTextSharp.text.Rectangle TABLOID : Public, Static, InitOnly
    iTextSharp.text.Rectangle EXECUTIVE : Public, Static, InitOnly
    iTextSharp.text.Rectangle POSTCARD : Public, Static, InitOnly
    iTextSharp.text.Rectangle A0 : Public, Static, InitOnly
    iTextSharp.text.Rectangle A1 : Public, Static, InitOnly
    iTextSharp.text.Rectangle A2 : Public, Static, InitOnly
    iTextSharp.text.Rectangle A3 : Public, Static, InitOnly
    iTextSharp.text.Rectangle A4 : Public, Static, InitOnly
    iTextSharp.text.Rectangle A5 : Public, Static, InitOnly
    iTextSharp.text.Rectangle A6 : Public, Static, InitOnly
    iTextSharp.text.Rectangle A7 : Public, Static, InitOnly
    iTextSharp.text.Rectangle A8 : Public, Static, InitOnly
    iTextSharp.text.Rectangle A9 : Public, Static, InitOnly
    iTextSharp.text.Rectangle A10 : Public, Static, InitOnly
    iTextSharp.text.Rectangle B0 : Public, Static, InitOnly
    iTextSharp.text.Rectangle B1 : Public, Static, InitOnly
    iTextSharp.text.Rectangle B2 : Public, Static, InitOnly
    iTextSharp.text.Rectangle B3 : Public, Static, InitOnly
    iTextSharp.text.Rectangle B4 : Public, Static, InitOnly
    iTextSharp.text.Rectangle B5 : Public, Static, InitOnly
    iTextSharp.text.Rectangle B6 : Public, Static, InitOnly
    iTextSharp.text.Rectangle B7 : Public, Static, InitOnly
    iTextSharp.text.Rectangle B8 : Public, Static, InitOnly
    iTextSharp.text.Rectangle B9 : Public, Static, InitOnly
    iTextSharp.text.Rectangle B10 : Public, Static, InitOnly
    iTextSharp.text.Rectangle ARCH_E : Public, Static, InitOnly
    iTextSharp.text.Rectangle ARCH_D : Public, Static, InitOnly
    iTextSharp.text.Rectangle ARCH_C : Public, Static, InitOnly
    iTextSharp.text.Rectangle ARCH_B : Public, Static, InitOnly
    iTextSharp.text.Rectangle ARCH_A : Public, Static, InitOnly
    iTextSharp.text.Rectangle FLSA : Public, Static, InitOnly
    iTextSharp.text.Rectangle FLSE : Public, Static, InitOnly
    iTextSharp.text.Rectangle HALFLETTER : Public, Static, InitOnly
    iTextSharp.text.Rectangle _11X17 : Public, Static, InitOnly
    iTextSharp.text.Rectangle ID_1 : Public, Static, InitOnly
    iTextSharp.text.Rectangle ID_2 : Public, Static, InitOnly
    iTextSharp.text.Rectangle ID_3 : Public, Static, InitOnly
    iTextSharp.text.Rectangle LEDGER : Public, Static, InitOnly
    iTextSharp.text.Rectangle CROWN_QUARTO : Public, Static, InitOnly
    iTextSharp.text.Rectangle LARGE_CROWN_QUARTO : Public, Static, InitOnly
    iTextSharp.text.Rectangle DEMY_QUARTO : Public, Static, InitOnly
    iTextSharp.text.Rectangle ROYAL_QUARTO : Public, Static, InitOnly
    iTextSharp.text.Rectangle CROWN_OCTAVO : Public, Static, InitOnly
    iTextSharp.text.Rectangle LARGE_CROWN_OCTAVO : Public, Static, InitOnly
    iTextSharp.text.Rectangle DEMY_OCTAVO : Public, Static, InitOnly
    iTextSharp.text.Rectangle ROYAL_OCTAVO : Public, Static, InitOnly
    iTextSharp.text.Rectangle SMALL_PAPERBACK : Public, Static, InitOnly
    iTextSharp.text.Rectangle PENGUIN_SMALL_PAPERBACK : Public, Static, InitOnly
    iTextSharp.text.Rectangle PENGUIN_LARGE_PAPERBACK : Public, Static, InitOnly
    iTextSharp.text.Rectangle LETTER_LANDSCAPE : Public, Static, InitOnly (Obsolete)
    iTextSharp.text.Rectangle LEGAL_LANDSCAPE : Public, Static, InitOnly (Obsolete)
    iTextSharp.text.Rectangle A4_LANDSCAPE : Public, Static, InitOnly (Obsolete)
  Methods:
    GetRectangle(String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.AcroFields: AutoLayout, AnsiClass, Class, Public
    Void .ctor(iTextSharp.text.pdf.PdfReader, iTextSharp.text.pdf.PdfWriter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.PdfReader reader : Assembly
    iTextSharp.text.pdf.PdfWriter writer : Assembly
    System.Collections.Generic.IDictionary`2[System.String,iTextSharp.text.pdf.AcroFields+Item] fields : Assembly
    Int32 DA_FONT = 0 : Public, Static, Literal, HasDefault
    Int32 DA_SIZE = 1 : Public, Static, Literal, HasDefault
    Int32 DA_COLOR = 2 : Public, Static, Literal, HasDefault
    Int32 FIELD_TYPE_NONE = 0 : Public, Static, Literal, HasDefault
    Int32 FIELD_TYPE_PUSHBUTTON = 1 : Public, Static, Literal, HasDefault
    Int32 FIELD_TYPE_CHECKBOX = 2 : Public, Static, Literal, HasDefault
    Int32 FIELD_TYPE_RADIOBUTTON = 3 : Public, Static, Literal, HasDefault
    Int32 FIELD_TYPE_TEXT = 4 : Public, Static, Literal, HasDefault
    Int32 FIELD_TYPE_LIST = 5 : Public, Static, Literal, HasDefault
    Int32 FIELD_TYPE_COMBO = 6 : Public, Static, Literal, HasDefault
    Int32 FIELD_TYPE_SIGNATURE = 7 : Public, Static, Literal, HasDefault
  Properties:
    System.Collections.Generic.IDictionary`2[System.String,iTextSharp.text.pdf.AcroFields+Item] Fields 'get ' : 
    Boolean GenerateAppearances 'get set' : 
    Int32 TotalRevisions 'get ' : 
    System.Collections.Generic.IDictionary`2[System.String,iTextSharp.text.pdf.TextField] FieldCache 'get set' : 
    System.Collections.Generic.List`1[iTextSharp.text.pdf.BaseFont] SubstitutionFonts 'get set' : 
    iTextSharp.text.pdf.XfaForm Xfa 'get ' : 
  Methods:
    Fill(): PrivateScope, Assembly, HideBySig
    GetAppearanceStates(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetListOptionExport(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetListOptionDisplay(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetListOption(String, String[], String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldType(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExportAsFdf(FdfWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RenameField(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SplitDAelements(String): PrivateScope, Public, Static, HideBySig
    DecodeGenericDictionary(PdfDictionary, BaseField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAppearance(PdfDictionary, String[], String): PrivateScope, Assembly, HideBySig
    GetAppearance(PdfDictionary, String, String): PrivateScope, Assembly, HideBySig
    GetMKColor(PdfArray): PrivateScope, Assembly, HideBySig
    GetFieldRichValue(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetField(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetListSelection(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFieldProperty(String, String, Object, Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFieldProperty(String, String, Int32, Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MergeXfaData(XmlNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFields(FdfReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFields(XfdfReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RegenerateField(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetField(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetField(String, String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFieldRichValue(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetField(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetField(String, String, String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetListSelection(String, String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsInAP(PdfDictionary, PdfName): PrivateScope, Assembly, HideBySig
    get_Fields(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetFieldItem(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTranslatedFieldName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldPositions(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveFieldsFromPage(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveField(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveField(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_GenerateAppearances(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GenerateAppearances(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ClearSignatureField(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSignatureNames(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBlankSignatureNames(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSignatureDictionary(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNormalAppearance(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SignatureCoversWholeDocument(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VerifySignature(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_TotalRevisions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetRevision(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExtractRevision(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_FieldCache(IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FieldCache(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetExtraMargin(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSubstitutionFont(BaseFont): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_SubstitutionFonts(List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SubstitutionFonts(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Xfa(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    RemoveXfa(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNewPushbuttonFromField(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNewPushbuttonFromField(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReplacePushbuttonField(String, PdfFormField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReplacePushbuttonField(String, PdfFormField, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoesSignatureFieldExist(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.AcroFields+Item: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 WRITE_MERGED = 1 : Public, Static, Literal, HasDefault
    Int32 WRITE_WIDGET = 2 : Public, Static, Literal, HasDefault
    Int32 WRITE_VALUE = 4 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Size 'get ' : 
  Methods:
    WriteToAll(PdfName, PdfObject, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MarkUsed(AcroFields, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(Int32): PrivateScope, Assembly, HideBySig
    GetValue(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddValue(PdfDictionary): PrivateScope, Assembly, HideBySig
    GetWidget(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddWidget(PdfDictionary): PrivateScope, Assembly, HideBySig
    GetWidgetRef(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddWidgetRef(PdfIndirectReference): PrivateScope, Assembly, HideBySig
    GetMerged(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddMerged(PdfDictionary): PrivateScope, Assembly, HideBySig
    GetPage(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPage(Int32): PrivateScope, Assembly, HideBySig
    ForcePage(Int32, Int32): PrivateScope, Assembly, HideBySig
    GetTabOrder(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddTabOrder(Int32): PrivateScope, Assembly, HideBySig
Class iTextSharp.text.pdf.AcroFields+FieldPosition: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 page : Public
    iTextSharp.text.Rectangle position : Public
Class iTextSharp.text.pdf.codec.wmf.Point: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 x : Public
    Int32 y : Public
Class iTextSharp.text.pdf.ExtendedColor: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :iTextSharp.text.BaseColor
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 TYPE_RGB = 0 : Public, Static, Literal, HasDefault
    Int32 TYPE_GRAY = 1 : Public, Static, Literal, HasDefault
    Int32 TYPE_CMYK = 2 : Public, Static, Literal, HasDefault
    Int32 TYPE_SEPARATION = 3 : Public, Static, Literal, HasDefault
    Int32 TYPE_PATTERN = 4 : Public, Static, Literal, HasDefault
    Int32 TYPE_SHADING = 5 : Public, Static, Literal, HasDefault
    Int32 TYPE_DEVICEN = 6 : Public, Static, Literal, HasDefault
    Int32 TYPE_LAB = 7 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Type 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetType(Object): PrivateScope, Public, Static, HideBySig
    Normalize(Single): PrivateScope, Assembly, Static, HideBySig
Class iTextSharp.text.pdf.DeviceNColor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.ExtendedColor
    Void .ctor(iTextSharp.text.pdf.PdfDeviceNColor, Single[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfDeviceNColor PdfDeviceNColor 'get ' : 
    Single[] Tints 'get ' : 
  Methods:
    get_PdfDeviceNColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Tints(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.fonts.cmaps.IdentityToUnicode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetMapFromOrdering(String): PrivateScope, Public, Static, HideBySig
Interface iTextSharp.text.pdf.ICachedColorSpace: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetPdfObject(PdfWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Equals(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.pdf.IPdfSpecialColorSpace: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetColorantDetails(PdfWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.LabColor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.ExtendedColor
    Void .ctor(iTextSharp.text.pdf.PdfLabColor, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfLabColor LabColorSpace 'get ' : 
    Single L   'get ' : 
    Single A   'get ' : 
    Single B   'get ' : 
  Methods:
    get_LabColorSpace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_L(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_A(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_B(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToRgb(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToCmyk(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
Class iTextSharp.text.pdf.ArabicLigaturizer: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 ar_nothing = 0 : Public, Static, Literal, HasDefault
    Int32 ar_novowel = 1 : Public, Static, Literal, HasDefault
    Int32 ar_composedtashkeel = 4 : Public, Static, Literal, HasDefault
    Int32 ar_lig = 8 : Public, Static, Literal, HasDefault
    Int32 DIGITS_EN2AN = 32 : Public, Static, Literal, HasDefault
    Int32 DIGITS_AN2EN = 64 : Public, Static, Literal, HasDefault
    Int32 DIGITS_EN2AN_INIT_LR = 96 : Public, Static, Literal, HasDefault
    Int32 DIGITS_EN2AN_INIT_AL = 128 : Public, Static, Literal, HasDefault
    Int32 DIGITS_MASK = 224 : Public, Static, Literal, HasDefault
    Int32 DIGIT_TYPE_AN = 0 : Public, Static, Literal, HasDefault
    Int32 DIGIT_TYPE_AN_EXTENDED = 256 : Public, Static, Literal, HasDefault
    Int32 DIGIT_TYPE_MASK = 256 : Public, Static, Literal, HasDefault
  Methods:
    Doublelig(StringBuilder, Int32): PrivateScope, Assembly, Static, HideBySig
    Shape(Char[], StringBuilder, Int32): PrivateScope, Assembly, Static, HideBySig
    Arabic_shape(Char[], Int32, Int32, Char[], Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    ProcessNumbers(Char[], Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    ShapeToArabicDigitsWithContext(Char[], Int32, Int32, Char, Boolean): PrivateScope, Assembly, Static, HideBySig
    TryGetReverseMapping(Char, Char&(Out)): PrivateScope, Public, Static, HideBySig
    Process(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsRTL(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.BadPdfFormatException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.Barcode: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Int32 EAN13 = 1 : Public, Static, Literal, HasDefault
    Int32 EAN8 = 2 : Public, Static, Literal, HasDefault
    Int32 UPCA = 3 : Public, Static, Literal, HasDefault
    Int32 UPCE = 4 : Public, Static, Literal, HasDefault
    Int32 SUPP2 = 5 : Public, Static, Literal, HasDefault
    Int32 SUPP5 = 6 : Public, Static, Literal, HasDefault
    Int32 POSTNET = 7 : Public, Static, Literal, HasDefault
    Int32 PLANET = 8 : Public, Static, Literal, HasDefault
    Int32 CODE128 = 9 : Public, Static, Literal, HasDefault
    Int32 CODE128_UCC = 10 : Public, Static, Literal, HasDefault
    Int32 CODE128_RAW = 11 : Public, Static, Literal, HasDefault
    Int32 CODABAR = 12 : Public, Static, Literal, HasDefault
  Properties:
    Single X   'get set' : 
    Single N   'get set' : 
    iTextSharp.text.pdf.BaseFont Font 'get set' : 
    Single Size 'get set' : 
    Single Baseline 'get set' : 
    Single BarHeight 'get set' : 
    Int32 TextAlignment 'get set' : 
    Boolean GenerateChecksum 'get set' : 
    Boolean ChecksumText 'get set' : 
    Boolean StartStopText 'get set' : 
    Boolean Extended 'get set' : 
    System.String Code 'get set' : 
    Boolean GuardBars 'get set' : 
    Int32 CodeType 'get set' : 
    iTextSharp.text.Rectangle BarcodeSize 'get ' : 
    Single InkSpreading 'get set' : 
    System.String AltText 'get set' : 
  Methods:
    get_X(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_X(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_N(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_N(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Font(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Font(BaseFont): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Size(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Baseline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Baseline(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BarHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BarHeight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TextAlignment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TextAlignment(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_GenerateChecksum(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GenerateChecksum(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ChecksumText(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ChecksumText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_StartStopText(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_StartStopText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Extended(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Extended(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Code(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Code(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_GuardBars(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GuardBars(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CodeType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CodeType(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BarcodeSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_InkSpreading(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_InkSpreading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    PlaceBarcode(PdfContentByte, BaseColor, BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateTemplateWithBarcode(PdfContentByte, BaseColor, BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateImageWithBarcode(PdfContentByte, BaseColor, BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_AltText(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AltText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreateDrawingImage(Color, Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.Barcode128: AutoLayout, AnsiClass, Class, Public
  :iTextSharp.text.pdf.Barcode
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Char CODE_AB_TO_C = c : Public, Static, Literal, HasDefault
    Char CODE_AC_TO_B = d : Public, Static, Literal, HasDefault
    Char CODE_BC_TO_A = e : Public, Static, Literal, HasDefault
    Char FNC1_INDEX = f : Public, Static, Literal, HasDefault
    Char START_A = g : Public, Static, Literal, HasDefault
    Char START_B = h : Public, Static, Literal, HasDefault
    Char START_C = i : Public, Static, Literal, HasDefault
    Char FNC1 = Ê : Public, Static, Literal, HasDefault
    Char DEL = Ã : Public, Static, Literal, HasDefault
    Char FNC3 = Ä : Public, Static, Literal, HasDefault
    Char FNC2 = Å : Public, Static, Literal, HasDefault
    Char SHIFT = Æ : Public, Static, Literal, HasDefault
    Char CODE_C = Ç : Public, Static, Literal, HasDefault
    Char CODE_A = È : Public, Static, Literal, HasDefault
    Char FNC4 = È : Public, Static, Literal, HasDefault
    Char STARTA = Ë : Public, Static, Literal, HasDefault
    Char STARTB = Ì : Public, Static, Literal, HasDefault
    Char STARTC = Í : Public, Static, Literal, HasDefault
  Properties:
    Barcode128CodeSet CodeSet 'get set' : 
    iTextSharp.text.Rectangle BarcodeSize 'get ' : 
    System.String Code 'set' : 
  Methods:
    GetStartSymbol(Barcode128CodeSet): PrivateScope, Public, Static, HideBySig
    get_CodeSet(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CodeSet(Barcode128CodeSet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    RemoveFNC1(String): PrivateScope, Public, Static, HideBySig
    GetHumanReadableUCCEAN(String): PrivateScope, Public, Static, HideBySig
    IsNextDigits(String, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    GetPackedRawDigits(String, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    GetRawText(String, Boolean, Barcode128CodeSet): PrivateScope, Public, Static, HideBySig
    GetRawText(String, Boolean): PrivateScope, Public, Static, HideBySig
    GetBarsCode128Raw(String): PrivateScope, Public, Static, HideBySig
    get_BarcodeSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    PlaceBarcode(PdfContentByte, BaseColor, BaseColor): PrivateScope, Public, Virtual, HideBySig
    CreateDrawingImage(Color, Color): PrivateScope, Public, Virtual, HideBySig
    set_Code(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct iTextSharp.text.pdf.Barcode128+Barcode128CodeSet: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Barcode128CodeSet A = 0 : Public, Static, Literal, HasDefault
    Barcode128CodeSet B = 1 : Public, Static, Literal, HasDefault
    Barcode128CodeSet C = 2 : Public, Static, Literal, HasDefault
    Barcode128CodeSet AUTO = 3 : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.Barcode39: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.Barcode
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.Rectangle BarcodeSize 'get ' : 
  Methods:
    GetBarsCode39(String): PrivateScope, Public, Static, HideBySig
    GetCode39Ex(String): PrivateScope, Public, Static, HideBySig
    GetChecksum(String): PrivateScope, Assembly, Static, HideBySig
    get_BarcodeSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    PlaceBarcode(PdfContentByte, BaseColor, BaseColor): PrivateScope, Public, Virtual, HideBySig
    CreateDrawingImage(Color, Color): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.BarcodeCodabar: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.Barcode
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.Rectangle BarcodeSize 'get ' : 
  Methods:
    GetBarsCodabar(String): PrivateScope, Public, Static, HideBySig
    CalculateChecksum(String): PrivateScope, Public, Static, HideBySig
    get_BarcodeSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    PlaceBarcode(PdfContentByte, BaseColor, BaseColor): PrivateScope, Public, Virtual, HideBySig
    CreateDrawingImage(Color, Color): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.BarcodeDatamatrix: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 DM_NO_ERROR = 0 : Public, Static, Literal, HasDefault
    Int32 DM_ERROR_TEXT_TOO_BIG = 1 : Public, Static, Literal, HasDefault
    Int32 DM_ERROR_INVALID_SQUARE = 3 : Public, Static, Literal, HasDefault
    Int32 DM_ERROR_EXTENSION = 5 : Public, Static, Literal, HasDefault
    Int32 DM_AUTO = 0 : Public, Static, Literal, HasDefault
    Int32 DM_ASCII = 1 : Public, Static, Literal, HasDefault
    Int32 DM_C40 = 2 : Public, Static, Literal, HasDefault
    Int32 DM_TEXT = 3 : Public, Static, Literal, HasDefault
    Int32 DM_B256 = 4 : Public, Static, Literal, HasDefault
    Int32 DM_X12 = 5 : Public, Static, Literal, HasDefault
    Int32 DM_X21 = 5 : Public, Static, Literal, HasDefault
    Int32 DM_EDIFACT = 6 : Public, Static, Literal, HasDefault
    Int32 DM_RAW = 7 : Public, Static, Literal, HasDefault
    Int32 DM_EXTENSION = 32 : Public, Static, Literal, HasDefault
    Int32 DM_TEST = 64 : Public, Static, Literal, HasDefault
    System.String DEFAULT_DATA_MATRIX_ENCODING = iso-8859-1 : Public, Static, Literal, HasDefault
  Properties:
    Byte[] BitImage 'get ' : 
    Int32 Height 'get set' : 
    Int32 Width 'get set' : 
    Int32 Ws   'get set' : 
    Int32 Options 'get set' : 
    Boolean ForceSquareSize 'set' : 
  Methods:
    Generate(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Generate(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Generate(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PlaceBarcode(PdfContentByte, BaseColor, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateImage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateDrawingImage(Color, Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_BitImage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Height(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Width(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Ws(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Ws(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Options(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Options(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ForceSquareSize(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.BarcodeDatamatrix+Placement: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  Methods:
    DoPlacement(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
Class iTextSharp.text.pdf.BarcodeDatamatrix+ReedSolomon: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GenerateECC(Byte[], Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
Class iTextSharp.text.pdf.BarcodeEAN: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.Barcode
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.Rectangle BarcodeSize 'get ' : 
  Methods:
    CalculateEANParity(String): PrivateScope, Public, Static, HideBySig
    ConvertUPCAtoUPCE(String): PrivateScope, Public, Static, HideBySig
    GetBarsEAN13(String): PrivateScope, Public, Static, HideBySig
    GetBarsEAN8(String): PrivateScope, Public, Static, HideBySig
    GetBarsUPCE(String): PrivateScope, Public, Static, HideBySig
    GetBarsSupplemental2(String): PrivateScope, Public, Static, HideBySig
    GetBarsSupplemental5(String): PrivateScope, Public, Static, HideBySig
    get_BarcodeSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    PlaceBarcode(PdfContentByte, BaseColor, BaseColor): PrivateScope, Public, Virtual, HideBySig
    CreateDrawingImage(Color, Color): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.BarcodeEANSUPP: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.Barcode
    Void .ctor(iTextSharp.text.pdf.Barcode, iTextSharp.text.pdf.Barcode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.Rectangle BarcodeSize 'get ' : 
  Methods:
    get_BarcodeSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    PlaceBarcode(PdfContentByte, BaseColor, BaseColor): PrivateScope, Public, Virtual, HideBySig
    CreateDrawingImage(Color, Color): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.BarcodeInter25: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.Barcode
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.Rectangle BarcodeSize 'get ' : 
  Methods:
    KeepNumbers(String): PrivateScope, Public, Static, HideBySig
    GetChecksum(String): PrivateScope, Public, Static, HideBySig
    GetBarsInter25(String): PrivateScope, Public, Static, HideBySig
    get_BarcodeSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    PlaceBarcode(PdfContentByte, BaseColor, BaseColor): PrivateScope, Public, Virtual, HideBySig
    CreateDrawingImage(Color, Color): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.BarcodePDF417: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 PDF417_USE_ASPECT_RATIO = 0 : Public, Static, Literal, HasDefault
    Int32 PDF417_FIXED_RECTANGLE = 1 : Public, Static, Literal, HasDefault
    Int32 PDF417_FIXED_COLUMNS = 2 : Public, Static, Literal, HasDefault
    Int32 PDF417_FIXED_ROWS = 4 : Public, Static, Literal, HasDefault
    Int32 PDF417_AUTO_ERROR_LEVEL = 0 : Public, Static, Literal, HasDefault
    Int32 PDF417_USE_ERROR_LEVEL = 16 : Public, Static, Literal, HasDefault
    Int32 PDF417_FORCE_BINARY = 32 : Public, Static, Literal, HasDefault
    Int32 PDF417_USE_RAW_CODEWORDS = 64 : Public, Static, Literal, HasDefault
    Int32 PDF417_INVERT_BITMAP = 128 : Public, Static, Literal, HasDefault
    Int32 PDF417_USE_MACRO = 256 : Public, Static, Literal, HasDefault
  Properties:
    Int32 MacroSegmentId 'set' : 
    Int32 MacroSegmentCount 'set' : 
    System.String MacroFileId 'set' : 
    Byte[] OutBits 'get ' : 
    Int32 BitColumns 'get ' : 
    Int32 CodeRows 'get set' : 
    Int32 CodeColumns 'get set' : 
    Int32[] Codewords 'get ' : 
    Int32 LenCodewords 'get set' : 
    Int32 ErrorLevel 'get set' : 
    Byte[] Text 'get set' : 
    Int32 Options 'get set' : 
    Single AspectRatio 'get set' : 
    Single YHeight 'get set' : 
  Methods:
    set_MacroSegmentId(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MacroSegmentCount(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MacroFileId(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetDefaultParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ByteCompaction(Int32, Int32): PrivateScope, Assembly, HideBySig
    BreakString(): PrivateScope, Assembly, HideBySig
    PaintCode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetImage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateDrawingImage(Color, Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_OutBits(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BitColumns(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CodeRows(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CodeRows(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CodeColumns(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CodeColumns(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Codewords(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LenCodewords(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LenCodewords(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ErrorLevel(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ErrorLevel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Text(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Text(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetText(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Options(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Options(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AspectRatio(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AspectRatio(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_YHeight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_YHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    PlaceBarcode(PdfContentByte, BaseColor, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBarcodeSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.BarcodePostnet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.Barcode
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.Rectangle BarcodeSize 'get ' : 
  Methods:
    GetBarsPostnet(String): PrivateScope, Public, Static, HideBySig
    get_BarcodeSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    PlaceBarcode(PdfContentByte, BaseColor, BaseColor): PrivateScope, Public, Virtual, HideBySig
    CreateDrawingImage(Color, Color): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.BarcodeQRCode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, Int32, Int32, System.Collections.Generic.IDictionary`2[iTextSharp.text.pdf.qrcode.EncodeHintType,System.Object]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetImage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PlaceBarcode(PdfContentByte, BaseColor, Single): PrivateScope, Public, HideBySig
    GetBarcodeSize(): PrivateScope, Public, HideBySig
Class iTextSharp.text.pdf.BaseField: AutoLayout, AnsiClass, Class, Public, Abstract
    Void .ctor(iTextSharp.text.pdf.PdfWriter, iTextSharp.text.Rectangle, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single BORDER_WIDTH_THIN = 1 : Public, Static, Literal, HasDefault
    Single BORDER_WIDTH_MEDIUM = 2 : Public, Static, Literal, HasDefault
    Single BORDER_WIDTH_THICK = 3 : Public, Static, Literal, HasDefault
    Int32 VISIBLE = 0 : Public, Static, Literal, HasDefault
    Int32 HIDDEN = 1 : Public, Static, Literal, HasDefault
    Int32 VISIBLE_BUT_DOES_NOT_PRINT = 2 : Public, Static, Literal, HasDefault
    Int32 HIDDEN_BUT_PRINTABLE = 3 : Public, Static, Literal, HasDefault
    Int32 READ_ONLY = 1 : Public, Static, Literal, HasDefault
    Int32 REQUIRED = 2 : Public, Static, Literal, HasDefault
    Int32 MULTILINE = 4096 : Public, Static, Literal, HasDefault
    Int32 DO_NOT_SCROLL = 8388608 : Public, Static, Literal, HasDefault
    Int32 PASSWORD = 8192 : Public, Static, Literal, HasDefault
    Int32 FILE_SELECTION = 1048576 : Public, Static, Literal, HasDefault
    Int32 DO_NOT_SPELL_CHECK = 4194304 : Public, Static, Literal, HasDefault
    Int32 EDIT = 262144 : Public, Static, Literal, HasDefault
    Int32 MULTISELECT = 2097152 : Public, Static, Literal, HasDefault
    Int32 COMB = 16777216 : Public, Static, Literal, HasDefault
  Properties:
    Single BorderWidth 'get set' : 
    Int32 BorderStyle 'get set' : 
    iTextSharp.text.BaseColor BorderColor 'get set' : 
    iTextSharp.text.BaseColor BackgroundColor 'get set' : 
    iTextSharp.text.BaseColor TextColor 'get set' : 
    iTextSharp.text.pdf.BaseFont Font 'get set' : 
    Single FontSize 'get set' : 
    Int32 Alignment 'get set' : 
    System.String Text 'get set' : 
    iTextSharp.text.Rectangle Box 'get set' : 
    Int32 Rotation 'get set' : 
    Int32 Visibility 'get set' : 
    System.String FieldName 'get set' : 
    Int32 Options 'get set' : 
    Int32 MaxCharacterLength 'get set' : 
    iTextSharp.text.pdf.PdfWriter Writer 'get set' : 
  Methods:
    set_BorderWidth(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BorderWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BorderStyle(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BorderStyle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BorderColor(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BorderColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BackgroundColor(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BackgroundColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TextColor(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TextColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Font(BaseFont): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Font(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FontSize(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FontSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Alignment(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Alignment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Text(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Text(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Box(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Box(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Rotation(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Rotation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetRotationFromPage(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Visibility(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Visibility(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FieldName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FieldName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Options(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Options(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MaxCharacterLength(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MaxCharacterLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Writer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Writer(PdfWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveFields(PdfDictionary, PdfDictionary): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.BaseFont: AutoLayout, AnsiClass, Class, Public, Abstract
  Fields:
    Int32 fontType : Assembly
    Int32[] CHAR_RANGE_LATIN : Public, Static, InitOnly
    Int32[] CHAR_RANGE_ARABIC : Public, Static, InitOnly
    Int32[] CHAR_RANGE_HEBREW : Public, Static, InitOnly
    Int32[] CHAR_RANGE_CYRILLIC : Public, Static, InitOnly
    Double[] DEFAULT_FONT_MATRIX : Public, Static, InitOnly
    System.String COURIER = Courier : Public, Static, Literal, HasDefault
    System.String COURIER_BOLD = Courier-Bold : Public, Static, Literal, HasDefault
    System.String COURIER_OBLIQUE = Courier-Oblique : Public, Static, Literal, HasDefault
    System.String COURIER_BOLDOBLIQUE = Courier-BoldOblique : Public, Static, Literal, HasDefault
    System.String HELVETICA = Helvetica : Public, Static, Literal, HasDefault
    System.String HELVETICA_BOLD = Helvetica-Bold : Public, Static, Literal, HasDefault
    System.String HELVETICA_OBLIQUE = Helvetica-Oblique : Public, Static, Literal, HasDefault
    System.String HELVETICA_BOLDOBLIQUE = Helvetica-BoldOblique : Public, Static, Literal, HasDefault
    System.String SYMBOL = Symbol : Public, Static, Literal, HasDefault
    System.String TIMES_ROMAN = Times-Roman : Public, Static, Literal, HasDefault
    System.String TIMES_BOLD = Times-Bold : Public, Static, Literal, HasDefault
    System.String TIMES_ITALIC = Times-Italic : Public, Static, Literal, HasDefault
    System.String TIMES_BOLDITALIC = Times-BoldItalic : Public, Static, Literal, HasDefault
    System.String ZAPFDINGBATS = ZapfDingbats : Public, Static, Literal, HasDefault
    Int32 ASCENT = 1 : Public, Static, Literal, HasDefault
    Int32 CAPHEIGHT = 2 : Public, Static, Literal, HasDefault
    Int32 DESCENT = 3 : Public, Static, Literal, HasDefault
    Int32 ITALICANGLE = 4 : Public, Static, Literal, HasDefault
    Int32 BBOXLLX = 5 : Public, Static, Literal, HasDefault
    Int32 BBOXLLY = 6 : Public, Static, Literal, HasDefault
    Int32 BBOXURX = 7 : Public, Static, Literal, HasDefault
    Int32 BBOXURY = 8 : Public, Static, Literal, HasDefault
    Int32 AWT_ASCENT = 9 : Public, Static, Literal, HasDefault
    Int32 AWT_DESCENT = 10 : Public, Static, Literal, HasDefault
    Int32 AWT_LEADING = 11 : Public, Static, Literal, HasDefault
    Int32 AWT_MAXADVANCE = 12 : Public, Static, Literal, HasDefault
    Int32 UNDERLINE_POSITION = 13 : Public, Static, Literal, HasDefault
    Int32 UNDERLINE_THICKNESS = 14 : Public, Static, Literal, HasDefault
    Int32 STRIKETHROUGH_POSITION = 15 : Public, Static, Literal, HasDefault
    Int32 STRIKETHROUGH_THICKNESS = 16 : Public, Static, Literal, HasDefault
    Int32 SUBSCRIPT_SIZE = 17 : Public, Static, Literal, HasDefault
    Int32 SUBSCRIPT_OFFSET = 18 : Public, Static, Literal, HasDefault
    Int32 SUPERSCRIPT_SIZE = 19 : Public, Static, Literal, HasDefault
    Int32 SUPERSCRIPT_OFFSET = 20 : Public, Static, Literal, HasDefault
    Int32 WEIGHT_CLASS = 21 : Public, Static, Literal, HasDefault
    Int32 WIDTH_CLASS = 22 : Public, Static, Literal, HasDefault
    Int32 FONT_WEIGHT = 23 : Public, Static, Literal, HasDefault
    Int32 FONT_TYPE_T1 = 0 : Public, Static, Literal, HasDefault
    Int32 FONT_TYPE_TT = 1 : Public, Static, Literal, HasDefault
    Int32 FONT_TYPE_CJK = 2 : Public, Static, Literal, HasDefault
    Int32 FONT_TYPE_TTUNI = 3 : Public, Static, Literal, HasDefault
    Int32 FONT_TYPE_DOCUMENT = 4 : Public, Static, Literal, HasDefault
    Int32 FONT_TYPE_T3 = 5 : Public, Static, Literal, HasDefault
    System.String IDENTITY_H = Identity-H : Public, Static, Literal, HasDefault
    System.String IDENTITY_V = Identity-V : Public, Static, Literal, HasDefault
    System.String CP1250 = Cp1250 : Public, Static, Literal, HasDefault
    System.String CP1252 = Cp1252 : Public, Static, Literal, HasDefault
    System.String CP1257 = Cp1257 : Public, Static, Literal, HasDefault
    System.String WINANSI = Cp1252 : Public, Static, Literal, HasDefault
    System.String MACROMAN = MacRoman : Public, Static, Literal, HasDefault
    Boolean EMBEDDED = True : Public, Static, Literal, HasDefault
    Boolean NOT_EMBEDDED = False : Public, Static, Literal, HasDefault
    Boolean CACHED = True : Public, Static, Literal, HasDefault
    Boolean NOT_CACHED = False : Public, Static, Literal, HasDefault
    System.String RESOURCE_PATH = iTextSharp.text.pdf.fonts. : Public, Static, Literal, HasDefault
    Char CID_NEWLINE = 翿 : Public, Static, Literal, HasDefault
    Char PARAGRAPH_SEPARATOR =   : Public, Static, Literal, HasDefault
    System.String notdef = .notdef : Public, Static, Literal, HasDefault
  Properties:
    System.Collections.Generic.List`1[System.Int32[]] SubsetRanges 'get ' : 
    System.String Encoding 'get ' : 
    Int32 FontType 'get set' : 
    System.String PostscriptFontName 'get set' : 
    System.String Subfamily 'get ' : 
    System.String[][] FullFontName 'get ' : 
    System.String[][] AllNameEntries 'get ' : 
    System.String[][] FamilyFontName 'get ' : 
    System.String[] CodePagesSupported 'get ' : 
    Int32[] Widths 'get ' : 
    System.String[] Differences 'get ' : 
    Char[] UnicodeDifferences 'get ' : 
    Boolean ForceWidthsOutput 'get set' : 
    Boolean DirectTextToByte 'get set' : 
    Boolean Subset 'get set' : 
    Int32 CompressionLevel 'get set' : 
  Methods:
    get_SubsetRanges(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreateFont(): PrivateScope, Public, Static, HideBySig
    CreateFont(String, String, Boolean): PrivateScope, Public, Static, HideBySig
    CreateFont(String, String, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    CreateFont(String, String, Boolean, Boolean, Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
    CreateFont(String, String, Boolean, Boolean, Byte[], Byte[], Boolean): PrivateScope, Public, Static, HideBySig
    CreateFont(String, String, Boolean, Boolean, Byte[], Byte[], Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    CreateFont(PRIndirectReference): PrivateScope, Public, Static, HideBySig
    IsVertical(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRawWidth(Int32, String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetKerning(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetKerning(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetWidth(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetWidth(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDescent(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAscent(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDescentPoint(String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAscentPoint(String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetWidthPointKerned(String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetWidthPoint(String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetWidthPoint(Int32, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ConvertToBytes(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ConvertToBytes(Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    WriteFont(PdfWriter, PdfIndirectReference, Object[]): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetFullFontStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Encoding(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetFontDescriptor(Int32, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetFontDescriptor(Int32, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_FontType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FontType(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsEmbedded(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsFontSpecific(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateSubsetPrefix(): PrivateScope, Public, Static, HideBySig
    GetUnicodeDifferences(Int32): PrivateScope, Assembly, HideBySig
    get_PostscriptFontName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_PostscriptFontName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Subfamily(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FullFontName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AllNameEntries(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetFullFontName(String, String, Byte[]): PrivateScope, Public, Static, HideBySig
    GetAllFontNames(String, String, Byte[]): PrivateScope, Public, Static, HideBySig
    GetAllNameEntries(String, String, Byte[]): PrivateScope, Public, Static, HideBySig
    get_FamilyFontName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CodePagesSupported(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    EnumerateTTCNames(String): PrivateScope, Public, Static, HideBySig
    EnumerateTTCNames(Byte[]): PrivateScope, Public, Static, HideBySig
    get_Widths(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Differences(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UnicodeDifferences(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ForceWidthsOutput(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ForceWidthsOutput(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DirectTextToByte(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DirectTextToByte(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Subset(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Subset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetUnicodeEquivalent(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCidCode(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasKernPairs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CharExists(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCharAdvance(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDocumentFonts(PdfReader): PrivateScope, Public, Static, HideBySig
    GetDocumentFonts(PdfReader, Int32): PrivateScope, Public, Static, HideBySig
    createBuiltInFontDictionary(String): PrivateScope, Assembly, Static, HideBySig
    GetCharBBox(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFontMatrix(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CorrectArabicAdvance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSubsetRange(Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_CompressionLevel(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompressionLevel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PdfObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IComparable`1[iTextSharp.text.pdf.PdfObject]
  Fields:
    Int32 BOOLEAN = 1 : Public, Static, Literal, HasDefault
    Int32 NUMBER = 2 : Public, Static, Literal, HasDefault
    Int32 STRING = 3 : Public, Static, Literal, HasDefault
    Int32 NAME = 4 : Public, Static, Literal, HasDefault
    Int32 ARRAY = 5 : Public, Static, Literal, HasDefault
    Int32 DICTIONARY = 6 : Public, Static, Literal, HasDefault
    Int32 STREAM = 7 : Public, Static, Literal, HasDefault
    Int32 NULL = 8 : Public, Static, Literal, HasDefault
    Int32 INDIRECT = 10 : Public, Static, Literal, HasDefault
    System.String NOTHING =  : Public, Static, Literal, HasDefault
    System.String TEXT_PDFDOCENCODING = PDF : Public, Static, Literal, HasDefault
    System.String TEXT_UNICODE = UnicodeBig : Public, Static, Literal, HasDefault
  Properties:
    Int32 Length 'get ' : 
    Int32 Type 'get ' : 
    iTextSharp.text.pdf.PRIndirectReference IndRef 'get set' : 
  Methods:
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBytes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CanBeInObjStm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsNull(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsBoolean(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsDictionary(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsIndirect(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IndRef(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IndRef(PRIndirectReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CompareTo(PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfDictionary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.PdfName FONT : Public, Static
    iTextSharp.text.pdf.PdfName OUTLINES : Public, Static
    iTextSharp.text.pdf.PdfName PAGE : Public, Static
    iTextSharp.text.pdf.PdfName PAGES : Public, Static
    iTextSharp.text.pdf.PdfName CATALOG : Public, Static
  Properties:
    KeyCollection Keys 'get ' : 
    Int32 Size 'get ' : 
  Methods:
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
    Put(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PutEx(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PutAll(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Get(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsFont(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsPage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsPages(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsCatalog(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsOutlineTree(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CheckType(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Merge(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MergeDifferent(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Keys(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Contains(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetDirectObject(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsDict(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsArray(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsStream(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsString(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsNumber(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsName(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsBoolean(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsIndirectObject(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, iTextSharp.text.pdf.PdfWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] STARTSTREAM : Assembly, Static
    Byte[] ENDSTREAM : Assembly, Static
    Int32 SIZESTREAM : Assembly, Static
    Int32 DEFAULT_COMPRESSION = -1 : Public, Static, Literal, HasDefault
    Int32 NO_COMPRESSION = 0 : Public, Static, Literal, HasDefault
    Int32 BEST_SPEED = 1 : Public, Static, Literal, HasDefault
    Int32 BEST_COMPRESSION = 9 : Public, Static, Literal, HasDefault
  Properties:
    Int32 RawLength 'get ' : 
  Methods:
    WriteLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_RawLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    FlateCompress(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FlateCompress(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
    WriteContent(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.BaseFont+StreamFont: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :iTextSharp.text.pdf.PdfStream
    Void .ctor(Byte[], Int32[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.BidiLine: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.BidiLine): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearChunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetParagraph(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddChunk(PdfChunk): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddChunks(List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPiece(Char, PdfChunk): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Save(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Restore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MirrorGlyphs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoArabicShapping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessLine(Single, Single, Int32, Int32, Int32, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsWordSplit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetWidth(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetWidth(Int32, Int32, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateArrayOfPdfChunks(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateArrayOfPdfChunks(Int32, Int32, PdfChunk): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetWord(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimRight(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimLeft(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimRightEx(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimLeftEx(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reorder(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Flip(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsWS(Char): PrivateScope, Public, Static, HideBySig
    ProcessLTR(String, Int32, Int32): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.BidiOrder: AutoLayout, AnsiClass, Class, Public, Sealed
    Void .ctor(SByte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(SByte[], SByte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char[], Int32, Int32, SByte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    SByte L = 0 : Public, Static, Literal, HasDefault
    SByte LRE = 1 : Public, Static, Literal, HasDefault
    SByte LRO = 2 : Public, Static, Literal, HasDefault
    SByte R = 3 : Public, Static, Literal, HasDefault
    SByte AL = 4 : Public, Static, Literal, HasDefault
    SByte RLE = 5 : Public, Static, Literal, HasDefault
    SByte RLO = 6 : Public, Static, Literal, HasDefault
    SByte PDF = 7 : Public, Static, Literal, HasDefault
    SByte EN = 8 : Public, Static, Literal, HasDefault
    SByte ES = 9 : Public, Static, Literal, HasDefault
    SByte ET = 10 : Public, Static, Literal, HasDefault
    SByte AN = 11 : Public, Static, Literal, HasDefault
    SByte CS = 12 : Public, Static, Literal, HasDefault
    SByte NSM = 13 : Public, Static, Literal, HasDefault
    SByte BN = 14 : Public, Static, Literal, HasDefault
    SByte B = 15 : Public, Static, Literal, HasDefault
    SByte S = 16 : Public, Static, Literal, HasDefault
    SByte WS = 17 : Public, Static, Literal, HasDefault
    SByte ON = 18 : Public, Static, Literal, HasDefault
    SByte TYPE_MIN = 0 : Public, Static, Literal, HasDefault
    SByte TYPE_MAX = 18 : Public, Static, Literal, HasDefault
  Methods:
    GetDirection(Char): PrivateScope, Public, Static, HideBySig
    GetLevels(): PrivateScope, Public, HideBySig
    GetLevels(Int32[]): PrivateScope, Public, HideBySig
    GetBaseLevel(): PrivateScope, Public, HideBySig
Class iTextSharp.text.pdf.ByteBuffer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean HIGH_PRECISION : Public, Static
    Byte ZERO = 48 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Size 'get set' : 
    Byte[] Buffer 'get ' : 
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    SetCacheSize(Int32): PrivateScope, Public, Static, HideBySig
    FillCache(Int32): PrivateScope, Public, Static, HideBySig
    Append_i(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Append(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Append(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Append(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Append(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Append(ByteBuffer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Append(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Append(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Append(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AppendHex(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Append(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Append(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FormatDouble(Double): PrivateScope, Public, Static, HideBySig
    FormatDouble(Double, ByteBuffer): PrivateScope, Public, Static, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToByteArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Size(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteTo(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Buffer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.CFFFont: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.RandomAccessFileOrArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 nextIndexOffset : Assembly
    System.String[] operatorNames : Assembly, Static
    System.String[] standardStrings : Assembly, Static
  Methods:
    GetString(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCard8(): PrivateScope, Assembly, HideBySig
    GetCard16(): PrivateScope, Assembly, HideBySig
    GetOffset(Int32): PrivateScope, Assembly, HideBySig
    Seek(Int32): PrivateScope, Assembly, HideBySig
    GetShort(): PrivateScope, Assembly, HideBySig
    GetInt(): PrivateScope, Assembly, HideBySig
    GetPosition(): PrivateScope, Assembly, HideBySig
    GetIndex(Int32): PrivateScope, Assembly, HideBySig
    GetCID(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsCID(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Exists(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNames(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadEncoding(Int32): PrivateScope, Assembly, HideBySig
Class iTextSharp.text.pdf.CFFFont+Item: AutoLayout, AnsiClass, Class, VisibilityMask, Abstract, BeforeFieldInit
  Methods:
    Increment(Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Emit(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Xref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.CFFFont+OffsetItem: AutoLayout, AnsiClass, Class, VisibilityMask, Abstract, BeforeFieldInit
  :iTextSharp.text.pdf.CFFFont+Item
  Fields:
    Int32 value : Public
  Methods:
    Set(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.CFFFont+RangeItem: AutoLayout, AnsiClass, Class, VisibilityMask, BeforeFieldInit
  :iTextSharp.text.pdf.CFFFont+Item
    Void .ctor(iTextSharp.text.pdf.RandomAccessFileOrArray, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 offset : Public
    Int32 length : Public
  Methods:
    Increment(Int32[]): PrivateScope, Public, Virtual, HideBySig
    Emit(Byte[]): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.CFFFont+IndexOffsetItem: AutoLayout, AnsiClass, Class, VisibilityMask, BeforeFieldInit
  :iTextSharp.text.pdf.CFFFont+OffsetItem
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 size : Public
  Methods:
    Increment(Int32[]): PrivateScope, Public, Virtual, HideBySig
    Emit(Byte[]): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.CFFFont+IndexBaseItem: AutoLayout, AnsiClass, Class, VisibilityMask, BeforeFieldInit
  :iTextSharp.text.pdf.CFFFont+Item
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.CFFFont+IndexMarkerItem: AutoLayout, AnsiClass, Class, VisibilityMask, BeforeFieldInit
  :iTextSharp.text.pdf.CFFFont+Item
    Void .ctor(OffsetItem, IndexBaseItem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Xref(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.CFFFont+SubrMarkerItem: AutoLayout, AnsiClass, Class, VisibilityMask, BeforeFieldInit
  :iTextSharp.text.pdf.CFFFont+Item
    Void .ctor(OffsetItem, IndexBaseItem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Xref(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.CFFFont+DictOffsetItem: AutoLayout, AnsiClass, Class, VisibilityMask, BeforeFieldInit
  :iTextSharp.text.pdf.CFFFont+OffsetItem
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 size : Public
  Methods:
    Increment(Int32[]): PrivateScope, Public, Virtual, HideBySig
    Emit(Byte[]): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.CFFFont+UInt24Item: AutoLayout, AnsiClass, Class, VisibilityMask, BeforeFieldInit
  :iTextSharp.text.pdf.CFFFont+Item
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 value : Public
  Methods:
    Increment(Int32[]): PrivateScope, Public, Virtual, HideBySig
    Emit(Byte[]): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.CFFFont+UInt32Item: AutoLayout, AnsiClass, Class, VisibilityMask, BeforeFieldInit
  :iTextSharp.text.pdf.CFFFont+Item
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 value : Public
  Methods:
    Increment(Int32[]): PrivateScope, Public, Virtual, HideBySig
    Emit(Byte[]): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.CFFFont+UInt16Item: AutoLayout, AnsiClass, Class, VisibilityMask, BeforeFieldInit
  :iTextSharp.text.pdf.CFFFont+Item
    Void .ctor(Char): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Char value : Public
  Methods:
    Increment(Int32[]): PrivateScope, Public, Virtual, HideBySig
    Emit(Byte[]): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.CFFFont+UInt8Item: AutoLayout, AnsiClass, Class, VisibilityMask, BeforeFieldInit
  :iTextSharp.text.pdf.CFFFont+Item
    Void .ctor(Char): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Char value : Public
  Methods:
    Increment(Int32[]): PrivateScope, Public, Virtual, HideBySig
    Emit(Byte[]): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.CFFFont+StringItem: AutoLayout, AnsiClass, Class, VisibilityMask, BeforeFieldInit
  :iTextSharp.text.pdf.CFFFont+Item
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String s : Public
  Methods:
    Increment(Int32[]): PrivateScope, Public, Virtual, HideBySig
    Emit(Byte[]): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.CFFFont+DictNumberItem: AutoLayout, AnsiClass, Class, VisibilityMask, BeforeFieldInit
  :iTextSharp.text.pdf.CFFFont+Item
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 value : Public
    Int32 size : Public
  Methods:
    Increment(Int32[]): PrivateScope, Public, Virtual, HideBySig
    Emit(Byte[]): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.CFFFont+MarkerItem: AutoLayout, AnsiClass, Class, VisibilityMask, BeforeFieldInit
  :iTextSharp.text.pdf.CFFFont+Item
    Void .ctor(OffsetItem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Xref(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.CFFFont+Font: AutoLayout, AnsiClass, Class, VisibilityMask, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String name : Public
    System.String fullName : Public
    Boolean isCID : Public
    Int32 privateOffset : Public
    Int32 privateLength : Public
    Int32 privateSubrs : Public
    Int32 charstringsOffset : Public
    Int32 encodingOffset : Public
    Int32 charsetOffset : Public
    Int32 fdarrayOffset : Public
    Int32 fdselectOffset : Public
    Int32[] fdprivateOffsets : Public
    Int32[] fdprivateLengths : Public
    Int32[] fdprivateSubrs : Public
    Int32 nglyphs : Public
    Int32 nstrings : Public
    Int32 CharsetLength : Public
    Int32[] charstringsOffsets : Public
    Int32[] charset : Public
    Int32[] FDSelect : Public
    Int32 FDSelectLength : Public
    Int32 FDSelectFormat : Public
    Int32 CharstringType : Public
    Int32 FDArrayCount : Public
    Int32 FDArrayOffsize : Public
    Int32[] FDArrayOffsets : Public
    Int32[] PrivateSubrsOffset : Public
    Int32[][] PrivateSubrsOffsetsArray : Public
    Int32[] SubrsOffsets : Public
Class iTextSharp.text.pdf.CFFFontSubset: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.CFFFont
    Void .ctor(iTextSharp.text.pdf.RandomAccessFileOrArray, System.Collections.Generic.Dictionary`2[System.Int32,System.Int32[]]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.Dictionary`2[System.Int32,System.Int32[]] GlyphsUsed : Assembly
    System.Collections.Generic.List`1[System.Int32] glyphsInList : Assembly
    System.Collections.Generic.Dictionary`2[System.Int32,System.Object] FDArrayUsed : Assembly
    System.Collections.Generic.Dictionary`2[System.Int32,System.Int32[]][] hSubrsUsed : Assembly
    System.Collections.Generic.List`1[System.Int32][] lSubrsUsed : Assembly
    System.Collections.Generic.Dictionary`2[System.Int32,System.Int32[]] hGSubrsUsed : Assembly
    System.Collections.Generic.List`1[System.Int32] lGSubrsUsed : Assembly
    System.Collections.Generic.Dictionary`2[System.Int32,System.Int32[]] hSubrsUsedNonCID : Assembly
    System.Collections.Generic.List`1[System.Int32] lSubrsUsedNonCID : Assembly
    Byte[][] NewLSubrsIndex : Assembly
    Byte[] NewSubrsIndexNonCID : Assembly
    Byte[] NewGSubrsIndex : Assembly
    Byte[] NewCharStringsIndex : Assembly
    Int32 GBias : Assembly
    System.Collections.Generic.List`1[iTextSharp.text.pdf.CFFFont+Item] OutputList : Assembly
    Int32 NumOfHints : Assembly
    System.String[] SubrsFunctions : Assembly, Static
    System.String[] SubrsEscapeFuncs : Assembly, Static
    Byte ENDCHAR_OP = 14 : Assembly, Static, Literal, HasDefault
    Byte RETURN_OP = 11 : Assembly, Static, Literal, HasDefault
  Methods:
    CountCharset(Int32, Int32): PrivateScope, Assembly, HideBySig
    Process(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReconstructPrivateDict(Int32, OffsetItem[], IndexBaseItem[], OffsetItem[]): PrivateScope, Assembly, HideBySig
    ReconstructPrivateSubrs(Int32, IndexBaseItem[], OffsetItem[]): PrivateScope, Assembly, HideBySig
    CalcSubrOffsetSize(Int32, Int32): PrivateScope, Assembly, HideBySig
    CreateNonCIDPrivate(Int32, OffsetItem): PrivateScope, Assembly, HideBySig
    CreateNonCIDSubrs(Int32, IndexBaseItem, OffsetItem): PrivateScope, Assembly, HideBySig
Class iTextSharp.text.pdf.CJKFont: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :iTextSharp.text.pdf.BaseFont
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.util.Properties cjkFonts : Assembly, Static
    System.util.Properties cjkEncodings : Assembly, Static
    System.String CJK_ENCODING = UNICODEBIGUNMARKED : Assembly, Static, Literal, HasDefault
    System.String RESOURCE_PATH_CMAP = iTextSharp.text.pdf.fonts.cmaps. : Public, Static, Literal, HasDefault
  Properties:
    System.String UniMap 'get ' : 
    System.String PostscriptFontName 'get set' : 
    System.String[][] FullFontName 'get ' : 
    System.String[][] AllNameEntries 'get ' : 
    System.String[][] FamilyFontName 'get ' : 
  Methods:
    get_UniMap(): PrivateScope, Assembly, HideBySig, SpecialName
    GetCompatibleFont(String): PrivateScope, Public, Static, HideBySig
    IsCJKFont(String, String): PrivateScope, Public, Static, HideBySig
    GetWidth(Int32): PrivateScope, Public, Virtual, HideBySig
    GetWidth(String): PrivateScope, Public, Virtual, HideBySig
    GetRawWidth(Int32, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetKerning(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteFont(PdfWriter, PdfIndirectReference, Object[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetFullFontStream(): PrivateScope, Public, Virtual, HideBySig
    GetFontDescriptor(Int32, Single): PrivateScope, Public, Virtual, HideBySig
    get_PostscriptFontName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_PostscriptFontName(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullFontName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AllNameEntries(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FamilyFontName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CreateMetric(String): PrivateScope, Assembly, Static, HideBySig
    ConvertToHCIDMetrics(Int32[], IntHashtable): PrivateScope, Assembly, Static, HideBySig
    ConvertToVCIDMetrics(Int32[], IntHashtable, IntHashtable): PrivateScope, Assembly, Static, HideBySig
    ReadFontProperties(String): PrivateScope, Assembly, Static, HideBySig
    GetUnicodeEquivalent(Int32): PrivateScope, Public, Virtual, HideBySig
    GetCidCode(Int32): PrivateScope, Public, Virtual, HideBySig
    HasKernPairs(): PrivateScope, Public, Virtual, HideBySig
    CharExists(Int32): PrivateScope, Public, Virtual, HideBySig
    SetCharAdvance(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    SetKerning(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GetCharBBox(Int32): PrivateScope, Public, Virtual, HideBySig
    ConvertToBytes(String): PrivateScope, Public, Virtual, HideBySig
    ConvertToBytes(Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    IsIdentity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.DocumentFont: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.BaseFont
    Void .ctor(iTextSharp.text.pdf.PdfDictionary): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PRIndirectReference): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PRIndirectReference, iTextSharp.text.pdf.PdfDictionary): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfDictionary FontDictionary 'get ' : 
    System.String[][] FamilyFontName 'get ' : 
    System.String[][] FullFontName 'get ' : 
    System.String[][] AllNameEntries 'get ' : 
    System.String PostscriptFontName 'get set' : 
    iTextSharp.text.pdf.PdfIndirectReference IndirectReference 'get ' : 
    iTextSharp.text.pdf.IntHashtable Uni2Byte 'get ' : 
    iTextSharp.text.pdf.IntHashtable Byte2Uni 'get ' : 
    iTextSharp.text.pdf.IntHashtable Diffmap 'get ' : 
  Methods:
    get_FontDictionary(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FamilyFontName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetFontDescriptor(Int32, Single): PrivateScope, Public, Virtual, HideBySig
    get_FullFontName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AllNameEntries(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetKerning(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_PostscriptFontName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_PostscriptFontName(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetRawWidth(Int32, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    HasKernPairs(): PrivateScope, Public, Virtual, HideBySig
    WriteFont(PdfWriter, PdfIndirectReference, Object[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetFullFontStream(): PrivateScope, Public, Virtual, HideBySig
    GetWidth(Int32): PrivateScope, Public, Virtual, HideBySig
    GetWidth(String): PrivateScope, Public, Virtual, HideBySig
    ConvertToBytes(String): PrivateScope, Public, Virtual, HideBySig
    ConvertToBytes(Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_IndirectReference(): PrivateScope, Assembly, HideBySig, SpecialName
    CharExists(Int32): PrivateScope, Public, Virtual, HideBySig
    GetFontMatrix(): PrivateScope, Public, Virtual, HideBySig
    SetKerning(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GetCharBBox(Int32): PrivateScope, Public, Virtual, HideBySig
    IsVertical(): PrivateScope, Public, Virtual, HideBySig
    get_Uni2Byte(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Byte2Uni(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Diffmap(): PrivateScope, Assembly, HideBySig, SpecialName
Class iTextSharp.text.pdf.CMapAwareDocumentFont: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.DocumentFont
    Void .ctor(iTextSharp.text.pdf.PdfDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PRIndirectReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetWidth(Int32): PrivateScope, Public, Virtual, HideBySig
    Decode(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DecodeSingleCharacter(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Encode(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.CMYKColor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.ExtendedColor
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Cyan 'get ' : 
    Single Magenta 'get ' : 
    Single Yellow 'get ' : 
    Single Black 'get ' : 
  Methods:
    get_Cyan(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Magenta(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Yellow(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Black(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.codec.BitFile: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Flush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteBits(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.codec.BmpImage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream, Boolean, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.Dictionary`2[System.String,System.Object] properties : Public
  Methods:
    GetImage(Uri): PrivateScope, Public, Static, HideBySig
    GetImage(Stream): PrivateScope, Public, Static, HideBySig
    GetImage(Stream, Boolean, Int32): PrivateScope, Public, Static, HideBySig
    GetImage(String): PrivateScope, Public, Static, HideBySig
    GetImage(Byte[]): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.codec.CCITTG4Encoder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Fax4Encode(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Compress(Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Fax4Encode(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.codec.GifImage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.List`1[iTextSharp.text.pdf.codec.GifImage+GifFrame] frames : Assembly
  Methods:
    GetFrameCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetImage(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFramePosition(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLogicalScreen(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Process(Stream): PrivateScope, Assembly, HideBySig
Class iTextSharp.text.pdf.codec.GifImage+GifFrame: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.Image image : Assembly
    Int32 ix : Assembly
    Int32 iy : Assembly
Class iTextSharp.text.pdf.codec.JBIG2Image: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetGlobalSegment(RandomAccessFileOrArray): PrivateScope, Public, Static, HideBySig
    GetJbig2Image(RandomAccessFileOrArray, Int32): PrivateScope, Public, Static, HideBySig
    GetNumberOfPages(RandomAccessFileOrArray): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.codec.JBIG2SegmentReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.RandomAccessFileOrArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 SYMBOL_DICTIONARY = 0 : Public, Static, Literal, HasDefault
    Int32 INTERMEDIATE_TEXT_REGION = 4 : Public, Static, Literal, HasDefault
    Int32 IMMEDIATE_TEXT_REGION = 6 : Public, Static, Literal, HasDefault
    Int32 IMMEDIATE_LOSSLESS_TEXT_REGION = 7 : Public, Static, Literal, HasDefault
    Int32 PATTERN_DICTIONARY = 16 : Public, Static, Literal, HasDefault
    Int32 INTERMEDIATE_HALFTONE_REGION = 20 : Public, Static, Literal, HasDefault
    Int32 IMMEDIATE_HALFTONE_REGION = 22 : Public, Static, Literal, HasDefault
    Int32 IMMEDIATE_LOSSLESS_HALFTONE_REGION = 23 : Public, Static, Literal, HasDefault
    Int32 INTERMEDIATE_GENERIC_REGION = 36 : Public, Static, Literal, HasDefault
    Int32 IMMEDIATE_GENERIC_REGION = 38 : Public, Static, Literal, HasDefault
    Int32 IMMEDIATE_LOSSLESS_GENERIC_REGION = 39 : Public, Static, Literal, HasDefault
    Int32 INTERMEDIATE_GENERIC_REFINEMENT_REGION = 40 : Public, Static, Literal, HasDefault
    Int32 IMMEDIATE_GENERIC_REFINEMENT_REGION = 42 : Public, Static, Literal, HasDefault
    Int32 IMMEDIATE_LOSSLESS_GENERIC_REFINEMENT_REGION = 43 : Public, Static, Literal, HasDefault
    Int32 PAGE_INFORMATION = 48 : Public, Static, Literal, HasDefault
    Int32 END_OF_PAGE = 49 : Public, Static, Literal, HasDefault
    Int32 END_OF_STRIPE = 50 : Public, Static, Literal, HasDefault
    Int32 END_OF_FILE = 51 : Public, Static, Literal, HasDefault
    Int32 PROFILES = 52 : Public, Static, Literal, HasDefault
    Int32 TABLES = 53 : Public, Static, Literal, HasDefault
    Int32 EXTENSION = 62 : Public, Static, Literal, HasDefault
  Methods:
    CopyByteArray(Byte[]): PrivateScope, Public, Static, HideBySig
    Read(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NumberOfPages(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageHeight(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageWidth(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPage(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGlobal(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.codec.JBIG2SegmentReader+JBIG2Segment: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable`1[iTextSharp.text.pdf.codec.JBIG2SegmentReader+JBIG2Segment]
  Fields:
    Int32 segmentNumber : Public
    Int64 dataLength : Public
    Int32 page : Public
    Int32[] referredToSegmentNumbers : Public
    Boolean[] segmentRetentionFlags : Public
    Int32 type : Public
    Boolean deferredNonRetain : Public
    Int32 countOfReferredToSegments : Public
    Byte[] data : Public
    Byte[] headerData : Public
    Boolean page_association_size : Public
    Int32 page_association_offset : Public
  Methods:
    CompareTo(JBIG2Segment): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.codec.JBIG2SegmentReader+JBIG2Page: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Int32, iTextSharp.text.pdf.codec.JBIG2SegmentReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 page : Public
    Int32 pageBitmapWidth : Public
    Int32 pageBitmapHeight : Public
  Methods:
    GetData(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSegment(JBIG2Segment): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.codec.PngImage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Fields:
    Int32[] PNGID : Public, Static
    System.String IHDR = IHDR : Public, Static, Literal, HasDefault
    System.String PLTE = PLTE : Public, Static, Literal, HasDefault
    System.String IDAT = IDAT : Public, Static, Literal, HasDefault
    System.String IEND = IEND : Public, Static, Literal, HasDefault
    System.String tRNS = tRNS : Public, Static, Literal, HasDefault
    System.String pHYs = pHYs : Public, Static, Literal, HasDefault
    System.String gAMA = gAMA : Public, Static, Literal, HasDefault
    System.String cHRM = cHRM : Public, Static, Literal, HasDefault
    System.String sRGB = sRGB : Public, Static, Literal, HasDefault
    System.String iCCP = iCCP : Public, Static, Literal, HasDefault
  Methods:
    GetImage(Uri): PrivateScope, Public, Static, HideBySig
    GetImage(Stream): PrivateScope, Public, Static, HideBySig
    GetImage(String): PrivateScope, Public, Static, HideBySig
    GetImage(Byte[]): PrivateScope, Public, Static, HideBySig
    GetInt(Stream): PrivateScope, Public, Static, HideBySig
    GetWord(Stream): PrivateScope, Public, Static, HideBySig
    GetString(Stream): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.codec.PngWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteHeader(Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteEnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteData(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WritePalette(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteIccProfile(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OutputInt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OutputInt(Int32, Stream): PrivateScope, Public, Static, HideBySig
    WriteChunk(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.codec.TIFFConstants: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 TIFFTAG_SUBFILETYPE = 254 : Public, Static, Literal, HasDefault
    Int32 FILETYPE_REDUCEDIMAGE = 1 : Public, Static, Literal, HasDefault
    Int32 FILETYPE_PAGE = 2 : Public, Static, Literal, HasDefault
    Int32 FILETYPE_MASK = 4 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_OSUBFILETYPE = 255 : Public, Static, Literal, HasDefault
    Int32 OFILETYPE_IMAGE = 1 : Public, Static, Literal, HasDefault
    Int32 OFILETYPE_REDUCEDIMAGE = 2 : Public, Static, Literal, HasDefault
    Int32 OFILETYPE_PAGE = 3 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IMAGEWIDTH = 256 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IMAGELENGTH = 257 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_BITSPERSAMPLE = 258 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_COMPRESSION = 259 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_NONE = 1 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_CCITTRLE = 2 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_CCITTFAX3 = 3 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_CCITTFAX4 = 4 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_LZW = 5 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_OJPEG = 6 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_JPEG = 7 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_NEXT = 32766 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_CCITTRLEW = 32771 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_PACKBITS = 32773 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_THUNDERSCAN = 32809 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_IT8CTPAD = 32895 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_IT8LW = 32896 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_IT8MP = 32897 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_IT8BL = 32898 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_PIXARFILM = 32908 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_PIXARLOG = 32909 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_DEFLATE = 32946 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_ADOBE_DEFLATE = 8 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_DCS = 32947 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_JBIG = 34661 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_SGILOG = 34676 : Public, Static, Literal, HasDefault
    Int32 COMPRESSION_SGILOG24 = 34677 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_PHOTOMETRIC = 262 : Public, Static, Literal, HasDefault
    Int32 PHOTOMETRIC_MINISWHITE = 0 : Public, Static, Literal, HasDefault
    Int32 PHOTOMETRIC_MINISBLACK = 1 : Public, Static, Literal, HasDefault
    Int32 PHOTOMETRIC_RGB = 2 : Public, Static, Literal, HasDefault
    Int32 PHOTOMETRIC_PALETTE = 3 : Public, Static, Literal, HasDefault
    Int32 PHOTOMETRIC_MASK = 4 : Public, Static, Literal, HasDefault
    Int32 PHOTOMETRIC_SEPARATED = 5 : Public, Static, Literal, HasDefault
    Int32 PHOTOMETRIC_YCBCR = 6 : Public, Static, Literal, HasDefault
    Int32 PHOTOMETRIC_CIELAB = 8 : Public, Static, Literal, HasDefault
    Int32 PHOTOMETRIC_LOGL = 32844 : Public, Static, Literal, HasDefault
    Int32 PHOTOMETRIC_LOGLUV = 32845 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_THRESHHOLDING = 263 : Public, Static, Literal, HasDefault
    Int32 THRESHHOLD_BILEVEL = 1 : Public, Static, Literal, HasDefault
    Int32 THRESHHOLD_HALFTONE = 2 : Public, Static, Literal, HasDefault
    Int32 THRESHHOLD_ERRORDIFFUSE = 3 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_CELLWIDTH = 264 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_CELLLENGTH = 265 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_FILLORDER = 266 : Public, Static, Literal, HasDefault
    Int32 FILLORDER_MSB2LSB = 1 : Public, Static, Literal, HasDefault
    Int32 FILLORDER_LSB2MSB = 2 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_DOCUMENTNAME = 269 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IMAGEDESCRIPTION = 270 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_MAKE = 271 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_MODEL = 272 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_STRIPOFFSETS = 273 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_ORIENTATION = 274 : Public, Static, Literal, HasDefault
    Int32 ORIENTATION_TOPLEFT = 1 : Public, Static, Literal, HasDefault
    Int32 ORIENTATION_TOPRIGHT = 2 : Public, Static, Literal, HasDefault
    Int32 ORIENTATION_BOTRIGHT = 3 : Public, Static, Literal, HasDefault
    Int32 ORIENTATION_BOTLEFT = 4 : Public, Static, Literal, HasDefault
    Int32 ORIENTATION_LEFTTOP = 5 : Public, Static, Literal, HasDefault
    Int32 ORIENTATION_RIGHTTOP = 6 : Public, Static, Literal, HasDefault
    Int32 ORIENTATION_RIGHTBOT = 7 : Public, Static, Literal, HasDefault
    Int32 ORIENTATION_LEFTBOT = 8 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_SAMPLESPERPIXEL = 277 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_ROWSPERSTRIP = 278 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_STRIPBYTECOUNTS = 279 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_MINSAMPLEVALUE = 280 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_MAXSAMPLEVALUE = 281 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_XRESOLUTION = 282 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_YRESOLUTION = 283 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_PLANARCONFIG = 284 : Public, Static, Literal, HasDefault
    Int32 PLANARCONFIG_CONTIG = 1 : Public, Static, Literal, HasDefault
    Int32 PLANARCONFIG_SEPARATE = 2 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_PAGENAME = 285 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_XPOSITION = 286 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_YPOSITION = 287 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_FREEOFFSETS = 288 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_FREEBYTECOUNTS = 289 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_GRAYRESPONSEUNIT = 290 : Public, Static, Literal, HasDefault
    Int32 GRAYRESPONSEUNIT_10S = 1 : Public, Static, Literal, HasDefault
    Int32 GRAYRESPONSEUNIT_100S = 2 : Public, Static, Literal, HasDefault
    Int32 GRAYRESPONSEUNIT_1000S = 3 : Public, Static, Literal, HasDefault
    Int32 GRAYRESPONSEUNIT_10000S = 4 : Public, Static, Literal, HasDefault
    Int32 GRAYRESPONSEUNIT_100000S = 5 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_GRAYRESPONSECURVE = 291 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_GROUP3OPTIONS = 292 : Public, Static, Literal, HasDefault
    Int32 GROUP3OPT_2DENCODING = 1 : Public, Static, Literal, HasDefault
    Int32 GROUP3OPT_UNCOMPRESSED = 2 : Public, Static, Literal, HasDefault
    Int32 GROUP3OPT_FILLBITS = 4 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_GROUP4OPTIONS = 293 : Public, Static, Literal, HasDefault
    Int32 GROUP4OPT_UNCOMPRESSED = 2 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_RESOLUTIONUNIT = 296 : Public, Static, Literal, HasDefault
    Int32 RESUNIT_NONE = 1 : Public, Static, Literal, HasDefault
    Int32 RESUNIT_INCH = 2 : Public, Static, Literal, HasDefault
    Int32 RESUNIT_CENTIMETER = 3 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_PAGENUMBER = 297 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_COLORRESPONSEUNIT = 300 : Public, Static, Literal, HasDefault
    Int32 COLORRESPONSEUNIT_10S = 1 : Public, Static, Literal, HasDefault
    Int32 COLORRESPONSEUNIT_100S = 2 : Public, Static, Literal, HasDefault
    Int32 COLORRESPONSEUNIT_1000S = 3 : Public, Static, Literal, HasDefault
    Int32 COLORRESPONSEUNIT_10000S = 4 : Public, Static, Literal, HasDefault
    Int32 COLORRESPONSEUNIT_100000S = 5 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_TRANSFERFUNCTION = 301 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_SOFTWARE = 305 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_DATETIME = 306 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_ARTIST = 315 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_HOSTCOMPUTER = 316 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_PREDICTOR = 317 : Public, Static, Literal, HasDefault
    Int32 PREDICTOR_NONE = 1 : Public, Static, Literal, HasDefault
    Int32 PREDICTOR_HORIZONTAL_DIFFERENCING = 2 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_WHITEPOINT = 318 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_PRIMARYCHROMATICITIES = 319 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_COLORMAP = 320 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_HALFTONEHINTS = 321 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_TILEWIDTH = 322 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_TILELENGTH = 323 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_TILEOFFSETS = 324 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_TILEBYTECOUNTS = 325 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_BADFAXLINES = 326 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_CLEANFAXDATA = 327 : Public, Static, Literal, HasDefault
    Int32 CLEANFAXDATA_CLEAN = 0 : Public, Static, Literal, HasDefault
    Int32 CLEANFAXDATA_REGENERATED = 1 : Public, Static, Literal, HasDefault
    Int32 CLEANFAXDATA_UNCLEAN = 2 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_CONSECUTIVEBADFAXLINES = 328 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_SUBIFD = 330 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_INKSET = 332 : Public, Static, Literal, HasDefault
    Int32 INKSET_CMYK = 1 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_INKNAMES = 333 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_NUMBEROFINKS = 334 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_DOTRANGE = 336 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_TARGETPRINTER = 337 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_EXTRASAMPLES = 338 : Public, Static, Literal, HasDefault
    Int32 EXTRASAMPLE_UNSPECIFIED = 0 : Public, Static, Literal, HasDefault
    Int32 EXTRASAMPLE_ASSOCALPHA = 1 : Public, Static, Literal, HasDefault
    Int32 EXTRASAMPLE_UNASSALPHA = 2 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_SAMPLEFORMAT = 339 : Public, Static, Literal, HasDefault
    Int32 SAMPLEFORMAT_UINT = 1 : Public, Static, Literal, HasDefault
    Int32 SAMPLEFORMAT_INT = 2 : Public, Static, Literal, HasDefault
    Int32 SAMPLEFORMAT_IEEEFP = 3 : Public, Static, Literal, HasDefault
    Int32 SAMPLEFORMAT_VOID = 4 : Public, Static, Literal, HasDefault
    Int32 SAMPLEFORMAT_COMPLEXINT = 5 : Public, Static, Literal, HasDefault
    Int32 SAMPLEFORMAT_COMPLEXIEEEFP = 6 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_SMINSAMPLEVALUE = 340 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_SMAXSAMPLEVALUE = 341 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_JPEGTABLES = 347 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_JPEGPROC = 512 : Public, Static, Literal, HasDefault
    Int32 JPEGPROC_BASELINE = 1 : Public, Static, Literal, HasDefault
    Int32 JPEGPROC_LOSSLESS = 14 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_JPEGIFOFFSET = 513 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_JPEGIFBYTECOUNT = 514 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_JPEGRESTARTINTERVAL = 515 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_JPEGLOSSLESSPREDICTORS = 517 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_JPEGPOINTTRANSFORM = 518 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_JPEGQTABLES = 519 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_JPEGDCTABLES = 520 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_JPEGACTABLES = 521 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_YCBCRCOEFFICIENTS = 529 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_YCBCRSUBSAMPLING = 530 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_YCBCRPOSITIONING = 531 : Public, Static, Literal, HasDefault
    Int32 YCBCRPOSITION_CENTERED = 1 : Public, Static, Literal, HasDefault
    Int32 YCBCRPOSITION_COSITED = 2 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_REFERENCEBLACKWHITE = 532 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_REFPTS = 32953 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_REGIONTACKPOINT = 32954 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_REGIONWARPCORNERS = 32955 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_REGIONAFFINE = 32956 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_MATTEING = 32995 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_DATATYPE = 32996 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IMAGEDEPTH = 32997 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_TILEDEPTH = 32998 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_PIXAR_IMAGEFULLWIDTH = 33300 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_PIXAR_IMAGEFULLLENGTH = 33301 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_PIXAR_TEXTUREFORMAT = 33302 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_PIXAR_WRAPMODES = 33303 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_PIXAR_FOVCOT = 33304 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_PIXAR_MATRIX_WORLDTOSCREEN = 33305 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_PIXAR_MATRIX_WORLDTOCAMERA = 33306 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_WRITERSERIALNUMBER = 33405 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_COPYRIGHT = 33432 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_RICHTIFFIPTC = 33723 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IT8SITE = 34016 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IT8COLORSEQUENCE = 34017 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IT8HEADER = 34018 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IT8RASTERPADDING = 34019 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IT8BITSPERRUNLENGTH = 34020 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IT8BITSPEREXTENDEDRUNLENGTH = 34021 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IT8COLORTABLE = 34022 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IT8IMAGECOLORINDICATOR = 34023 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IT8BKGCOLORINDICATOR = 34024 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IT8IMAGECOLORVALUE = 34025 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IT8BKGCOLORVALUE = 34026 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IT8PIXELINTENSITYRANGE = 34027 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IT8TRANSPARENCYINDICATOR = 34028 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_IT8COLORCHARACTERIZATION = 34029 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_FRAMECOUNT = 34232 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_ICCPROFILE = 34675 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_PHOTOSHOP = 34377 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_JBIGOPTIONS = 34750 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_FAXRECVPARAMS = 34908 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_FAXSUBADDRESS = 34909 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_FAXRECVTIME = 34910 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_STONITS = 37439 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_FEDEX_EDR = 34929 : Public, Static, Literal, HasDefault
    Int32 TIFFTAG_DCSHUESHIFTVALUES = 65535 : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.codec.TIFFDirectory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.RandomAccessFileOrArray, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.RandomAccessFileOrArray, Int64, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetNumEntries(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetField(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsTagPresent(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFields(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldAsByte(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldAsByte(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldAsLong(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldAsLong(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldAsFloat(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldAsFloat(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldAsDouble(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldAsDouble(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNumDirectories(RandomAccessFileOrArray): PrivateScope, Public, Static, HideBySig
    IsBigEndian(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIFDOffset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNextIFDOffset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.codec.TIFFFaxDecoder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int64, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] flipTable : Assembly, Static
  Properties:
    Boolean RecoverFromImageError 'set' : 
  Methods:
    ReverseBits(Byte[]): PrivateScope, Public, Static, HideBySig
    Decode1D(Byte[], Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DecodeNextScanline(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Decode2D(Byte[], Byte[], Int32, Int32, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DecodeT6(Byte[], Byte[], Int32, Int32, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_RecoverFromImageError(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.codec.TIFFFaxDecompressor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 fails : Public
    Byte[] flipTable : Assembly, Static
  Methods:
    SetOptions(Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DecodeRaw(Byte[], Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DecodeRLE(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DecodeNextScanline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DecodeT4(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DecodeT6(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.codec.TIFFField: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable`1[iTextSharp.text.pdf.codec.TIFFField]
  Fields:
    Int32 TIFF_BYTE = 1 : Public, Static, Literal, HasDefault
    Int32 TIFF_ASCII = 2 : Public, Static, Literal, HasDefault
    Int32 TIFF_SHORT = 3 : Public, Static, Literal, HasDefault
    Int32 TIFF_LONG = 4 : Public, Static, Literal, HasDefault
    Int32 TIFF_RATIONAL = 5 : Public, Static, Literal, HasDefault
    Int32 TIFF_SBYTE = 6 : Public, Static, Literal, HasDefault
    Int32 TIFF_UNDEFINED = 7 : Public, Static, Literal, HasDefault
    Int32 TIFF_SSHORT = 8 : Public, Static, Literal, HasDefault
    Int32 TIFF_SLONG = 9 : Public, Static, Literal, HasDefault
    Int32 TIFF_SRATIONAL = 10 : Public, Static, Literal, HasDefault
    Int32 TIFF_FLOAT = 11 : Public, Static, Literal, HasDefault
    Int32 TIFF_DOUBLE = 12 : Public, Static, Literal, HasDefault
  Methods:
    GetTag(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetType(): PrivateScope, Public, HideBySig
    GetCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsBytes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsChars(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsShorts(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsInts(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsLongs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsFloats(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsDoubles(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsSRationals(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsRationals(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsInt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsLong(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsFloat(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsDouble(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsString(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsSRational(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsRational(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CompareTo(TIFFField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.codec.TiffImage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetNumberOfPages(RandomAccessFileOrArray): PrivateScope, Public, Static, HideBySig
    GetTiffImage(RandomAccessFileOrArray, Boolean, Int32, Boolean): PrivateScope, Public, Static, HideBySig
    GetTiffImage(RandomAccessFileOrArray, Boolean, Int32): PrivateScope, Public, Static, HideBySig
    GetTiffImage(RandomAccessFileOrArray, Int32): PrivateScope, Public, Static, HideBySig
    GetTiffImage(RandomAccessFileOrArray, Int32, Boolean): PrivateScope, Public, Static, HideBySig
    DecodePackbits(Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
    Inflate(Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
    ApplyPredictor(Byte[], Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.codec.TIFFLZWDecoder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Byte[], Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InitializeStringTable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteString(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddStringToTable(Byte[], Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddStringToTable(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ComposeString(Byte[], Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNextCode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.codec.TiffWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddField(FieldBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIfdSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteFile(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteShort(Int32, Stream): PrivateScope, Public, Static, HideBySig
    WriteLong(Int32, Stream): PrivateScope, Public, Static, HideBySig
    CompressLZW(Stream, Int32, Byte[], Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.codec.TiffWriter+FieldBase: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, BeforeFieldInit
  Methods:
    GetValueSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTag(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetOffset(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteField(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.codec.TiffWriter+FieldShort: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :iTextSharp.text.pdf.codec.TiffWriter+FieldBase
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.codec.TiffWriter+FieldLong: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :iTextSharp.text.pdf.codec.TiffWriter+FieldBase
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.codec.TiffWriter+FieldRational: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :iTextSharp.text.pdf.codec.TiffWriter+FieldBase
    Void .ctor(Int32, Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32[][]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.codec.TiffWriter+FieldByte: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :iTextSharp.text.pdf.codec.TiffWriter+FieldBase
    Void .ctor(Int32, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.codec.TiffWriter+FieldUndefined: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :iTextSharp.text.pdf.codec.TiffWriter+FieldBase
    Void .ctor(Int32, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.codec.TiffWriter+FieldImage: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :iTextSharp.text.pdf.codec.TiffWriter+FieldBase
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.codec.TiffWriter+FieldAscii: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :iTextSharp.text.pdf.codec.TiffWriter+FieldBase
    Void .ctor(Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.codec.wmf.InputMeta: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
  Methods:
    ReadWord(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadShort(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadInt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadByte(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Skip(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ReadColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.codec.wmf.MetaObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 type : Public
    Int32 META_NOT_SUPPORTED = 0 : Public, Static, Literal, HasDefault
    Int32 META_PEN = 1 : Public, Static, Literal, HasDefault
    Int32 META_BRUSH = 2 : Public, Static, Literal, HasDefault
    Int32 META_FONT = 3 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Type 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.codec.wmf.MetaBrush: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.codec.wmf.MetaObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 BS_SOLID = 0 : Public, Static, Literal, HasDefault
    Int32 BS_NULL = 1 : Public, Static, Literal, HasDefault
    Int32 BS_HATCHED = 2 : Public, Static, Literal, HasDefault
    Int32 BS_PATTERN = 3 : Public, Static, Literal, HasDefault
    Int32 BS_DIBPATTERN = 5 : Public, Static, Literal, HasDefault
    Int32 HS_HORIZONTAL = 0 : Public, Static, Literal, HasDefault
    Int32 HS_VERTICAL = 1 : Public, Static, Literal, HasDefault
    Int32 HS_FDIAGONAL = 2 : Public, Static, Literal, HasDefault
    Int32 HS_BDIAGONAL = 3 : Public, Static, Literal, HasDefault
    Int32 HS_CROSS = 4 : Public, Static, Literal, HasDefault
    Int32 HS_DIAGCROSS = 5 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Style 'get ' : 
    Int32 Hatch 'get ' : 
    iTextSharp.text.BaseColor Color 'get ' : 
  Methods:
    Init(InputMeta): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Style(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Hatch(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Color(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.codec.wmf.MetaDo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream, iTextSharp.text.pdf.PdfContentByte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.PdfContentByte cb : Public
    iTextSharp.text.pdf.codec.wmf.InputMeta meta : Public
    Int32 META_SETBKCOLOR = 513 : Public, Static, Literal, HasDefault
    Int32 META_SETBKMODE = 258 : Public, Static, Literal, HasDefault
    Int32 META_SETMAPMODE = 259 : Public, Static, Literal, HasDefault
    Int32 META_SETROP2 = 260 : Public, Static, Literal, HasDefault
    Int32 META_SETRELABS = 261 : Public, Static, Literal, HasDefault
    Int32 META_SETPOLYFILLMODE = 262 : Public, Static, Literal, HasDefault
    Int32 META_SETSTRETCHBLTMODE = 263 : Public, Static, Literal, HasDefault
    Int32 META_SETTEXTCHAREXTRA = 264 : Public, Static, Literal, HasDefault
    Int32 META_SETTEXTCOLOR = 521 : Public, Static, Literal, HasDefault
    Int32 META_SETTEXTJUSTIFICATION = 522 : Public, Static, Literal, HasDefault
    Int32 META_SETWINDOWORG = 523 : Public, Static, Literal, HasDefault
    Int32 META_SETWINDOWEXT = 524 : Public, Static, Literal, HasDefault
    Int32 META_SETVIEWPORTORG = 525 : Public, Static, Literal, HasDefault
    Int32 META_SETVIEWPORTEXT = 526 : Public, Static, Literal, HasDefault
    Int32 META_OFFSETWINDOWORG = 527 : Public, Static, Literal, HasDefault
    Int32 META_SCALEWINDOWEXT = 1040 : Public, Static, Literal, HasDefault
    Int32 META_OFFSETVIEWPORTORG = 529 : Public, Static, Literal, HasDefault
    Int32 META_SCALEVIEWPORTEXT = 1042 : Public, Static, Literal, HasDefault
    Int32 META_LINETO = 531 : Public, Static, Literal, HasDefault
    Int32 META_MOVETO = 532 : Public, Static, Literal, HasDefault
    Int32 META_EXCLUDECLIPRECT = 1045 : Public, Static, Literal, HasDefault
    Int32 META_INTERSECTCLIPRECT = 1046 : Public, Static, Literal, HasDefault
    Int32 META_ARC = 2071 : Public, Static, Literal, HasDefault
    Int32 META_ELLIPSE = 1048 : Public, Static, Literal, HasDefault
    Int32 META_FLOODFILL = 1049 : Public, Static, Literal, HasDefault
    Int32 META_PIE = 2074 : Public, Static, Literal, HasDefault
    Int32 META_RECTANGLE = 1051 : Public, Static, Literal, HasDefault
    Int32 META_ROUNDRECT = 1564 : Public, Static, Literal, HasDefault
    Int32 META_PATBLT = 1565 : Public, Static, Literal, HasDefault
    Int32 META_SAVEDC = 30 : Public, Static, Literal, HasDefault
    Int32 META_SETPIXEL = 1055 : Public, Static, Literal, HasDefault
    Int32 META_OFFSETCLIPRGN = 544 : Public, Static, Literal, HasDefault
    Int32 META_TEXTOUT = 1313 : Public, Static, Literal, HasDefault
    Int32 META_BITBLT = 2338 : Public, Static, Literal, HasDefault
    Int32 META_STRETCHBLT = 2851 : Public, Static, Literal, HasDefault
    Int32 META_POLYGON = 804 : Public, Static, Literal, HasDefault
    Int32 META_POLYLINE = 805 : Public, Static, Literal, HasDefault
    Int32 META_ESCAPE = 1574 : Public, Static, Literal, HasDefault
    Int32 META_RESTOREDC = 295 : Public, Static, Literal, HasDefault
    Int32 META_FILLREGION = 552 : Public, Static, Literal, HasDefault
    Int32 META_FRAMEREGION = 1065 : Public, Static, Literal, HasDefault
    Int32 META_INVERTREGION = 298 : Public, Static, Literal, HasDefault
    Int32 META_PAINTREGION = 299 : Public, Static, Literal, HasDefault
    Int32 META_SELECTCLIPREGION = 300 : Public, Static, Literal, HasDefault
    Int32 META_SELECTOBJECT = 301 : Public, Static, Literal, HasDefault
    Int32 META_SETTEXTALIGN = 302 : Public, Static, Literal, HasDefault
    Int32 META_CHORD = 2096 : Public, Static, Literal, HasDefault
    Int32 META_SETMAPPERFLAGS = 561 : Public, Static, Literal, HasDefault
    Int32 META_EXTTEXTOUT = 2610 : Public, Static, Literal, HasDefault
    Int32 META_SETDIBTODEV = 3379 : Public, Static, Literal, HasDefault
    Int32 META_SELECTPALETTE = 564 : Public, Static, Literal, HasDefault
    Int32 META_REALIZEPALETTE = 53 : Public, Static, Literal, HasDefault
    Int32 META_ANIMATEPALETTE = 1078 : Public, Static, Literal, HasDefault
    Int32 META_SETPALENTRIES = 55 : Public, Static, Literal, HasDefault
    Int32 META_POLYPOLYGON = 1336 : Public, Static, Literal, HasDefault
    Int32 META_RESIZEPALETTE = 313 : Public, Static, Literal, HasDefault
    Int32 META_DIBBITBLT = 2368 : Public, Static, Literal, HasDefault
    Int32 META_DIBSTRETCHBLT = 2881 : Public, Static, Literal, HasDefault
    Int32 META_DIBCREATEPATTERNBRUSH = 322 : Public, Static, Literal, HasDefault
    Int32 META_STRETCHDIB = 3907 : Public, Static, Literal, HasDefault
    Int32 META_EXTFLOODFILL = 1352 : Public, Static, Literal, HasDefault
    Int32 META_DELETEOBJECT = 496 : Public, Static, Literal, HasDefault
    Int32 META_CREATEPALETTE = 247 : Public, Static, Literal, HasDefault
    Int32 META_CREATEPATTERNBRUSH = 505 : Public, Static, Literal, HasDefault
    Int32 META_CREATEPENINDIRECT = 762 : Public, Static, Literal, HasDefault
    Int32 META_CREATEFONTINDIRECT = 763 : Public, Static, Literal, HasDefault
    Int32 META_CREATEBRUSHINDIRECT = 764 : Public, Static, Literal, HasDefault
    Int32 META_CREATEREGION = 1791 : Public, Static, Literal, HasDefault
  Methods:
    ReadAll(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OutputText(Int32, Int32, Int32, Int32, Int32, Int32, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNullStrokeFill(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    StrokeAndFill(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetArc(Double, Double, Double, Double): PrivateScope, Assembly, Static, HideBySig
    WrapBMP(Image): PrivateScope, Public, Static, HideBySig
    WriteWord(Stream, Int32): PrivateScope, Public, Static, HideBySig
    WriteDWord(Stream, Int32): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.codec.wmf.MetaFont: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.codec.wmf.MetaObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 MARKER_BOLD = 1 : Assembly, Static, Literal, HasDefault
    Int32 MARKER_ITALIC = 2 : Assembly, Static, Literal, HasDefault
    Int32 MARKER_COURIER = 0 : Assembly, Static, Literal, HasDefault
    Int32 MARKER_HELVETICA = 4 : Assembly, Static, Literal, HasDefault
    Int32 MARKER_TIMES = 8 : Assembly, Static, Literal, HasDefault
    Int32 MARKER_SYMBOL = 12 : Assembly, Static, Literal, HasDefault
    Int32 DEFAULT_PITCH = 0 : Assembly, Static, Literal, HasDefault
    Int32 FIXED_PITCH = 1 : Assembly, Static, Literal, HasDefault
    Int32 VARIABLE_PITCH = 2 : Assembly, Static, Literal, HasDefault
    Int32 FF_DONTCARE = 0 : Assembly, Static, Literal, HasDefault
    Int32 FF_ROMAN = 1 : Assembly, Static, Literal, HasDefault
    Int32 FF_SWISS = 2 : Assembly, Static, Literal, HasDefault
    Int32 FF_MODERN = 3 : Assembly, Static, Literal, HasDefault
    Int32 FF_SCRIPT = 4 : Assembly, Static, Literal, HasDefault
    Int32 FF_DECORATIVE = 5 : Assembly, Static, Literal, HasDefault
    Int32 BOLDTHRESHOLD = 600 : Assembly, Static, Literal, HasDefault
    Int32 nameSize = 32 : Assembly, Static, Literal, HasDefault
    Int32 ETO_OPAQUE = 2 : Assembly, Static, Literal, HasDefault
    Int32 ETO_CLIPPED = 4 : Assembly, Static, Literal, HasDefault
  Properties:
    iTextSharp.text.pdf.BaseFont Font 'get ' : 
    Single Angle 'get ' : 
  Methods:
    Init(InputMeta): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Font(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Angle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsUnderline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsStrikeout(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFontSize(MetaState): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.codec.wmf.MetaPen: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.codec.wmf.MetaObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 PS_SOLID = 0 : Public, Static, Literal, HasDefault
    Int32 PS_DASH = 1 : Public, Static, Literal, HasDefault
    Int32 PS_DOT = 2 : Public, Static, Literal, HasDefault
    Int32 PS_DASHDOT = 3 : Public, Static, Literal, HasDefault
    Int32 PS_DASHDOTDOT = 4 : Public, Static, Literal, HasDefault
    Int32 PS_NULL = 5 : Public, Static, Literal, HasDefault
    Int32 PS_INSIDEFRAME = 6 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Style 'get ' : 
    Int32 PenWidth 'get ' : 
    iTextSharp.text.BaseColor Color 'get ' : 
  Methods:
    Init(InputMeta): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Style(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PenWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Color(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.codec.wmf.MetaState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.codec.wmf.MetaState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.Stack`1[iTextSharp.text.pdf.codec.wmf.MetaState] savedStates : Public
    System.Collections.Generic.List`1[iTextSharp.text.pdf.codec.wmf.MetaObject] MetaObjects : Public
    iTextSharp.text.pdf.codec.wmf.Point currentPoint : Public
    iTextSharp.text.pdf.codec.wmf.MetaPen currentPen : Public
    iTextSharp.text.pdf.codec.wmf.MetaBrush currentBrush : Public
    iTextSharp.text.pdf.codec.wmf.MetaFont currentFont : Public
    iTextSharp.text.BaseColor currentBackgroundColor : Public
    iTextSharp.text.BaseColor currentTextColor : Public
    Int32 backgroundMode : Public
    Int32 polyFillMode : Public
    Int32 lineJoin : Public
    Int32 textAlign : Public
    Int32 offsetWx : Public
    Int32 offsetWy : Public
    Int32 extentWx : Public
    Int32 extentWy : Public
    Single scalingX : Public
    Single scalingY : Public
    Int32 TA_NOUPDATECP : Public, Static
    Int32 TA_UPDATECP : Public, Static
    Int32 TA_LEFT : Public, Static
    Int32 TA_RIGHT : Public, Static
    Int32 TA_CENTER : Public, Static
    Int32 TA_TOP : Public, Static
    Int32 TA_BOTTOM : Public, Static
    Int32 TA_BASELINE : Public, Static
    Int32 TRANSPARENT : Public, Static
    Int32 OPAQUE : Public, Static
    Int32 ALTERNATE : Public, Static
    Int32 WINDING : Public, Static
  Properties:
    iTextSharp.text.pdf.codec.wmf.MetaState metaState 'set' : 
    Single ScalingX 'set' : 
    Single ScalingY 'set' : 
    Int32 OffsetWx 'set' : 
    Int32 OffsetWy 'set' : 
    Int32 ExtentWx 'set' : 
    Int32 ExtentWy 'set' : 
    iTextSharp.text.pdf.codec.wmf.Point CurrentPoint 'get set' : 
    iTextSharp.text.pdf.codec.wmf.MetaBrush CurrentBrush 'get ' : 
    iTextSharp.text.pdf.codec.wmf.MetaPen CurrentPen 'get ' : 
    iTextSharp.text.pdf.codec.wmf.MetaFont CurrentFont 'get ' : 
    iTextSharp.text.BaseColor CurrentBackgroundColor 'get set' : 
    iTextSharp.text.BaseColor CurrentTextColor 'get set' : 
    Int32 BackgroundMode 'get set' : 
    Int32 TextAlign 'get set' : 
    Int32 PolyFillMode 'get set' : 
    iTextSharp.text.pdf.PdfContentByte LineJoinRectangle 'set' : 
    iTextSharp.text.pdf.PdfContentByte LineJoinPolygon 'set' : 
    Boolean LineNeutral 'get ' : 
  Methods:
    set_metaState(MetaState): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddMetaObject(MetaObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SelectMetaObject(Int32, PdfContentByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteMetaObject(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SaveState(PdfContentByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RestoreState(Int32, PdfContentByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Cleanup(PdfContentByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TransformX(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TransformY(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_ScalingX(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ScalingY(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_OffsetWx(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_OffsetWy(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ExtentWx(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ExtentWy(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    TransformAngle(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_CurrentPoint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CurrentPoint(Point): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentBrush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentPen(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentFont(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentBackgroundColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CurrentBackgroundColor(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentTextColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CurrentTextColor(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BackgroundMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BackgroundMode(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TextAlign(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TextAlign(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PolyFillMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PolyFillMode(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LineJoinRectangle(PdfContentByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LineJoinPolygon(PdfContentByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LineNeutral(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.collection.PdfCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 DETAILS = 0 : Public, Static, Literal, HasDefault
    Int32 TILE = 1 : Public, Static, Literal, HasDefault
    Int32 HIDDEN = 2 : Public, Static, Literal, HasDefault
    Int32 CUSTOM = 3 : Public, Static, Literal, HasDefault
  Properties:
    System.String InitialDocument 'set' : 
    iTextSharp.text.pdf.collection.PdfCollectionSchema Schema 'get set' : 
    iTextSharp.text.pdf.collection.PdfCollectionSort Sort 'set' : 
  Methods:
    set_InitialDocument(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Schema(PdfCollectionSchema): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Schema(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Sort(PdfCollectionSort): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.collection.PdfCollectionField: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 TEXT = 0 : Public, Static, Literal, HasDefault
    Int32 DATE = 1 : Public, Static, Literal, HasDefault
    Int32 NUMBER = 2 : Public, Static, Literal, HasDefault
    Int32 FILENAME = 3 : Public, Static, Literal, HasDefault
    Int32 DESC = 4 : Public, Static, Literal, HasDefault
    Int32 MODDATE = 5 : Public, Static, Literal, HasDefault
    Int32 CREATIONDATE = 6 : Public, Static, Literal, HasDefault
    Int32 SIZE = 7 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Order 'set' : 
    Boolean Visible 'set' : 
    Boolean Editable 'set' : 
  Methods:
    set_Order(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Visible(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Editable(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsCollectionItem(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetValue(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.collection.PdfCollectionItem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(iTextSharp.text.pdf.collection.PdfCollectionSchema): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.collection.PdfCollectionSchema schema : Assembly
  Methods:
    AddItem(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddItem(String, PdfString): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddItem(String, PdfDate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddItem(String, PdfNumber): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddItem(String, DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddItem(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddItem(String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddItem(String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPrefix(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.collection.PdfCollectionSchema: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddField(String, PdfCollectionField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.collection.PdfCollectionSort: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetSortOrder(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSortOrder(Boolean[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.collection.PdfTargetDictionary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(iTextSharp.text.pdf.collection.PdfTargetDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String EmbeddedFileName 'set' : 
    System.String FileAttachmentPagename 'set' : 
    Int32 FileAttachmentPage 'set' : 
    System.String FileAttachmentName 'set' : 
    Int32 FileAttachmentIndex 'set' : 
    iTextSharp.text.pdf.collection.PdfTargetDictionary AdditionalPath 'set' : 
  Methods:
    set_EmbeddedFileName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FileAttachmentPagename(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FileAttachmentPage(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FileAttachmentName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FileAttachmentIndex(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AdditionalPath(PdfTargetDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.ColorDetails: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfName, iTextSharp.text.pdf.PdfIndirectReference, iTextSharp.text.pdf.ICachedColorSpace): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfIndirectReference IndirectReference 'get ' : 
    iTextSharp.text.pdf.PdfName ColorSpaceName 'get ' : 
  Methods:
    get_IndirectReference(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ColorSpaceName(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    GetPdfObject(PdfWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.ColumnText: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfContentByte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single GLOBAL_SPACE_CHAR_RATIO : Public, Static
    Int32 AR_NOVOWEL = 1 : Public, Static, Literal, HasDefault
    Int32 AR_COMPOSEDTASHKEEL = 4 : Public, Static, Literal, HasDefault
    Int32 AR_LIG = 8 : Public, Static, Literal, HasDefault
    Int32 DIGITS_EN2AN = 32 : Public, Static, Literal, HasDefault
    Int32 DIGITS_AN2EN = 64 : Public, Static, Literal, HasDefault
    Int32 DIGITS_EN2AN_INIT_LR = 96 : Public, Static, Literal, HasDefault
    Int32 DIGITS_EN2AN_INIT_AL = 128 : Public, Static, Literal, HasDefault
    Int32 DIGIT_TYPE_AN = 0 : Public, Static, Literal, HasDefault
    Int32 DIGIT_TYPE_AN_EXTENDED = 256 : Public, Static, Literal, HasDefault
    Int32 NO_MORE_TEXT = 1 : Public, Static, Literal, HasDefault
    Int32 NO_MORE_COLUMN = 2 : Public, Static, Literal, HasDefault
  Properties:
    Single Leading 'get set' : 
    Single MultipliedLeading 'get ' : 
    Single YLine 'get set' : 
    Int32 RowsDrawn 'get ' : 
    Int32 Alignment 'get set' : 
    Single Indent 'get set' : 
    Single FollowingIndent 'get set' : 
    Single RightIndent 'get set' : 
    Single CurrentLeading 'get ' : 
    Boolean InheritGraphicState 'get set' : 
    Boolean IgnoreSpacingBefore 'get set' : 
    Single ExtraParagraphSpace 'get set' : 
    Single SpaceCharRatio 'get set' : 
    Int32 RunDirection 'get set' : 
    Int32 LinesWritten 'get ' : 
    Single LastX 'get ' : 
    Int32 ArabicOptions 'get set' : 
    Single Descender 'get ' : 
    iTextSharp.text.pdf.PdfContentByte Canvas 'get set' : 
    iTextSharp.text.pdf.PdfContentByte[] Canvases 'get set' : 
    System.Collections.Generic.IList`1[iTextSharp.text.IElement] CompositeElements 'get ' : 
    Boolean UseAscender 'get set' : 
    Single FilledWidth 'get set' : 
    Boolean AdjustFirstLine 'get set' : 
  Methods:
    Duplicate(ColumnText): PrivateScope, Public, Static, HideBySig
    SetACopy(ColumnText): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddText(Phrase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetText(Phrase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddText(Chunk): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddElement(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    isAllowedElement(IElement): PrivateScope, Public, Static, HideBySig
    SetColumns(Single[], Single[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSimpleColumn(Phrase, Single, Single, Single, Single, Single, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSimpleColumn(Single, Single, Single, Single, Single, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSimpleColumn(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSimpleColumn(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLeading(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Leading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Leading(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MultipliedLeading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_YLine(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_YLine(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RowsDrawn(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Alignment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Alignment(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Indent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Indent(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetIndent(Single, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_FollowingIndent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FollowingIndent(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RightIndent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RightIndent(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentLeading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_InheritGraphicState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_InheritGraphicState(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IgnoreSpacingBefore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IgnoreSpacingBefore(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Go(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Go(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Go(Boolean, IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsWordSplit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ExtraParagraphSpace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ExtraParagraphSpace(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ClearChunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SpaceCharRatio(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SpaceCharRatio(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RunDirection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RunDirection(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LinesWritten(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LastX(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ArabicOptions(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ArabicOptions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Descender(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetWidth(Phrase, Int32, Int32): PrivateScope, Public, Static, HideBySig
    GetWidth(Phrase): PrivateScope, Public, Static, HideBySig
    ShowTextAligned(PdfContentByte, Int32, Phrase, Single, Single, Single, Int32, Int32): PrivateScope, Public, Static, HideBySig
    ShowTextAligned(PdfContentByte, Int32, Phrase, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    FitText(Font, String, Rectangle, Single, Int32): PrivateScope, Public, Static, HideBySig
    set_Canvas(PdfContentByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Canvas(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Canvases(PdfContentByte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Canvases(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ZeroHeightElement(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_CompositeElements(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_UseAscender(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UseAscender(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    HasMoreText(Int32): PrivateScope, Public, Static, HideBySig
    set_FilledWidth(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FilledWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    UpdateFilledWidth(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_AdjustFirstLine(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AdjustFirstLine(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.crypto.AESCipherCBCnoPad: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ProcessBlock(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.crypto.ARCFOUREncryption: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    PrepareARCFOURKey(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PrepareARCFOURKey(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EncryptARCFOUR(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EncryptARCFOUR(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EncryptARCFOUR(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EncryptARCFOUR(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.crypto.IVGenerator: AutoLayout, AnsiClass, Class, Public, Sealed
  Methods:
    GetIV(): PrivateScope, Public, Static, HideBySig
    GetIV(Int32): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.DefaultSplitCharacter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.ISplitCharacter
  Fields:
    iTextSharp.text.ISplitCharacter DEFAULT : Public, Static, InitOnly
  Methods:
    IsSplitCharacter(Int32, Int32, Int32, Char[], PdfChunk[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.pdf.draw.IDrawInterface: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Draw(PdfContentByte, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.draw.VerticalPositionMark: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.draw.IDrawInterface, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.draw.IDrawInterface
    iTextSharp.text.IElement
  Properties:
    Int32 Type 'get ' : 
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
    iTextSharp.text.pdf.draw.IDrawInterface DrawInterface 'get set' : 
    Single Offset 'get set' : 
  Methods:
    Draw(PdfContentByte, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNestable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DrawInterface(IDrawInterface): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DrawInterface(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Offset(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Offset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.draw.LineSeparator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.draw.VerticalPositionMark
    Void .ctor(Single, Single, iTextSharp.text.BaseColor, Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Font): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single LineWidth 'get set' : 
    Single Percentage 'get set' : 
    iTextSharp.text.BaseColor LineColor 'get set' : 
    Int32 Alignment 'get set' : 
  Methods:
    Draw(PdfContentByte, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig
    DrawLine(PdfContentByte, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_LineWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LineWidth(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Percentage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Percentage(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LineColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LineColor(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Alignment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Alignment(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.draw.DottedLineSeparator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.draw.LineSeparator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Gap 'get set' : 
  Methods:
    Draw(PdfContentByte, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig
    get_Gap(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Gap(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.TrueTypeFont: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.BaseFont
    Void .ctor(System.String, System.String, Boolean, Byte[], Boolean, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String[] codePages : Assembly, Static
  Properties:
    iTextSharp.text.pdf.RandomAccessFileOrArray Rf 'get ' : 
    System.String FileName 'get ' : 
    Boolean Cff 'get ' : 
    Int32 DirectoryOffset 'get ' : 
    System.String BaseFont 'get ' : 
    System.String PostscriptFontName 'get set' : 
    System.String[] CodePagesSupported 'get ' : 
    System.String[][] FullFontName 'get ' : 
    System.String Subfamily 'get ' : 
    System.String[][] AllNameEntries 'get ' : 
    System.String[][] FamilyFontName 'get ' : 
    Int32 MaxGlyphId 'get ' : 
  Methods:
    get_Rf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FileName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Cff(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DirectoryOffset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    FillTables(): PrivateScope, Assembly, HideBySig
    get_BaseFont(): PrivateScope, Assembly, HideBySig, SpecialName
    GetNames(Int32): PrivateScope, Assembly, HideBySig
    GetAllNames(): PrivateScope, Assembly, HideBySig
    CheckCff(): PrivateScope, Assembly, HideBySig
    Process(Byte[], Boolean): PrivateScope, Assembly, HideBySig
    ReadCMaps(): PrivateScope, Assembly, HideBySig
    ReadFormat12(): PrivateScope, Assembly, HideBySig
    ReadFormat0(): PrivateScope, Assembly, HideBySig
    ReadFormat4(): PrivateScope, Assembly, HideBySig
    ReadFormat6(): PrivateScope, Assembly, HideBySig
    ReadKerning(): PrivateScope, Assembly, HideBySig
    GetKerning(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GetRawWidth(Int32, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetFontDescriptor(PdfIndirectReference, String, PdfIndirectReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFullFont(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddRangeUni(Dictionary`2, Boolean, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteFont(PdfWriter, PdfIndirectReference, Object[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ReadCffFont(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFullFontStream(): PrivateScope, Public, Virtual, HideBySig
    GetFontDescriptor(Int32, Single): PrivateScope, Public, Virtual, HideBySig
    GetMetricsTT(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_PostscriptFontName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_PostscriptFontName(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CodePagesSupported(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullFontName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Subfamily(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AllNameEntries(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FamilyFontName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    HasKernPairs(): PrivateScope, Public, Virtual, HideBySig
    SetKerning(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    IsWinAnsiSupported(): PrivateScope, Assembly, HideBySig
    get_MaxGlyphId(): PrivateScope, Public, HideBySig, SpecialName
Class iTextSharp.text.pdf.EnumerateTTC: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :iTextSharp.text.pdf.TrueTypeFont
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String[] Names 'get ' : 
  Methods:
    FindNames(): PrivateScope, Assembly, HideBySig
    get_Names(): PrivateScope, Assembly, HideBySig, SpecialName
Interface iTextSharp.text.pdf.IPdfPageEvent: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    OnOpenDocument(PdfWriter, Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnStartPage(PdfWriter, Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnEndPage(PdfWriter, Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnCloseDocument(PdfWriter, Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnParagraph(PdfWriter, Document, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnParagraphEnd(PdfWriter, Document, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnChapter(PdfWriter, Document, Single, Paragraph): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnChapterEnd(PdfWriter, Document, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnSection(PdfWriter, Document, Single, Int32, Paragraph): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnSectionEnd(PdfWriter, Document, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnGenericTag(PdfWriter, Document, Rectangle, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.PdfPageEventHelper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.IPdfPageEvent
  Methods:
    OnOpenDocument(PdfWriter, Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnStartPage(PdfWriter, Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnEndPage(PdfWriter, Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnCloseDocument(PdfWriter, Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnParagraph(PdfWriter, Document, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnParagraphEnd(PdfWriter, Document, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnChapter(PdfWriter, Document, Single, Paragraph): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnChapterEnd(PdfWriter, Document, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnSection(PdfWriter, Document, Single, Int32, Paragraph): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnSectionEnd(PdfWriter, Document, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnGenericTag(PdfWriter, Document, Rectangle, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.pdf.IPdfPCellEvent: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    CellLayout(PdfPCell, Rectangle, PdfContentByte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.events.FieldPositioningEvents: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfPageEventHelper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfWriter, iTextSharp.text.pdf.PdfFormField): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfFormField, iTextSharp.text.pdf.PdfFormField): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfWriter, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfWriter, iTextSharp.text.pdf.PdfFormField, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.IPdfPCellEvent
  Fields:
    Single padding : Public
  Properties:
    Single Padding 'get set' : 
    iTextSharp.text.pdf.PdfFormField Parent 'get set' : 
  Methods:
    AddField(String, PdfFormField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Padding(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Padding(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Parent(PdfFormField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    OnGenericTag(PdfWriter, Document, Rectangle, String): PrivateScope, Public, Virtual, HideBySig
    CellLayout(PdfPCell, Rectangle, PdfContentByte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.events.IndexEvents: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfPageEventHelper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnGenericTag(PdfWriter, Document, Rectangle, String): PrivateScope, Public, Virtual, HideBySig
    Create(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Create(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Create(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Create(Chunk, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Create(Chunk, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Create(Chunk, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetComparator(IComparer`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSortedEntries(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.events.IndexEvents+Entry: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(System.String, System.String, System.String, System.String, iTextSharp.text.pdf.events.IndexEvents): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetIn1(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIn2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIn3(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTag(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPageNumberAndTag(Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPagenumbers(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.events.PdfPageEventForwarder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.IPdfPageEvent
  Methods:
    AddPageEvent(IPdfPageEvent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnOpenDocument(PdfWriter, Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnStartPage(PdfWriter, Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnEndPage(PdfWriter, Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnCloseDocument(PdfWriter, Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnParagraph(PdfWriter, Document, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnParagraphEnd(PdfWriter, Document, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnChapter(PdfWriter, Document, Single, Paragraph): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnChapterEnd(PdfWriter, Document, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnSection(PdfWriter, Document, Single, Int32, Paragraph): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnSectionEnd(PdfWriter, Document, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnGenericTag(PdfWriter, Document, Rectangle, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.events.PdfPCellEventForwarder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.IPdfPCellEvent
  Methods:
    AddCellEvent(IPdfPCellEvent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CellLayout(PdfPCell, Rectangle, PdfContentByte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.pdf.IPdfPTableEvent: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    TableLayout(PdfPTable, Single[][], Single[], Int32, Int32, PdfContentByte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.pdf.IPdfPTableEventSplit: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    iTextSharp.text.pdf.IPdfPTableEvent
  Methods:
    SplitTable(PdfPTable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.pdf.IPdfPTableEventAfterSplit: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    iTextSharp.text.pdf.IPdfPTableEventSplit
    iTextSharp.text.pdf.IPdfPTableEvent
  Methods:
    AfterSplitTable(PdfPTable, PdfPRow, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.events.PdfPTableEventForwarder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.IPdfPTableEventAfterSplit
    iTextSharp.text.pdf.IPdfPTableEventSplit
    iTextSharp.text.pdf.IPdfPTableEvent
  Methods:
    AddTableEvent(IPdfPTableEvent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TableLayout(PdfPTable, Single[][], Single[], Int32, Int32, PdfContentByte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SplitTable(PdfPTable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AfterSplitTable(PdfPTable, PdfPRow, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.pdf.interfaces.IPdfViewerPreferences: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Int32 ViewerPreferences 'set' : 
  Methods:
    set_ViewerPreferences(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    AddViewerPreference(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.PdfReader: AutoLayout, AnsiClass, Class, Public
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Byte[], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Org.BouncyCastle.X509.X509Certificate, Org.BouncyCastle.Crypto.ICipherParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Uri, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.RandomAccessFileOrArray, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.RandomAccessFileOrArray, Byte[], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.interfaces.IPdfViewerPreferences
    System.IDisposable
  Fields:
    Boolean unethicalreading : Public, Static
    Boolean debugmode : Public, Static
  Properties:
    iTextSharp.text.pdf.RandomAccessFileOrArray SafeFile 'get ' : 
    Int32 NumberOfPages 'get ' : 
    iTextSharp.text.pdf.PdfDictionary Catalog 'get ' : 
    iTextSharp.text.pdf.PRAcroForm AcroForm 'get ' : 
    System.Collections.Generic.Dictionary`2[System.String,System.String] Info 'get ' : 
    Boolean Tampered 'get set' : 
    Byte[] Metadata 'get ' : 
    Int64 LastXref 'get ' : 
    Int32 XrefSize 'get ' : 
    Int64 EofPos 'get ' : 
    Char PdfVersion 'get ' : 
    Int64 Permissions 'get ' : 
    iTextSharp.text.pdf.PdfDictionary Trailer 'get ' : 
    iTextSharp.text.pdf.PdfEncryption Decrypt 'get ' : 
    iTextSharp.text.pdf.AcroFields AcroFields 'get ' : 
    System.String JavaScript 'get ' : 
    Int32 ViewerPreferences 'set' : 
    Int32 SimpleViewerPreferences 'get ' : 
    Boolean Appendable 'get set' : 
    Int64 FileLength 'get ' : 
    Boolean IsOpenedWithFullPermissions 'get ' : 
  Methods:
    get_SafeFile(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumberOfPages(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Catalog(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AcroForm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetPageRotation(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageRotation(PdfDictionary): PrivateScope, Assembly, HideBySig
    GetPageSizeWithRotation(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageSizeWithRotation(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageSize(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCropBox(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBoxSize(Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Info(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetNormalizedRectangle(PdfArray): PrivateScope, Public, Static, HideBySig
    IsTagged(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPdfObjectRelease(PdfObject): PrivateScope, Public, Static, HideBySig
    GetPdfObject(PdfObject): PrivateScope, Public, Static, HideBySig
    GetPdfObjectRelease(PdfObject, PdfObject): PrivateScope, Public, Static, HideBySig
    GetPdfObject(PdfObject, PdfObject): PrivateScope, Public, Static, HideBySig
    GetPdfObjectRelease(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPdfObject(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetLastXrefPartial(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReleaseLastXrefPartial(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReleaseLastXrefPartial(PdfObject): PrivateScope, Public, Static, HideBySig
    AddPdfObject(PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DumpPerc(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    KillIndirect(PdfObject): PrivateScope, Public, Static, HideBySig
    FlateDecode(Byte[]): PrivateScope, Public, Static, HideBySig
    DecodePredictor(Byte[], PdfObject): PrivateScope, Public, Static, HideBySig
    FlateDecode(Byte[], Boolean): PrivateScope, Public, Static, HideBySig
    ASCIIHexDecode(Byte[]): PrivateScope, Public, Static, HideBySig
    ASCII85Decode(Byte[]): PrivateScope, Public, Static, HideBySig
    LZWDecode(Byte[]): PrivateScope, Public, Static, HideBySig
    IsRebuilt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageN(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageNRelease(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReleasePage(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetReleasePage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageOrigRef(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageContent(Int32, RandomAccessFileOrArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageContent(PdfDictionary): PrivateScope, Public, Static, HideBySig
    GetPageResources(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageResources(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageContent(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPageContent(Int32, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPageContent(Int32, Byte[], Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DecodeBytes(Byte[], PdfDictionary): PrivateScope, Public, Static, HideBySig
    DecodeBytes(Byte[], PdfDictionary, IDictionary`2): PrivateScope, Public, Static, HideBySig
    GetStreamBytes(PRStream, RandomAccessFileOrArray): PrivateScope, Public, Static, HideBySig
    GetStreamBytes(PRStream): PrivateScope, Public, Static, HideBySig
    GetStreamBytesRaw(PRStream, RandomAccessFileOrArray): PrivateScope, Public, Static, HideBySig
    GetStreamBytesRaw(PRStream): PrivateScope, Public, Static, HideBySig
    EliminateSharedStreams(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Tampered(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Tampered(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Metadata(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LastXref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_XrefSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EofPos(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PdfVersion(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsEncrypted(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Permissions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Is128Key(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Trailer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Decrypt(): PrivateScope, Assembly, HideBySig, SpecialName
    Equalsn(Byte[], Byte[]): PrivateScope, Assembly, Static, HideBySig
    ExistsName(PdfDictionary, PdfName, PdfName): PrivateScope, Assembly, Static, HideBySig
    GetFontName(PdfDictionary): PrivateScope, Assembly, Static, HideBySig
    GetSubsetPrefix(PdfDictionary): PrivateScope, Assembly, Static, HideBySig
    ShuffleSubsetNames(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateFakeFontSubsets(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNamedDestination(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNamedDestination(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNamedDestinationFromNames(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNamedDestinationFromNames(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNamedDestinationFromStrings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveFields(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAnnotations(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLinks(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MakeRemoteNamedDestinationsLocal(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ConsolidateNamedDestinations(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveUnusedObjects(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AcroFields(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetJavaScript(RandomAccessFileOrArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_JavaScript(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SelectPages(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SelectPages(ICollection`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SelectPages(ICollection`1, Boolean): PrivateScope, Assembly, HideBySig
    set_ViewerPreferences(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddViewerPreference(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetViewerPreferences(PdfViewerPreferencesImp): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SimpleViewerPreferences(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Appendable(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Appendable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsNewXrefType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_FileLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsHybridXref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCryptoRef(): PrivateScope, Assembly, HideBySig
    HasUsageRights(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveUsageRights(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCertificationLevel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsOpenedWithFullPermissions(): PrivateScope, Public, HideBySig, SpecialName
    GetCryptoMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsMetadataEncrypted(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ComputeUserPassword(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfReader+PageRefs: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(PageRefs, iTextSharp.text.pdf.PdfReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Size 'get ' : 
  Methods:
    get_Size(): PrivateScope, Assembly, HideBySig, SpecialName
    ReadPages(): PrivateScope, Assembly, HideBySig
    ReReadPages(): PrivateScope, Assembly, HideBySig
    GetPageN(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageNRelease(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageOrigRefRelease(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageOrigRef(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    KeepPages(): PrivateScope, Assembly, HideBySig
    ReleasePage(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetReleasePage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InsertPage(Int32, PRIndirectReference): PrivateScope, Assembly, HideBySig
    SelectPages(ICollection`1): PrivateScope, Assembly, HideBySig
Class iTextSharp.text.pdf.FdfReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfReader
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.Dictionary`2[System.String,iTextSharp.text.pdf.PdfDictionary] fields : Assembly
    System.String fileSpec : Assembly
    iTextSharp.text.pdf.PdfName encoding : Assembly
  Properties:
    System.Collections.Generic.Dictionary`2[System.String,iTextSharp.text.pdf.PdfDictionary] Fields 'get ' : 
    System.String FileSpec 'get ' : 
  Methods:
    get_Fields(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetField(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAttachedFile(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldValue(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_FileSpec(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.FdfWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String StatusMessage 'get set' : 
    System.String File 'get set' : 
  Methods:
    WriteTo(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_StatusMessage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_StatusMessage(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetField(String, PdfObject): PrivateScope, Assembly, HideBySig
    IterateFields(Dictionary`2, Dictionary`2, String): PrivateScope, Assembly, HideBySig
    RemoveField(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFields(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetField(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFieldAsName(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFieldAsString(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFieldAsAction(String, PdfAction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFieldAsTemplate(String, PdfTemplate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFieldAsImage(String, Image): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFieldAsJavascript(String, PdfName, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetImportedPage(PdfReader, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateTemplate(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFields(FdfReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFields(PdfReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFields(AcroFields): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_File(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_File(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Interface iTextSharp.text.pdf.interfaces.IPdfEncryptionSettings: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    SetEncryption(Byte[], Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetEncryption(X509Certificate[], Int32[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.pdf.interfaces.IPdfVersion: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Char PdfVersion 'set' : 
  Methods:
    set_PdfVersion(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    SetAtLeastPdfVersion(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPdfVersion(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddDeveloperExtension(PdfDeveloperExtension): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.pdf.interfaces.IPdfDocumentActions: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    SetOpenAction(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetOpenAction(PdfAction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetAdditionalAction(PdfName, PdfAction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.pdf.interfaces.IPdfPageActions: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Int32 Duration 'set' : 
    iTextSharp.text.pdf.PdfTransition Transition 'set' : 
  Methods:
    SetPageAction(PdfName, PdfAction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    set_Duration(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Transition(PdfTransition): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface iTextSharp.text.pdf.interfaces.IPdfIsoConformance: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    IsPdfIso(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CheckPdfIsoConformance(Int32, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.pdf.interfaces.IPdfRunDirection: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Int32 RunDirection 'get set' : 
  Methods:
    set_RunDirection(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RunDirection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface iTextSharp.text.pdf.interfaces.IPdfAnnotations: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    iTextSharp.text.pdf.PdfAcroForm AcroForm 'get ' : 
    Int32 SigFlags 'set' : 
  Methods:
    get_AcroForm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    AddAnnotation(PdfAnnotation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddCalculationOrder(PdfFormField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    set_SigFlags(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class iTextSharp.text.pdf.PdfWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.DocWriter
  Interfaces:
    iTextSharp.text.pdf.interfaces.IPdfViewerPreferences
    iTextSharp.text.pdf.interfaces.IPdfEncryptionSettings
    iTextSharp.text.pdf.interfaces.IPdfVersion
    iTextSharp.text.pdf.interfaces.IPdfDocumentActions
    iTextSharp.text.pdf.interfaces.IPdfPageActions
    iTextSharp.text.pdf.interfaces.IPdfIsoConformance
    iTextSharp.text.pdf.interfaces.IPdfRunDirection
    iTextSharp.text.pdf.interfaces.IPdfAnnotations
  Fields:
    System.Collections.Generic.List`1[iTextSharp.text.pdf.PdfIndirectReference] pageReferences : Assembly
    Boolean fullCompression : Assembly
    iTextSharp.text.pdf.PdfName PDF_VERSION_1_2 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PDF_VERSION_1_3 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PDF_VERSION_1_4 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PDF_VERSION_1_5 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PDF_VERSION_1_6 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PDF_VERSION_1_7 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DOCUMENT_CLOSE : Public, Static
    iTextSharp.text.pdf.PdfName WILL_SAVE : Public, Static
    iTextSharp.text.pdf.PdfName DID_SAVE : Public, Static
    iTextSharp.text.pdf.PdfName WILL_PRINT : Public, Static
    iTextSharp.text.pdf.PdfName DID_PRINT : Public, Static
    iTextSharp.text.pdf.PdfName PAGE_OPEN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PAGE_CLOSE : Public, Static, InitOnly
    Int32 GENERATION_MAX = 65535 : Public, Static, Literal, HasDefault
    Char VERSION_1_2 = 2 : Public, Static, Literal, HasDefault
    Char VERSION_1_3 = 3 : Public, Static, Literal, HasDefault
    Char VERSION_1_4 = 4 : Public, Static, Literal, HasDefault
    Char VERSION_1_5 = 5 : Public, Static, Literal, HasDefault
    Char VERSION_1_6 = 6 : Public, Static, Literal, HasDefault
    Char VERSION_1_7 = 7 : Public, Static, Literal, HasDefault
    Int32 PageLayoutSinglePage = 1 : Public, Static, Literal, HasDefault
    Int32 PageLayoutOneColumn = 2 : Public, Static, Literal, HasDefault
    Int32 PageLayoutTwoColumnLeft = 4 : Public, Static, Literal, HasDefault
    Int32 PageLayoutTwoColumnRight = 8 : Public, Static, Literal, HasDefault
    Int32 PageLayoutTwoPageLeft = 16 : Public, Static, Literal, HasDefault
    Int32 PageLayoutTwoPageRight = 32 : Public, Static, Literal, HasDefault
    Int32 PageModeUseNone = 64 : Public, Static, Literal, HasDefault
    Int32 PageModeUseOutlines = 128 : Public, Static, Literal, HasDefault
    Int32 PageModeUseThumbs = 256 : Public, Static, Literal, HasDefault
    Int32 PageModeFullScreen = 512 : Public, Static, Literal, HasDefault
    Int32 PageModeUseOC = 1024 : Public, Static, Literal, HasDefault
    Int32 PageModeUseAttachments = 2048 : Public, Static, Literal, HasDefault
    Int32 HideToolbar = 4096 : Public, Static, Literal, HasDefault
    Int32 HideMenubar = 8192 : Public, Static, Literal, HasDefault
    Int32 HideWindowUI = 16384 : Public, Static, Literal, HasDefault
    Int32 FitWindow = 32768 : Public, Static, Literal, HasDefault
    Int32 CenterWindow = 65536 : Public, Static, Literal, HasDefault
    Int32 DisplayDocTitle = 131072 : Public, Static, Literal, HasDefault
    Int32 NonFullScreenPageModeUseNone = 262144 : Public, Static, Literal, HasDefault
    Int32 NonFullScreenPageModeUseOutlines = 524288 : Public, Static, Literal, HasDefault
    Int32 NonFullScreenPageModeUseThumbs = 1048576 : Public, Static, Literal, HasDefault
    Int32 NonFullScreenPageModeUseOC = 2097152 : Public, Static, Literal, HasDefault
    Int32 DirectionL2R = 4194304 : Public, Static, Literal, HasDefault
    Int32 DirectionR2L = 8388608 : Public, Static, Literal, HasDefault
    Int32 PrintScalingNone = 16777216 : Public, Static, Literal, HasDefault
    Int32 SIGNATURE_EXISTS = 1 : Public, Static, Literal, HasDefault
    Int32 SIGNATURE_APPEND_ONLY = 2 : Public, Static, Literal, HasDefault
    Int32 PDFXNONE = 0 : Public, Static, Literal, HasDefault
    Int32 PDFX1A2001 = 1 : Public, Static, Literal, HasDefault
    Int32 PDFX32002 = 2 : Public, Static, Literal, HasDefault
    Int32 STANDARD_ENCRYPTION_40 = 0 : Public, Static, Literal, HasDefault
    Int32 STANDARD_ENCRYPTION_128 = 1 : Public, Static, Literal, HasDefault
    Int32 ENCRYPTION_AES_128 = 2 : Public, Static, Literal, HasDefault
    Int32 ENCRYPTION_AES_256 = 3 : Public, Static, Literal, HasDefault
    Int32 ENCRYPTION_MASK = 7 : Assembly, Static, Literal, HasDefault
    Int32 DO_NOT_ENCRYPT_METADATA = 8 : Public, Static, Literal, HasDefault
    Int32 EMBEDDED_FILES_ONLY = 24 : Public, Static, Literal, HasDefault
    Int32 ALLOW_PRINTING = 2052 : Public, Static, Literal, HasDefault
    Int32 ALLOW_MODIFY_CONTENTS = 8 : Public, Static, Literal, HasDefault
    Int32 ALLOW_COPY = 16 : Public, Static, Literal, HasDefault
    Int32 ALLOW_MODIFY_ANNOTATIONS = 32 : Public, Static, Literal, HasDefault
    Int32 ALLOW_FILL_IN = 256 : Public, Static, Literal, HasDefault
    Int32 ALLOW_SCREENREADERS = 512 : Public, Static, Literal, HasDefault
    Int32 ALLOW_ASSEMBLY = 1024 : Public, Static, Literal, HasDefault
    Int32 ALLOW_DEGRADED_PRINTING = 4 : Public, Static, Literal, HasDefault
    Int32 AllowPrinting = 2052 : Public, Static, Literal, HasDefault
    Int32 AllowModifyContents = 8 : Public, Static, Literal, HasDefault
    Int32 AllowCopy = 16 : Public, Static, Literal, HasDefault
    Int32 AllowModifyAnnotations = 32 : Public, Static, Literal, HasDefault
    Int32 AllowFillIn = 256 : Public, Static, Literal, HasDefault
    Int32 AllowScreenReaders = 512 : Public, Static, Literal, HasDefault
    Int32 AllowAssembly = 1024 : Public, Static, Literal, HasDefault
    Int32 AllowDegradedPrinting = 4 : Public, Static, Literal, HasDefault
    Boolean STRENGTH40BITS = False : Public, Static, Literal, HasDefault
    Boolean STRENGTH128BITS = True : Public, Static, Literal, HasDefault
    Int32 markAll = 0 : Public, Static, Literal, HasDefault
    Int32 markInlineElementsOnly = 1 : Public, Static, Literal, HasDefault
    Single SPACE_CHAR_RATIO_DEFAULT = 2.5 : Public, Static, Literal, HasDefault
    Single NO_SPACE_CHAR_RATIO = 1E+07 : Public, Static, Literal, HasDefault
    Int32 RUN_DIRECTION_DEFAULT = 0 : Public, Static, Literal, HasDefault
    Int32 RUN_DIRECTION_NO_BIDI = 1 : Public, Static, Literal, HasDefault
    Int32 RUN_DIRECTION_LTR = 2 : Public, Static, Literal, HasDefault
    Int32 RUN_DIRECTION_RTL = 3 : Public, Static, Literal, HasDefault
  Properties:
    iTextSharp.text.pdf.PdfDocument PdfDocument 'get ' : 
    iTextSharp.text.pdf.PdfDictionary Info 'get ' : 
    Single InitialLeading 'set' : 
    iTextSharp.text.pdf.PdfContentByte DirectContent 'get ' : 
    iTextSharp.text.pdf.PdfContentByte DirectContentUnder 'get ' : 
    iTextSharp.text.pdf.ICC_Profile ColorProfile 'get ' : 
    iTextSharp.text.pdf.PdfIndirectReference PdfIndirectReference 'get ' : 
    iTextSharp.text.pdf.OutputStreamCounter Os 'get ' : 
    iTextSharp.text.pdf.PdfDictionary ExtraCatalog 'get ' : 
    iTextSharp.text.pdf.PdfDictionary PageDictEntries 'get ' : 
    Int32 PageNumber 'get ' : 
    iTextSharp.text.pdf.PdfIndirectReference CurrentPage 'get ' : 
    Int32 CurrentPageNumber 'get ' : 
    iTextSharp.text.pdf.PdfName Tabs 'get set' : 
    iTextSharp.text.pdf.IPdfPageEvent PageEvent 'get set' : 
    iTextSharp.text.pdf.PdfOutline RootOutline 'get ' : 
    System.Collections.Generic.IList`1[System.Collections.Generic.Dictionary`2[System.String,System.Object]] Outlines 'set' : 
    Char PdfVersion 'set' : 
    Int32 ViewerPreferences 'set' : 
    iTextSharp.text.pdf.PdfPageLabels PageLabels 'set' : 
    iTextSharp.text.pdf.collection.PdfCollection Collection 'set' : 
    iTextSharp.text.pdf.PdfAcroForm AcroForm 'get ' : 
    Int32 SigFlags 'set' : 
    Byte[] XmpMetadata 'get set' : 
    Byte[] PageXmpMetadata 'set' : 
    iTextSharp.text.xml.xmp.XmpWriter XmpWriter 'get ' : 
    Int32 PDFXConformance 'get set' : 
    iTextSharp.text.pdf.PdfEncryption Encryption 'get ' : 
    Boolean FullCompression 'get ' : 
    Int32 CompressionLevel 'get set' : 
    Int64 CurrentDocumentSize 'get ' : 
    iTextSharp.text.pdf.PdfStructureTreeRoot StructureTreeRoot 'get ' : 
    iTextSharp.text.pdf.PdfOCProperties OCProperties 'get ' : 
    iTextSharp.text.Rectangle PageSize 'get ' : 
    iTextSharp.text.Rectangle CropBoxSize 'set' : 
    Boolean PageEmpty 'get set' : 
    Int32 Duration 'set' : 
    iTextSharp.text.pdf.PdfTransition Transition 'set' : 
    iTextSharp.text.Image Thumbnail 'set' : 
    iTextSharp.text.pdf.PdfDictionary Group 'get set' : 
    Single SpaceCharRatio 'get set' : 
    Int32 RunDirection 'get set' : 
    Single Userunit 'set' : 
    iTextSharp.text.pdf.PdfDictionary DefaultColorspace 'get ' : 
    Boolean StrictImageSequence 'get set' : 
    Boolean UserProperties 'get set' : 
    Boolean RgbTransparencyBlending 'get set' : 
  Methods:
    GetInstance(Document, Stream): PrivateScope, Public, Static, HideBySig
    GetInstance(Document, Stream, IDocListener): PrivateScope, Public, Static, HideBySig
    get_PdfDocument(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Info(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetVerticalPosition(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_InitialLeading(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DirectContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DirectContentUnder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ResetContent(): PrivateScope, Assembly, HideBySig
    get_ColorProfile(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddLocalDestinations(SortedDictionary`2): PrivateScope, Assembly, HideBySig
    AddToBody(PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddToBody(PdfObject, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddToBody(PdfObject, PdfIndirectReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddToBody(PdfObject, PdfIndirectReference, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddToBody(PdfObject, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddToBody(PdfObject, Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_PdfIndirectReference(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Os(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExtraCatalog(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddPageDictEntry(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_PageDictEntries(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ResetPageDictEntries(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLinearPageMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReorderPages(Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageReference(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_PageNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentPage(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_CurrentPageNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetPageViewport(PdfArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Tabs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Tabs(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(PdfPage, PdfContents): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    get_PageEvent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PageEvent(IPdfPageEvent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Open(): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    get_RootOutline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Outlines(IList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PdfVersion(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetAtLeastPdfVersion(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPdfVersion(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddDeveloperExtension(PdfDeveloperExtension): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPdfVersion(): PrivateScope, Assembly, HideBySig
    set_ViewerPreferences(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddViewerPreference(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_PageLabels(PdfPageLabels): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddNamedDestinations(IDictionary`2, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddNamedDestination(String, Int32, PdfDestination): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddJavaScript(PdfAction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddJavaScript(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddJavaScript(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddJavaScript(String, PdfAction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddJavaScript(String, String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddJavaScript(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddFileAttachment(String, Byte[], String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddFileAttachment(String, PdfFileSpecification): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddFileAttachment(PdfFileSpecification): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetOpenAction(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetOpenAction(PdfAction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAdditionalAction(PdfName, PdfAction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Collection(PdfCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AcroForm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddAnnotation(PdfAnnotation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddAnnotation(PdfAnnotation, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    AddCalculationOrder(PdfFormField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_SigFlags(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetLanguage(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_XmpMetadata(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_XmpMetadata(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PageXmpMetadata(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_XmpWriter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreateXmpMetadata(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InitPdfIsoConformance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_PDFXConformance(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PDFXConformance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsPdfIso(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsPdfX(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetOutputIntents(String, String, String, String, ICC_Profile): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetOutputIntents(String, String, String, String, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetOutputIntents(PdfReader, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Encryption(): PrivateScope, Assembly, HideBySig, SpecialName
    SetEncryption(Byte[], Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEncryption(X509Certificate[], Int32[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEncryption(Byte[], Byte[], Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEncryption(Boolean, String, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEncryption(Int32, String, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_FullCompression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetFullCompression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_CompressionLevel(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompressionLevel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddSimple(BaseFont): PrivateScope, Assembly, HideBySig
    EliminateFontSubset(PdfDictionary): PrivateScope, Assembly, HideBySig
    AddDirectTemplateSimple(PdfTemplate, PdfName): PrivateScope, Assembly, HideBySig
    ReleaseTemplate(PdfTemplate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetImportedPage(PdfReader, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FreeReader(PdfReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_CurrentDocumentSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetReaderFile(PdfReader): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetColorspaceName(): PrivateScope, Assembly, HideBySig
    AddSimple(ICachedColorSpace): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    AddSimplePattern(PdfPatternPainter): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    AddSimpleShadingPattern(PdfShadingPattern): PrivateScope, Assembly, HideBySig
    AddSimpleShading(PdfShading): PrivateScope, Assembly, HideBySig
    AddSimpleExtGState(PdfDictionary): PrivateScope, Assembly, HideBySig
    AddSimpleProperty(Object, PdfIndirectReference): PrivateScope, Assembly, HideBySig
    PropertyExists(Object): PrivateScope, Assembly, HideBySig
    SetTagged(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTagged(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NeedToBeMarkedInContent(IAccessibleElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CheckElementRole(IAccessibleElement, IAccessibleElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsTagged(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FlushTaggedObjects(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    FlushAcroFields(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    get_StructureTreeRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OCProperties(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddOCGRadioGroup(List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LockLayer(PdfLayer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RegisterLayer(IPdfOCG): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    get_PageSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CropBoxSize(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetBoxSize(String, Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBoxSize(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBoxSize(String, Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_PageEmpty(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PageEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetPageAction(PdfName, PdfAction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Duration(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Transition(PdfTransition): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Thumbnail(Image): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Group(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Group(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SpaceCharRatio(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SpaceCharRatio(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RunDirection(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RunDirection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Userunit(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DefaultColorspace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetDefaultColorspace(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSimplePatternColorspace(BaseColor): PrivateScope, Assembly, HideBySig
    set_StrictImageSequence(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_StrictImageSequence(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ClearTextWrap(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddDirectImageSimple(Image): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddDirectImageSimple(Image, PdfIndirectReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(PdfImage, PdfIndirectReference): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetImageReference(PdfName): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    set_UserProperties(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UserProperties(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RgbTransparencyBlending(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RgbTransparencyBlending(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreateAnnotation(Rectangle, PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateAnnotation(Single, Single, Single, Single, PdfString, PdfString, PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateAnnotation(Single, Single, Single, Single, PdfAction, PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CheckPdfIsoConformance(PdfWriter, Int32, Object): PrivateScope, Public, Static, HideBySig
    CheckPdfIsoConformance(Int32, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStandardStructElems(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfWriter+PdfBody: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  Properties:
    Int32 Refnum 'set' : 
    iTextSharp.text.pdf.PdfIndirectReference PdfIndirectReference 'get ' : 
    Int64 Offset 'get ' : 
    Int32 Size 'get ' : 
  Methods:
    set_Refnum(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    FlushObjStm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(PdfObject): PrivateScope, Assembly, HideBySig
    Add(PdfObject, Boolean): PrivateScope, Assembly, HideBySig
    get_PdfIndirectReference(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(PdfObject, PdfIndirectReference): PrivateScope, Assembly, HideBySig
    Add(PdfObject, PdfIndirectReference, Boolean): PrivateScope, Assembly, HideBySig
    Add(PdfObject, Int32): PrivateScope, Assembly, HideBySig
    get_Offset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    WriteCrossReferenceTable(Stream, PdfIndirectReference, PdfIndirectReference, PdfIndirectReference, PdfObject, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfWriter+PdfBody+PdfCrossReference: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Int32, Int64, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int64, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
  Properties:
    Int32 Refnum 'get ' : 
  Methods:
    get_Refnum(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToPdf(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToPdf(Int32, Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfWriter+PdfTrailer: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(Int32, Int64, iTextSharp.text.pdf.PdfIndirectReference, iTextSharp.text.pdf.PdfIndirectReference, iTextSharp.text.pdf.PdfIndirectReference, iTextSharp.text.pdf.PdfObject, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int64 offset : Assembly
  Methods:
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.FdfWriter+Wrt: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :iTextSharp.text.pdf.PdfWriter
    Void .ctor(System.IO.Stream, iTextSharp.text.pdf.FdfWriter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(): PrivateScope, Assembly, HideBySig
    Calculate(Dictionary`2): PrivateScope, Assembly, HideBySig
Class iTextSharp.text.pdf.FontDetails: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfName, iTextSharp.text.pdf.PdfIndirectReference, iTextSharp.text.pdf.BaseFont): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfIndirectReference IndirectReference 'get ' : 
    iTextSharp.text.pdf.PdfName FontName 'get ' : 
    iTextSharp.text.pdf.BaseFont BaseFont 'get ' : 
    Boolean Subset 'get set' : 
  Methods:
    get_IndirectReference(): PrivateScope, Assembly, HideBySig, SpecialName
    get_FontName(): PrivateScope, Assembly, HideBySig, SpecialName
    get_BaseFont(): PrivateScope, Assembly, HideBySig, SpecialName
    ConvertToBytesGid(String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    ConvertToBytes(String): PrivateScope, Assembly, HideBySig
    WriteFont(PdfWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Subset(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Subset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.FontSelector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddFont(Font): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Process(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.GlyphList: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    NameToUnicode(String): PrivateScope, Public, Static, HideBySig
    UnicodeToName(Int32): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.GrayColor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.ExtendedColor
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.GrayColor GRAYBLACK : Public, Static, InitOnly
    iTextSharp.text.pdf.GrayColor GRAYWHITE : Public, Static, InitOnly
  Properties:
    Single Gray 'get ' : 
  Methods:
    get_Gray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Interface iTextSharp.text.pdf.IHyphenationEvent: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String HyphenSymbol 'get ' : 
    System.String HyphenatedWordPost 'get ' : 
  Methods:
    get_HyphenSymbol(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetHyphenatedWordPre(String, BaseFont, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_HyphenatedWordPost(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class iTextSharp.text.pdf.HyphenationAuto: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.String, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.IHyphenationEvent
  Properties:
    System.String HyphenSymbol 'get ' : 
    System.String HyphenatedWordPost 'get ' : 
  Methods:
    get_HyphenSymbol(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetHyphenatedWordPre(String, BaseFont, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_HyphenatedWordPost(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.hyphenation.ByteVector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] Arr 'get ' : 
    Int32 Length 'get ' : 
    Int32 Capacity 'get ' : 
    Byte Item [Int32] 'get set' : 
  Methods:
    get_Arr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Capacity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Byte): PrivateScope, Public, HideBySig, SpecialName
    Alloc(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimToSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.hyphenation.CharVector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    Char[] Arr 'get ' : 
    Int32 Length 'get ' : 
    Int32 Capacity 'get ' : 
    Char Item [Int32] 'get set' : 
  Methods:
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Arr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Capacity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Char): PrivateScope, Public, HideBySig, SpecialName
    Alloc(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimToSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.hyphenation.Hyphen: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.String, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String preBreak : Public
    System.String noBreak : Public
    System.String postBreak : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.hyphenation.Hyphenation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
    Int32[] HyphenationPoints 'get ' : 
  Methods:
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetPreHyphenText(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPostHyphenText(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_HyphenationPoints(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.hyphenation.HyphenationException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.hyphenation.TernaryTree: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    Int32 Size 'get ' : 
    Iterator Keys 'get ' : 
  Methods:
    Insert(String, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Char[], Int32, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Strcmp(Char[], Int32, Char[], Int32): PrivateScope, Public, Static, HideBySig
    Strcmp(String, Char[], Int32): PrivateScope, Public, Static, HideBySig
    Strcpy(Char[], Int32, Char[], Int32): PrivateScope, Public, Static, HideBySig
    Strlen(Char[], Int32): PrivateScope, Public, Static, HideBySig
    Strlen(Char[]): PrivateScope, Public, Static, HideBySig
    Find(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Find(Char[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Knows(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Balance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimToSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Keys(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    PrintStats(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.hyphenation.TernaryTree+Iterator: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.hyphenation.TernaryTree): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Char Value 'get ' : 
  Methods:
    Rewind(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextElement(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    HasMoreElements(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.pdf.hyphenation.IPatternConsumer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    AddClass(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddException(String, List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddPattern(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.hyphenation.HyphenationTree: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.hyphenation.TernaryTree
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.hyphenation.IPatternConsumer
  Methods:
    LoadSimplePatterns(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FindPattern(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Hyphenate(String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Hyphenate(Char[], Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddClass(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddException(String, List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPattern(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PrintStats(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.hyphenation.Hyphenator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.String, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetHyphenationTree(String, String): PrivateScope, Public, Static, HideBySig
    GetResourceHyphenationTree(String): PrivateScope, Public, Static, HideBySig
    Hyphenate(String, String, String, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Hyphenate(String, String, Char[], Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    SetMinRemainCharCount(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMinPushCharCount(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLanguage(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Hyphenate(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Hyphenate(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.hyphenation.SimplePatternParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.xml.simpleparser.ISimpleXMLDocHandler
  Fields:
    Int32 currElement : Assembly
    iTextSharp.text.pdf.hyphenation.IPatternConsumer consumer : Assembly
    System.Text.StringBuilder token : Assembly
    System.Collections.Generic.List`1[System.Object] exception : Assembly
    Char hyphenChar : Assembly
    Int32 ELEM_CLASSES = 1 : Assembly, Static, Literal, HasDefault
    Int32 ELEM_EXCEPTIONS = 2 : Assembly, Static, Literal, HasDefault
    Int32 ELEM_PATTERNS = 3 : Assembly, Static, Literal, HasDefault
    Int32 ELEM_HYPHEN = 4 : Assembly, Static, Literal, HasDefault
  Methods:
    Parse(Stream, IPatternConsumer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndDocument(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndElement(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    StartDocument(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    StartElement(String, IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Text(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.ICC_Profile: AutoLayout, AnsiClass, Class, Public
  Properties:
    Byte[] Data 'get ' : 
    Int32 NumComponents 'get ' : 
  Methods:
    GetInstance(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    GetInstance(Byte[]): PrivateScope, Public, Static, HideBySig
    GetInstance(Stream): PrivateScope, Public, Static, HideBySig
    GetInstance(String): PrivateScope, Public, Static, HideBySig
    get_Data(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumComponents(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Interface iTextSharp.text.pdf.IExtraEncoding: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    CharToByte(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CharToByte(Char, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ByteToChar(Byte[], String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.pdf.interfaces.IPdfXConformance: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    iTextSharp.text.pdf.interfaces.IPdfIsoConformance
  Properties:
    Int32 PDFXConformance 'get set' : 
  Methods:
    set_PDFXConformance(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PDFXConformance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    IsPdfX(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.intern.PdfAnnotationsImp: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfAcroForm AcroForm 'get ' : 
    Int32 SigFlags 'set' : 
  Methods:
    HasValidAcroForm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AcroForm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SigFlags(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddCalculationOrder(PdfFormField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddAnnotation(PdfAnnotation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPlainAnnotation(PdfAnnotation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasUnusedAnnotations(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetAnnotations(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RotateAnnotations(PdfWriter, Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ConvertAnnotation(PdfWriter, Annotation, Rectangle): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.intern.PdfVersionImp: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.interfaces.IPdfVersion
  Fields:
    Byte[][] HEADER : Public, Static, InitOnly
  Properties:
    Char PdfVersion 'set' : 
    Char Version 'get ' : 
  Methods:
    set_PdfVersion(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetAtLeastPdfVersion(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPdfVersion(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAppendmode(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteHeader(OutputStreamCounter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetVersionAsName(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetVersionAsByteArray(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddToCatalog(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddDeveloperExtension(PdfDeveloperExtension): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Version(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.intern.PdfViewerPreferencesImp: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.interfaces.IPdfViewerPreferences
  Fields:
    iTextSharp.text.pdf.PdfName[] VIEWER_PREFERENCES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName[] NONFULLSCREENPAGEMODE_PREFERENCES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName[] DIRECTION_PREFERENCES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName[] PAGE_BOUNDARIES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName[] PRINTSCALING_PREFERENCES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName[] DUPLEX_PREFERENCES : Public, Static, InitOnly
  Properties:
    Int32 PageLayoutAndMode 'get ' : 
    Int32 ViewerPreferences 'set' : 
  Methods:
    get_PageLayoutAndMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetViewerPreferences(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_ViewerPreferences(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddViewerPreference(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddToCatalog(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetViewerPreferences(PdfDictionary): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.intern.PdfXConformanceImp: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.interfaces.IPdfXConformance
    iTextSharp.text.pdf.interfaces.IPdfIsoConformance
  Properties:
    Int32 PDFXConformance 'get set' : 
  Methods:
    set_PDFXConformance(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PDFXConformance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsPdfIso(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsPdfX(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsPdfX1A2001(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsPdfX32002(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CheckPdfIsoConformance(Int32, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.IntHashtable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Size 'get ' : 
    Int32 Item [Int32] 'get set' : 
  Methods:
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ContainsKey(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    Remove(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToOrderedKeys(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetKeys(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEntryIterator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.IntHashtable+IntHashtableEntry: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 hash : Assembly
    Int32 key : Assembly
    Int32 value : Assembly
    IntHashtableEntry next : Assembly
  Properties:
    Int32 Key  'get ' : 
    Int32 Value 'get ' : 
  Methods:
    get_Key(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.IntHashtable+IntHashtableIterator: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(IntHashtableEntry[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    HasNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Next(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.pdf.IPdfOCG: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    iTextSharp.text.pdf.PdfIndirectReference Ref 'get ' : 
    iTextSharp.text.pdf.PdfObject PdfObject 'get ' : 
  Methods:
    get_Ref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PdfObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface iTextSharp.text.pdf.languages.ILanguageProcessor: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Process(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsRTL(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.languages.IndicLigaturizer: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    iTextSharp.text.pdf.languages.ILanguageProcessor
  Fields:
    Int32 MATRA_AA : Public, Static
    Int32 MATRA_I : Public, Static
    Int32 MATRA_E : Public, Static
    Int32 MATRA_AI : Public, Static
    Int32 MATRA_HLR : Public, Static
    Int32 MATRA_HLRR : Public, Static
    Int32 LETTER_A : Public, Static
    Int32 LETTER_AU : Public, Static
    Int32 LETTER_KA : Public, Static
    Int32 LETTER_HA : Public, Static
    Int32 HALANTA : Public, Static
  Methods:
    Process(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsRTL(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class com.itextpdf.text.pdf.languages.DevanagariLigaturizer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.languages.IndicLigaturizer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Char DEVA_MATRA_AA = ा : Public, Static, Literal, HasDefault
    Char DEVA_MATRA_I = ि : Public, Static, Literal, HasDefault
    Char DEVA_MATRA_E = े : Public, Static, Literal, HasDefault
    Char DEVA_MATRA_AI = ै : Public, Static, Literal, HasDefault
    Char DEVA_MATRA_HLR = ॢ : Public, Static, Literal, HasDefault
    Char DEVA_MATRA_HLRR = ॣ : Public, Static, Literal, HasDefault
    Char DEVA_LETTER_A = अ : Public, Static, Literal, HasDefault
    Char DEVA_LETTER_AU = औ : Public, Static, Literal, HasDefault
    Char DEVA_LETTER_KA = क : Public, Static, Literal, HasDefault
    Char DEVA_LETTER_HA = ह : Public, Static, Literal, HasDefault
    Char DEVA_HALANTA = ् : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.languages.GujaratiLigaturizer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.languages.IndicLigaturizer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Char GUJR_MATRA_AA : Public, Static
    Char GUJR_MATRA_I : Public, Static
    Char GUJR_MATRA_E : Public, Static
    Char GUJR_MATRA_AI : Public, Static
    Char GUJR_MATRA_HLR : Public, Static
    Char GUJR_MATRA_HLRR : Public, Static
    Char GUJR_LETTER_A : Public, Static
    Char GUJR_LETTER_AU : Public, Static
    Char GUJR_LETTER_KA : Public, Static
    Char GUJR_LETTER_HA : Public, Static
    Char GUJR_HALANTA : Public, Static
Class iTextSharp.text.pdf.languages.HebrewProcessor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.languages.ILanguageProcessor
  Methods:
    Process(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsRTL(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.LZWDecoder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32[] andTable : Assembly
  Properties:
    Int32 NextCode 'get ' : 
  Methods:
    Decode(Byte[], Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InitializeStringTable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteString(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddStringToTable(Byte[], Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddStringToTable(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ComposeString(Byte[], Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_NextCode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.OutputStreamCounter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 Counter 'get ' : 
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_Counter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ResetCounter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.OutputStreamEncryption: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream, Byte[], Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    Finish(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PageResources: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfDictionary Resources 'get ' : 
  Methods:
    SetOriginalResources(PdfDictionary, Int32[]): PrivateScope, Assembly, HideBySig
    TranslateName(PdfName): PrivateScope, Assembly, HideBySig
    AddFont(PdfName, PdfIndirectReference): PrivateScope, Assembly, HideBySig
    AddXObject(PdfName, PdfIndirectReference): PrivateScope, Assembly, HideBySig
    AddColor(PdfName, PdfIndirectReference): PrivateScope, Assembly, HideBySig
    AddDefaultColor(PdfName, PdfObject): PrivateScope, Assembly, HideBySig
    AddDefaultColor(PdfDictionary): PrivateScope, Assembly, HideBySig
    AddDefaultColorDiff(PdfDictionary): PrivateScope, Assembly, HideBySig
    AddShading(PdfName, PdfIndirectReference): PrivateScope, Assembly, HideBySig
    AddPattern(PdfName, PdfIndirectReference): PrivateScope, Assembly, HideBySig
    AddExtGState(PdfName, PdfIndirectReference): PrivateScope, Assembly, HideBySig
    AddProperty(PdfName, PdfIndirectReference): PrivateScope, Assembly, HideBySig
    get_Resources(): PrivateScope, Assembly, HideBySig, SpecialName
    HasResources(): PrivateScope, Assembly, HideBySig
Interface iTextSharp.text.pdf.parser.IShape: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetBasePoints(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.parser.BezierCurve: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.Generic.IList`1[iTextSharp.awt.geom.Point2D]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.parser.IShape
  Fields:
    Double CurveCollinearityEpsilon : Public, Static
    Double DistanceToleranceSquare : Public, Static
    Double DistanceToleranceManhattan : Public, Static
  Methods:
    GetBasePoints(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPiecewiseLinearApproximation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct iTextSharp.text.pdf.parser.clipper.DoublePoint: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.parser.clipper.DoublePoint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.parser.clipper.IntPoint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double X : Public
    Double Y : Public
Class iTextSharp.text.pdf.parser.clipper.PolyNode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.parser.clipper.PolyNode m_Parent : Assembly
    System.Collections.Generic.List`1[iTextSharp.text.pdf.parser.clipper.IntPoint] m_polygon : Assembly
    Int32 m_Index : Assembly
    iTextSharp.text.pdf.parser.clipper.JoinType m_jointype : Assembly
    iTextSharp.text.pdf.parser.clipper.EndType m_endtype : Assembly
    System.Collections.Generic.List`1[iTextSharp.text.pdf.parser.clipper.PolyNode] m_Childs : Assembly
    Boolean isOpen : Assembly
  Properties:
    Int32 ChildCount 'get ' : 
    System.Collections.Generic.List`1[iTextSharp.text.pdf.parser.clipper.IntPoint] Contour 'get ' : 
    System.Collections.Generic.List`1[iTextSharp.text.pdf.parser.clipper.PolyNode] Childs 'get ' : 
    iTextSharp.text.pdf.parser.clipper.PolyNode Parent 'get ' : 
    Boolean IsHole 'get ' : 
    Boolean IsOpen 'get set' : 
  Methods:
    get_ChildCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Contour(): PrivateScope, Public, HideBySig, SpecialName
    AddChild(PolyNode): PrivateScope, Assembly, HideBySig
    GetNext(): PrivateScope, Public, HideBySig
    GetNextSiblingUp(): PrivateScope, Assembly, HideBySig
    get_Childs(): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHole(): PrivateScope, Public, HideBySig, SpecialName
    get_IsOpen(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOpen(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class iTextSharp.text.pdf.parser.clipper.PolyTree: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.parser.clipper.PolyNode
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.List`1[iTextSharp.text.pdf.parser.clipper.PolyNode] m_AllPolys : Assembly
  Properties:
    Int32 Total 'get ' : 
  Methods:
    Clear(): PrivateScope, Public, HideBySig
    GetFirst(): PrivateScope, Public, HideBySig
    get_Total(): PrivateScope, Public, HideBySig, SpecialName
Struct iTextSharp.text.pdf.parser.clipper.Int128: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64, UInt64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.parser.clipper.Int128): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsNegative(): PrivateScope, Public, HideBySig
    op_Equality(Int128, Int128): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Int128, Int128): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_GreaterThan(Int128, Int128): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(Int128, Int128): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Int128, Int128): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Int128, Int128): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(Int128): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int128): PrivateScope, Public, Static, HideBySig, SpecialName
    Int128Mul(Int64, Int64): PrivateScope, Public, Static, HideBySig
Struct iTextSharp.text.pdf.parser.clipper.IntPoint: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int64, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.parser.clipper.IntPoint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int64 X : Public
    Int64 Y : Public
  Methods:
    op_Equality(IntPoint, IntPoint): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(IntPoint, IntPoint): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Struct iTextSharp.text.pdf.parser.clipper.IntRect: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int64, Int64, Int64, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.parser.clipper.IntRect): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int64 left : Public
    Int64 top : Public
    Int64 right : Public
    Int64 bottom : Public
Struct iTextSharp.text.pdf.parser.clipper.ClipType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    iTextSharp.text.pdf.parser.clipper.ClipType ctIntersection = 0 : Public, Static, Literal, HasDefault
    iTextSharp.text.pdf.parser.clipper.ClipType ctUnion = 1 : Public, Static, Literal, HasDefault
    iTextSharp.text.pdf.parser.clipper.ClipType ctDifference = 2 : Public, Static, Literal, HasDefault
    iTextSharp.text.pdf.parser.clipper.ClipType ctXor = 3 : Public, Static, Literal, HasDefault
Struct iTextSharp.text.pdf.parser.clipper.PolyType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    iTextSharp.text.pdf.parser.clipper.PolyType ptSubject = 0 : Public, Static, Literal, HasDefault
    iTextSharp.text.pdf.parser.clipper.PolyType ptClip = 1 : Public, Static, Literal, HasDefault
Struct iTextSharp.text.pdf.parser.clipper.PolyFillType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    iTextSharp.text.pdf.parser.clipper.PolyFillType pftEvenOdd = 0 : Public, Static, Literal, HasDefault
    iTextSharp.text.pdf.parser.clipper.PolyFillType pftNonZero = 1 : Public, Static, Literal, HasDefault
    iTextSharp.text.pdf.parser.clipper.PolyFillType pftPositive = 2 : Public, Static, Literal, HasDefault
    iTextSharp.text.pdf.parser.clipper.PolyFillType pftNegative = 3 : Public, Static, Literal, HasDefault
Struct iTextSharp.text.pdf.parser.clipper.JoinType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    iTextSharp.text.pdf.parser.clipper.JoinType jtBevel = 0 : Public, Static, Literal, HasDefault
    iTextSharp.text.pdf.parser.clipper.JoinType jtRound = 1 : Public, Static, Literal, HasDefault
    iTextSharp.text.pdf.parser.clipper.JoinType jtMiter = 2 : Public, Static, Literal, HasDefault
Struct iTextSharp.text.pdf.parser.clipper.EndType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    iTextSharp.text.pdf.parser.clipper.EndType etClosedPolygon = 0 : Public, Static, Literal, HasDefault
    iTextSharp.text.pdf.parser.clipper.EndType etClosedLine = 1 : Public, Static, Literal, HasDefault
    iTextSharp.text.pdf.parser.clipper.EndType etOpenButt = 2 : Public, Static, Literal, HasDefault
    iTextSharp.text.pdf.parser.clipper.EndType etOpenSquare = 3 : Public, Static, Literal, HasDefault
    iTextSharp.text.pdf.parser.clipper.EndType etOpenRound = 4 : Public, Static, Literal, HasDefault
Struct iTextSharp.text.pdf.parser.clipper.EdgeSide: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    iTextSharp.text.pdf.parser.clipper.EdgeSide esLeft = 0 : Public, Static, Literal, HasDefault
    iTextSharp.text.pdf.parser.clipper.EdgeSide esRight = 1 : Public, Static, Literal, HasDefault
Struct iTextSharp.text.pdf.parser.clipper.Direction: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    iTextSharp.text.pdf.parser.clipper.Direction dRightToLeft = 0 : Public, Static, Literal, HasDefault
    iTextSharp.text.pdf.parser.clipper.Direction dLeftToRight = 1 : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.parser.clipper.TEdge: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.parser.clipper.IntPoint Bot : Assembly
    iTextSharp.text.pdf.parser.clipper.IntPoint Curr : Assembly
    iTextSharp.text.pdf.parser.clipper.IntPoint Top : Assembly
    iTextSharp.text.pdf.parser.clipper.IntPoint Delta : Assembly
    Double Dx : Assembly
    iTextSharp.text.pdf.parser.clipper.PolyType PolyTyp : Assembly
    iTextSharp.text.pdf.parser.clipper.EdgeSide Side : Assembly
    Int32 WindDelta : Assembly
    Int32 WindCnt : Assembly
    Int32 WindCnt2 : Assembly
    Int32 OutIdx : Assembly
    iTextSharp.text.pdf.parser.clipper.TEdge Next : Assembly
    iTextSharp.text.pdf.parser.clipper.TEdge Prev : Assembly
    iTextSharp.text.pdf.parser.clipper.TEdge NextInLML : Assembly
    iTextSharp.text.pdf.parser.clipper.TEdge NextInAEL : Assembly
    iTextSharp.text.pdf.parser.clipper.TEdge PrevInAEL : Assembly
    iTextSharp.text.pdf.parser.clipper.TEdge NextInSEL : Assembly
    iTextSharp.text.pdf.parser.clipper.TEdge PrevInSEL : Assembly
Class iTextSharp.text.pdf.parser.clipper.IntersectNode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.parser.clipper.TEdge Edge1 : Assembly
    iTextSharp.text.pdf.parser.clipper.TEdge Edge2 : Assembly
    iTextSharp.text.pdf.parser.clipper.IntPoint Pt : Assembly
Class iTextSharp.text.pdf.parser.clipper.MyIntersectNodeSort: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[iTextSharp.text.pdf.parser.clipper.IntersectNode]
  Methods:
    Compare(IntersectNode, IntersectNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.clipper.LocalMinima: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int64 Y : Assembly
    iTextSharp.text.pdf.parser.clipper.TEdge LeftBound : Assembly
    iTextSharp.text.pdf.parser.clipper.TEdge RightBound : Assembly
    iTextSharp.text.pdf.parser.clipper.LocalMinima Next : Assembly
Class iTextSharp.text.pdf.parser.clipper.Scanbeam: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int64 Y : Assembly
    iTextSharp.text.pdf.parser.clipper.Scanbeam Next : Assembly
Class iTextSharp.text.pdf.parser.clipper.Maxima: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int64 X : Assembly
    iTextSharp.text.pdf.parser.clipper.Maxima Next : Assembly
    iTextSharp.text.pdf.parser.clipper.Maxima Prev : Assembly
Class iTextSharp.text.pdf.parser.clipper.OutRec: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Idx : Assembly
    Boolean IsHole : Assembly
    Boolean IsOpen : Assembly
    iTextSharp.text.pdf.parser.clipper.OutRec FirstLeft : Assembly
    iTextSharp.text.pdf.parser.clipper.OutPt Pts : Assembly
    iTextSharp.text.pdf.parser.clipper.OutPt BottomPt : Assembly
    iTextSharp.text.pdf.parser.clipper.PolyNode PolyNode : Assembly
Class iTextSharp.text.pdf.parser.clipper.OutPt: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Idx : Assembly
    iTextSharp.text.pdf.parser.clipper.IntPoint Pt : Assembly
    iTextSharp.text.pdf.parser.clipper.OutPt Next : Assembly
    iTextSharp.text.pdf.parser.clipper.OutPt Prev : Assembly
Class iTextSharp.text.pdf.parser.clipper.Join: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.parser.clipper.OutPt OutPt1 : Assembly
    iTextSharp.text.pdf.parser.clipper.OutPt OutPt2 : Assembly
    iTextSharp.text.pdf.parser.clipper.IntPoint OffPt : Assembly
Class iTextSharp.text.pdf.parser.clipper.ClipperBase: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.parser.clipper.LocalMinima m_MinimaList : Assembly
    iTextSharp.text.pdf.parser.clipper.LocalMinima m_CurrentLM : Assembly
    System.Collections.Generic.List`1[System.Collections.Generic.List`1[iTextSharp.text.pdf.parser.clipper.TEdge]] m_edges : Assembly
    Boolean m_UseFullRange : Assembly
    Boolean m_HasOpenPaths : Assembly
    Boolean preserveCollinear : Assembly
    Int64 loRange = 1073741823 : Public, Static, Literal, HasDefault
    Int64 hiRange = 4611686018427387903 : Public, Static, Literal, HasDefault
  Properties:
    Boolean PreserveCollinear 'get set' : 
  Methods:
    near_zero(Double): PrivateScope, Assembly, Static, HideBySig
    get_PreserveCollinear(): PrivateScope, Public, HideBySig, SpecialName
    set_PreserveCollinear(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Swap(Int64&, Int64&): PrivateScope, Public, HideBySig
    IsHorizontal(TEdge): PrivateScope, Assembly, Static, HideBySig
    PointIsVertex(IntPoint, OutPt): PrivateScope, Assembly, HideBySig
    PointOnLineSegment(IntPoint, IntPoint, IntPoint, Boolean): PrivateScope, Assembly, HideBySig
    PointOnPolygon(IntPoint, OutPt, Boolean): PrivateScope, Assembly, HideBySig
    SlopesEqual(TEdge, TEdge, Boolean): PrivateScope, Assembly, Static, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPath(List`1, PolyType, Boolean): PrivateScope, Public, HideBySig
    AddPaths(List`1, PolyType, Boolean): PrivateScope, Public, HideBySig
    Pt2IsBetweenPt1AndPt3(IntPoint, IntPoint, IntPoint): PrivateScope, Assembly, HideBySig
    GetBounds(List`1): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.parser.clipper.Clipper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.parser.clipper.ClipperBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 ioReverseSolution = 1 : Public, Static, Literal, HasDefault
    Int32 ioStrictlySimple = 2 : Public, Static, Literal, HasDefault
    Int32 ioPreserveCollinear = 4 : Public, Static, Literal, HasDefault
  Properties:
    Boolean ReverseSolution 'get set' : 
    Boolean StrictlySimple 'get set' : 
  Methods:
    get_ReverseSolution(): PrivateScope, Public, HideBySig, SpecialName
    set_ReverseSolution(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_StrictlySimple(): PrivateScope, Public, HideBySig, SpecialName
    set_StrictlySimple(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Execute(ClipType, List`1): PrivateScope, Public, HideBySig
    Execute(ClipType, List`1, PolyFillType): PrivateScope, Public, HideBySig
    Execute(ClipType, PolyTree): PrivateScope, Public, HideBySig
    Execute(ClipType, PolyTree, PolyFillType): PrivateScope, Public, HideBySig
    Execute(ClipType, List`1, PolyFillType, PolyFillType): PrivateScope, Public, HideBySig
    Execute(ClipType, PolyTree, PolyFillType, PolyFillType): PrivateScope, Public, HideBySig
    FixHoleLinkage(OutRec): PrivateScope, Assembly, HideBySig
    SwapPoints(IntPoint&, IntPoint&): PrivateScope, Assembly, HideBySig
    Round(Double): PrivateScope, Assembly, Static, HideBySig
    ReversePaths(List`1): PrivateScope, Public, Static, HideBySig
    Orientation(List`1): PrivateScope, Public, Static, HideBySig
    PointInPolygon(IntPoint, List`1): PrivateScope, Public, Static, HideBySig
    Area(List`1): PrivateScope, Public, Static, HideBySig
    SimplifyPolygon(List`1): PrivateScope, Public, Static, HideBySig
    SimplifyPolygon(List`1, PolyFillType): PrivateScope, Public, Static, HideBySig
    SimplifyPolygons(List`1): PrivateScope, Public, Static, HideBySig
    SimplifyPolygons(List`1, PolyFillType): PrivateScope, Public, Static, HideBySig
    CleanPolygon(List`1): PrivateScope, Public, Static, HideBySig
    CleanPolygon(List`1, Double): PrivateScope, Public, Static, HideBySig
    CleanPolygons(List`1): PrivateScope, Public, Static, HideBySig
    CleanPolygons(List`1, Double): PrivateScope, Public, Static, HideBySig
    Minkowski(List`1, List`1, Boolean, Boolean): PrivateScope, Assembly, Static, HideBySig
    MinkowskiSum(List`1, List`1, Boolean): PrivateScope, Public, Static, HideBySig
    MinkowskiSum(List`1, List`1, Boolean): PrivateScope, Public, Static, HideBySig
    MinkowskiDiff(List`1, List`1): PrivateScope, Public, Static, HideBySig
    PolyTreeToPaths(PolyTree): PrivateScope, Public, Static, HideBySig
    AddPolyNodeToPaths(PolyNode, NodeType, List`1): PrivateScope, Assembly, Static, HideBySig
    OpenPathsFromPolyTree(PolyTree): PrivateScope, Public, Static, HideBySig
    ClosedPathsFromPolyTree(PolyTree): PrivateScope, Public, Static, HideBySig
Struct iTextSharp.text.pdf.parser.clipper.Clipper+NodeType: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NodeType ntAny = 0 : Public, Static, Literal, HasDefault
    NodeType ntOpen = 1 : Public, Static, Literal, HasDefault
    NodeType ntClosed = 2 : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.parser.clipper.ClipperOffset: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double ArcTolerance 'get set' : 
    Double MiterLimit 'get set' : 
  Methods:
    get_ArcTolerance(): PrivateScope, Public, HideBySig, SpecialName
    set_ArcTolerance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MiterLimit(): PrivateScope, Public, HideBySig, SpecialName
    set_MiterLimit(Double): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    Round(Double): PrivateScope, Assembly, Static, HideBySig
    AddPath(List`1, JoinType, EndType): PrivateScope, Public, HideBySig
    AddPaths(List`1, JoinType, EndType): PrivateScope, Public, HideBySig
    GetUnitNormal(IntPoint, IntPoint): PrivateScope, Assembly, Static, HideBySig
    Execute(List`1&, Double): PrivateScope, Public, HideBySig
    Execute(PolyTree&, Double): PrivateScope, Public, HideBySig
    DoSquare(Int32, Int32, Boolean): PrivateScope, Assembly, HideBySig
    DoMiter(Int32, Int32, Double): PrivateScope, Assembly, HideBySig
    DoRound(Int32, Int32): PrivateScope, Assembly, HideBySig
Class iTextSharp.text.pdf.parser.clipper.ClipperException: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.parser.ContentByteUtils: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    GetContentBytesFromContentObject(PdfObject): PrivateScope, Public, Static, HideBySig
    GetContentBytesForPage(PdfReader, Int32): PrivateScope, Public, Static, HideBySig
Interface iTextSharp.text.pdf.parser.IRenderListener: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    BeginTextBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RenderText(TextRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndTextBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RenderImage(ImageRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.pdf.parser.IExtRenderListener: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    iTextSharp.text.pdf.parser.IRenderListener
  Methods:
    ModifyPath(PathConstructionRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RenderPath(PathPaintingRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ClipPath(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.parser.FilteredRenderListener: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.parser.IRenderListener, iTextSharp.text.pdf.parser.RenderFilter[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.parser.IRenderListener
  Methods:
    RenderText(TextRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginTextBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndTextBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RenderImage(ImageRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.pdf.parser.ITextExtractionStrategy: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    iTextSharp.text.pdf.parser.IRenderListener
  Methods:
    GetResultantText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.parser.FilteredTextRenderListener: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.parser.FilteredRenderListener
    Void .ctor(iTextSharp.text.pdf.parser.ITextExtractionStrategy, iTextSharp.text.pdf.parser.RenderFilter[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.parser.ITextExtractionStrategy
  Methods:
    GetResultantText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.GlyphRenderListener: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.parser.IRenderListener): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.parser.IRenderListener
  Methods:
    BeginTextBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RenderText(TextRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndTextBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RenderImage(ImageRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.GlyphTextRenderListener: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.parser.GlyphRenderListener
    Void .ctor(iTextSharp.text.pdf.parser.ITextExtractionStrategy): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.parser.ITextExtractionStrategy
  Methods:
    GetResultantText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.GraphicsState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.parser.GraphicsState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.parser.Matrix ctm : Assembly
    Single characterSpacing : Assembly
    Single wordSpacing : Assembly
    Single horizontalScaling : Assembly
    Single leading : Assembly
    iTextSharp.text.pdf.CMapAwareDocumentFont font : Assembly
    Single fontSize : Assembly
    Int32 renderMode : Assembly
    Single rise : Assembly
    Boolean knockout : Assembly
    iTextSharp.text.pdf.PdfName colorSpaceFill : Assembly
    iTextSharp.text.pdf.PdfName colorSpaceStroke : Assembly
    iTextSharp.text.BaseColor fillColor : Assembly
    iTextSharp.text.BaseColor strokeColor : Assembly
  Properties:
    Single CharacterSpacing 'get ' : 
    Single WordSpacing 'get ' : 
    Single HorizontalScaling 'get ' : 
    iTextSharp.text.pdf.CMapAwareDocumentFont Font 'get ' : 
    Single FontSize 'get ' : 
    iTextSharp.text.pdf.PdfName ColorSpaceFill 'get ' : 
    iTextSharp.text.pdf.PdfName ColorSpaceStroke 'get ' : 
    iTextSharp.text.BaseColor FillColor 'get ' : 
    iTextSharp.text.BaseColor StrokeColor 'get ' : 
    Single LineWidth 'get set' : 
    Int32 LineCapStyle 'get set' : 
    Int32 LineJoinStyle 'get set' : 
    Single MiterLimit 'get set' : 
  Methods:
    get_CharacterSpacing(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_WordSpacing(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HorizontalScaling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Font(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FontSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetCtm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCharacterSpacing(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetWordSpacing(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHorizontalScaling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLeading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFont(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFontSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRenderMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRise(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsKnockout(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ColorSpaceFill(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ColorSpaceStroke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FillColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_StrokeColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LineWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_LineWidth(Single): PrivateScope, Public, HideBySig, SpecialName
    get_LineCapStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_LineCapStyle(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LineJoinStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_LineJoinStyle(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MiterLimit(): PrivateScope, Public, HideBySig, SpecialName
    set_MiterLimit(Single): PrivateScope, Public, HideBySig, SpecialName
    GetLineDashPattern(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLineDashPattern(LineDashPattern): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.pdf.parser.IContentOperator: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Invoke(PdfContentStreamProcessor, PdfLiteral, List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.parser.ImageRenderInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    CreateForXObject(GraphicsState, PdfIndirectReference, PdfDictionary): PrivateScope, Public, Static, HideBySig
    CreateForXObject(GraphicsState, PdfIndirectReference, PdfDictionary, ICollection): PrivateScope, Public, Static, HideBySig
    GetImage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStartPoint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetImageCTM(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetArea(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRef(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCurrentFillColor(): PrivateScope, Public, HideBySig
    HasMcid(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasMcid(Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMcid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.Line: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.awt.geom.Point2D, iTextSharp.awt.geom.Point2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.parser.IShape
  Methods:
    GetBasePoints(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.LineDashPattern: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfArray, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfArray DashArray 'get set' : 
    Single DashPhase 'get set' : 
  Methods:
    get_DashArray(): PrivateScope, Public, HideBySig, SpecialName
    set_DashArray(PdfArray): PrivateScope, Public, HideBySig, SpecialName
    get_DashPhase(): PrivateScope, Public, HideBySig, SpecialName
    set_DashPhase(Single): PrivateScope, Public, HideBySig, SpecialName
    Next(): PrivateScope, Public, HideBySig
    IsSolid(): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
Class iTextSharp.text.pdf.parser.LineDashPattern+DashArrayElem: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Single, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Value 'get set' : 
    Boolean IsGap 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Single): PrivateScope, Public, HideBySig, SpecialName
    get_IsGap(): PrivateScope, Public, HideBySig, SpecialName
    set_IsGap(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class iTextSharp.text.pdf.parser.LineSegment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.parser.Vector, iTextSharp.text.pdf.parser.Vector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetStartPoint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEndPoint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBoundingRectange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TransformBy(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.LocationTextExtractionStrategy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ITextChunkLocationStrategy): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.parser.ITextExtractionStrategy
    iTextSharp.text.pdf.parser.IRenderListener
  Fields:
    Boolean DUMP_STATE : Public, Static
  Methods:
    BeginTextBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndTextBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetResultantText(ITextChunkFilter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetResultantText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RenderText(TextRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RenderImage(ImageRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.pdf.parser.LocationTextExtractionStrategy+ITextChunkLocationStrategy: AutoLayout, AnsiClass, Class, NestedPublic, ClassSemanticsMask, Abstract
  Methods:
    CreateLocation(TextRenderInfo, LineSegment): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.pdf.parser.LocationTextExtractionStrategy+ITextChunkLocation: AutoLayout, AnsiClass, Class, NestedPublic, ClassSemanticsMask, Abstract
  Interfaces:
    System.IComparable`1[iTextSharp.text.pdf.parser.LocationTextExtractionStrategy+ITextChunkLocation]
  Properties:
    iTextSharp.text.pdf.parser.Vector StartLocation 'get ' : 
    iTextSharp.text.pdf.parser.Vector EndLocation 'get ' : 
    Int32 OrientationMagnitude 'get ' : 
    Int32 DistPerpendicular 'get ' : 
    Single DistParallelStart 'get ' : 
    Single DistParallelEnd 'get ' : 
    Single CharSpaceWidth 'get ' : 
  Methods:
    get_StartLocation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_EndLocation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_OrientationMagnitude(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DistPerpendicular(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DistParallelStart(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DistParallelEnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CharSpaceWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    SameLine(ITextChunkLocation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DistanceFromEndOf(ITextChunkLocation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsAtWordBoundary(ITextChunkLocation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.parser.LocationTextExtractionStrategy+TextChunkLocationStrategyDefaultImp: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.parser.LocationTextExtractionStrategy+ITextChunkLocationStrategy
  Methods:
    CreateLocation(TextRenderInfo, LineSegment): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.LocationTextExtractionStrategy+TextChunkLocationDefaultImp: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.parser.Vector, iTextSharp.text.pdf.parser.Vector, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.parser.LocationTextExtractionStrategy+ITextChunkLocation
    System.IComparable`1[iTextSharp.text.pdf.parser.LocationTextExtractionStrategy+ITextChunkLocation]
  Properties:
    iTextSharp.text.pdf.parser.Vector StartLocation 'get ' : 
    iTextSharp.text.pdf.parser.Vector EndLocation 'get ' : 
    Int32 OrientationMagnitude 'get ' : 
    Int32 DistPerpendicular 'get ' : 
    Single DistParallelStart 'get ' : 
    Single DistParallelEnd 'get ' : 
    Single CharSpaceWidth 'get ' : 
  Methods:
    get_StartLocation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EndLocation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OrientationMagnitude(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DistPerpendicular(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DistParallelStart(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DistParallelEnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CharSpaceWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SameLine(ITextChunkLocation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DistanceFromEndOf(ITextChunkLocation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsAtWordBoundary(ITextChunkLocation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CompareTo(ITextChunkLocation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.LocationTextExtractionStrategy+TextChunk: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(System.String, iTextSharp.text.pdf.parser.Vector, iTextSharp.text.pdf.parser.Vector, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, ITextChunkLocation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable`1[iTextSharp.text.pdf.parser.LocationTextExtractionStrategy+TextChunk]
  Properties:
    iTextSharp.text.pdf.parser.Vector StartLocation 'get ' : 
    iTextSharp.text.pdf.parser.Vector EndLocation 'get ' : 
    Single CharSpaceWidth 'get ' : 
    System.String Text 'get ' : 
    ITextChunkLocation Location 'get ' : 
  Methods:
    get_StartLocation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EndLocation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CharSpaceWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Text(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    PrintDiagnostics(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DistanceFromEndOf(TextChunk): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CompareTo(TextChunk): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SameLine(TextChunk): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.pdf.parser.LocationTextExtractionStrategy+ITextChunkFilter: AutoLayout, AnsiClass, Class, NestedPublic, ClassSemanticsMask, Abstract
  Methods:
    Accept(TextChunk): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.parser.MarkedContentInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfName, iTextSharp.text.pdf.PdfDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetTag(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasMcid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMcid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.RenderFilter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    AllowText(TextRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AllowImage(ImageRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.MarkedContentRenderFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.parser.RenderFilter
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AllowText(TextRenderInfo): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.parser.Matrix: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 I11 = 0 : Public, Static, Literal, HasDefault
    Int32 I12 = 1 : Public, Static, Literal, HasDefault
    Int32 I13 = 2 : Public, Static, Literal, HasDefault
    Int32 I21 = 3 : Public, Static, Literal, HasDefault
    Int32 I22 = 4 : Public, Static, Literal, HasDefault
    Int32 I23 = 5 : Public, Static, Literal, HasDefault
    Int32 I31 = 6 : Public, Static, Literal, HasDefault
    Int32 I32 = 7 : Public, Static, Literal, HasDefault
    Int32 I33 = 8 : Public, Static, Literal, HasDefault
  Properties:
    Single Item [Int32] 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    Multiply(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Subtract(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDeterminant(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.parser.MultiFilteredRenderListener: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.parser.IRenderListener
  Methods:
    AttachRenderListener(E, RenderFilter[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginTextBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RenderText(TextRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndTextBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RenderImage(ImageRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.Path: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IList`1[iTextSharp.text.pdf.parser.Subpath]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[iTextSharp.text.pdf.parser.Subpath] Subpaths 'get ' : 
    iTextSharp.awt.geom.Point2D CurrentPoint 'get ' : 
  Methods:
    get_Subpaths(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddSubpath(Subpath): PrivateScope, Public, HideBySig
    AddSubpaths(IList`1): PrivateScope, Public, HideBySig
    get_CurrentPoint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveTo(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LineTo(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CurveTo(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CurveTo(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CurveFromTo(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Rectangle(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CloseSubpath(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CloseAllSubpaths(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReplaceCloseWithLine(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.PathConstructionRenderInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, System.Collections.Generic.IList`1[System.Single], iTextSharp.text.pdf.parser.Matrix): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, iTextSharp.text.pdf.parser.Matrix): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 MOVETO = 1 : Public, Static, Literal, HasDefault
    Int32 LINETO = 2 : Public, Static, Literal, HasDefault
    Int32 CURVE_123 = 3 : Public, Static, Literal, HasDefault
    Int32 CURVE_23 = 4 : Public, Static, Literal, HasDefault
    Int32 CURVE_13 = 5 : Public, Static, Literal, HasDefault
    Int32 CLOSE = 6 : Public, Static, Literal, HasDefault
    Int32 RECT = 7 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Operation 'get ' : 
    System.Collections.Generic.IList`1[System.Single] SegmentData 'get ' : 
    iTextSharp.text.pdf.parser.Matrix Ctm 'get ' : 
  Methods:
    get_Operation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SegmentData(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Ctm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.parser.PathPaintingRenderInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32, iTextSharp.text.pdf.parser.GraphicsState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, iTextSharp.text.pdf.parser.GraphicsState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 NONZERO_WINDING_RULE = 1 : Public, Static, Literal, HasDefault
    Int32 EVEN_ODD_RULE = 2 : Public, Static, Literal, HasDefault
    Int32 NO_OP = 0 : Public, Static, Literal, HasDefault
    Int32 STROKE = 1 : Public, Static, Literal, HasDefault
    Int32 FILL = 2 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Operation 'get ' : 
    Int32 Rule 'get ' : 
    iTextSharp.text.pdf.parser.Matrix Ctm 'get ' : 
    Single LineWidth 'get ' : 
    Int32 LineCapStyle 'get ' : 
    Int32 LineJoinStyle 'get ' : 
    Single MiterLimit 'get ' : 
    iTextSharp.text.pdf.parser.LineDashPattern LineDashPattern 'get ' : 
  Methods:
    get_Operation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Rule(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Ctm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LineWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LineCapStyle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LineJoinStyle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MiterLimit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LineDashPattern(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.parser.PdfContentReaderTool: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetDictionaryDetail(PdfDictionary): PrivateScope, Public, Static, HideBySig
    GetDictionaryDetail(PdfDictionary, Int32): PrivateScope, Public, Static, HideBySig
    GetXObjectDetail(PdfDictionary): PrivateScope, Public, Static, HideBySig
    ListContentStreamForPage(PdfReader, Int32, TextWriter): PrivateScope, Public, Static, HideBySig
    ListContentStream(String, TextWriter): PrivateScope, Public, Static, HideBySig
    ListContentStream(String, Int32, TextWriter): PrivateScope, Public, Static, HideBySig
    Main(String[]): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.parser.PdfContentStreamProcessor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.parser.IRenderListener): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String DEFAULTOPERATOR = DefaultOperator : Public, Static, Literal, HasDefault
  Properties:
    System.Collections.Generic.ICollection`1[System.String] RegisteredOperatorStrings 'get ' : 
    iTextSharp.text.pdf.parser.IRenderListener RenderListener 'get ' : 
  Methods:
    RegisterXObjectDoHandler(PdfName, IXObjectDoHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RegisterContentOperator(String, IContentOperator): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_RegisteredOperatorStrings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Gs(): PrivateScope, Public, HideBySig
    ProcessContent(Byte[], PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_RenderListener(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Interface iTextSharp.text.pdf.parser.IXObjectDoHandler: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    HandleXObject(PdfContentStreamProcessor, PdfStream, PdfIndirectReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    HandleXObject(PdfContentStreamProcessor, PdfStream, PdfIndirectReference, ICollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.parser.PdfImageObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PRStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PRStream, iTextSharp.text.pdf.PdfDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetFileType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetImageBytesType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Get(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDictionary(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetImageAsBytes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDrawingImage(): PrivateScope, Public, HideBySig
Class iTextSharp.text.pdf.parser.PdfImageObject+ImageBytesType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  Fields:
    ImageBytesType PNG : Public, Static, InitOnly
    ImageBytesType JPG : Public, Static, InitOnly
    ImageBytesType JP2 : Public, Static, InitOnly
    ImageBytesType CCITT : Public, Static, InitOnly
    ImageBytesType JBIG2 : Public, Static, InitOnly
  Properties:
    System.String FileExtension 'get ' : 
  Methods:
    get_FileExtension(): PrivateScope, Public, HideBySig, SpecialName
Class iTextSharp.text.pdf.FilterHandlers: AutoLayout, AnsiClass, Class, Public, Sealed
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetDefaultFilterHandlers(): PrivateScope, Public, Static, HideBySig
Interface iTextSharp.text.pdf.FilterHandlers+IFilterHandler: AutoLayout, AnsiClass, Class, NestedPublic, ClassSemanticsMask, Abstract
  Methods:
    Decode(Byte[], PdfName, PdfObject, PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.parser.PdfReaderContentParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ProcessContent(Int32, E, IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessContent(Int32, E): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.PdfTextExtractor: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetTextFromPage(PdfReader, Int32, ITextExtractionStrategy, IDictionary`2): PrivateScope, Public, Static, HideBySig
    GetTextFromPage(PdfReader, Int32, ITextExtractionStrategy): PrivateScope, Public, Static, HideBySig
    GetTextFromPage(PdfReader, Int32): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.parser.RegionTextRenderFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.parser.RenderFilter
    Void .ctor(System.util.RectangleJ): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Rectangle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AllowText(TextRenderInfo): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.parser.SimpleTextExtractionStrategy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.parser.ITextExtractionStrategy
    iTextSharp.text.pdf.parser.IRenderListener
  Methods:
    BeginTextBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndTextBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetResultantText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RenderText(TextRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RenderImage(ImageRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.Subpath: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.parser.Subpath): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.awt.geom.Point2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Closed 'get set' : 
  Methods:
    SetStartPoint(Point2D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetStartPoint(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStartPoint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLastPoint(): PrivateScope, Public, HideBySig
    AddSegment(IShape): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSegments(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsSinglePointOpen(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsSinglePointClosed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Closed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Closed(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsDegenerate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPiecewiseLinearApproximation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.TaggedPdfReaderTool: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ConvertToXml(PdfReader, Stream, Encoding): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ConvertToXml(PdfReader, Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InspectChild(PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InspectChildArray(PdfArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InspectChildDictionary(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InspectChildDictionary(PdfDictionary, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ParseTag(String, PdfObject, PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.TextMarginFinder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.parser.IRenderListener
  Methods:
    RenderText(TextRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLlx(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUrx(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUry(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginTextBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndTextBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RenderImage(ImageRenderInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.TextRenderInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfString, iTextSharp.text.pdf.parser.GraphicsState, iTextSharp.text.pdf.parser.Matrix, System.Collections.ICollection): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfString PdfString 'get ' : 
  Methods:
    GetText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_PdfString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    HasMcid(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasMcid(Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMcid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUnscaledWidth(): PrivateScope, Assembly, HideBySig
    GetBaseline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUnscaledBaseline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAscentLine(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDescentLine(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFont(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRise(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSingleSpaceWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTextRenderMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFillColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStrokeColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCharacterRenderInfos(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.Vector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 I1 = 0 : Public, Static, Literal, HasDefault
    Int32 I2 = 1 : Public, Static, Literal, HasDefault
    Int32 I3 = 2 : Public, Static, Literal, HasDefault
  Properties:
    Single Item [Int32] 'get ' : 
    Single Length 'get ' : 
    Single LengthSquared 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    Cross(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vector): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Cross(Vector): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Normalize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Multiply(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dot(Vector): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LengthSquared(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PatternColor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.ExtendedColor
    Void .ctor(iTextSharp.text.pdf.PdfPatternPainter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfPatternPainter Painter 'get ' : 
  Methods:
    get_Painter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfAcroForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(iTextSharp.text.pdf.PdfWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean NeedAppearances 'set' : 
    Int32 SigFlags 'set' : 
  Methods:
    set_NeedAppearances(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddFieldTemplates(Dictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddDocumentField(PdfIndirectReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsValid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddCalculationOrder(PdfFormField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_SigFlags(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddFormField(PdfFormField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddHtmlPostButton(String, String, String, String, BaseFont, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddResetButton(String, String, String, BaseFont, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddMap(String, String, String, PdfContentByte, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetButtonParams(PdfFormField, Int32, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DrawButton(PdfFormField, String, BaseFont, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddHiddenField(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSingleLineTextField(String, String, BaseFont, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddMultiLineTextField(String, String, BaseFont, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSingleLinePasswordField(String, String, BaseFont, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTextFieldParams(PdfFormField, String, String, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DrawSingleLineOfText(PdfFormField, String, BaseFont, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DrawMultiLineOfText(PdfFormField, String, BaseFont, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddCheckBox(String, String, Boolean, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCheckBoxParams(PdfFormField, String, String, Boolean, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DrawCheckBoxAppearences(PdfFormField, String, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRadioGroup(String, String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddRadioGroup(PdfFormField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddRadioButton(PdfFormField, String, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DrawRadioAppearences(PdfFormField, String, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSelectList(String, String[], String, BaseFont, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSelectList(String, String[,], String, BaseFont, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddComboBox(String, String[], String, Boolean, BaseFont, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddComboBox(String, String[,], String, Boolean, BaseFont, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetChoiceParams(PdfFormField, String, String, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSignature(String, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSignatureParams(PdfFormField, String, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DrawSignatureAppearences(PdfFormField, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfAction: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Uri, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfIndirectReference): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 FIRSTPAGE = 1 : Public, Static, Literal, HasDefault
    Int32 PREVPAGE = 2 : Public, Static, Literal, HasDefault
    Int32 NEXTPAGE = 3 : Public, Static, Literal, HasDefault
    Int32 LASTPAGE = 4 : Public, Static, Literal, HasDefault
    Int32 PRINTDIALOG = 5 : Public, Static, Literal, HasDefault
    Int32 SUBMIT_EXCLUDE = 1 : Public, Static, Literal, HasDefault
    Int32 SUBMIT_INCLUDE_NO_VALUE_FIELDS = 2 : Public, Static, Literal, HasDefault
    Int32 SUBMIT_HTML_FORMAT = 4 : Public, Static, Literal, HasDefault
    Int32 SUBMIT_HTML_GET = 8 : Public, Static, Literal, HasDefault
    Int32 SUBMIT_COORDINATES = 16 : Public, Static, Literal, HasDefault
    Int32 SUBMIT_XFDF = 32 : Public, Static, Literal, HasDefault
    Int32 SUBMIT_INCLUDE_APPEND_SAVES = 64 : Public, Static, Literal, HasDefault
    Int32 SUBMIT_INCLUDE_ANNOTATIONS = 128 : Public, Static, Literal, HasDefault
    Int32 SUBMIT_PDF = 256 : Public, Static, Literal, HasDefault
    Int32 SUBMIT_CANONICAL_FORMAT = 512 : Public, Static, Literal, HasDefault
    Int32 SUBMIT_EXCL_NON_USER_ANNOTS = 1024 : Public, Static, Literal, HasDefault
    Int32 SUBMIT_EXCL_F_KEY = 2048 : Public, Static, Literal, HasDefault
    Int32 SUBMIT_EMBED_FORM = 8196 : Public, Static, Literal, HasDefault
    Int32 RESET_EXCLUDE = 1 : Public, Static, Literal, HasDefault
  Methods:
    CreateLaunch(String, String, String, String): PrivateScope, Public, Static, HideBySig
    Rendition(String, PdfFileSpecification, String, PdfIndirectReference): PrivateScope, Public, Static, HideBySig
    JavaScript(String, PdfWriter, Boolean): PrivateScope, Public, Static, HideBySig
    JavaScript(String, PdfWriter): PrivateScope, Public, Static, HideBySig
    CreateHide(PdfObject, Boolean): PrivateScope, Assembly, Static, HideBySig
    CreateHide(PdfAnnotation, Boolean): PrivateScope, Public, Static, HideBySig
    CreateHide(String, Boolean): PrivateScope, Public, Static, HideBySig
    BuildArray(Object[]): PrivateScope, Assembly, Static, HideBySig
    CreateHide(Object[], Boolean): PrivateScope, Public, Static, HideBySig
    CreateSubmitForm(String, Object[], Int32): PrivateScope, Public, Static, HideBySig
    CreateResetForm(Object[], Int32): PrivateScope, Public, Static, HideBySig
    CreateImportData(String): PrivateScope, Public, Static, HideBySig
    Next(PdfAction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GotoLocalPage(Int32, PdfDestination, PdfWriter): PrivateScope, Public, Static, HideBySig
    GotoLocalPage(String, Boolean): PrivateScope, Public, Static, HideBySig
    GotoRemotePage(String, String, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    GotoEmbedded(String, PdfTargetDictionary, String, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    GotoEmbedded(String, PdfTargetDictionary, PdfObject, Boolean): PrivateScope, Public, Static, HideBySig
    SetOCGstate(List`1, Boolean): PrivateScope, Public, Static, HideBySig
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfAnnotation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(iTextSharp.text.pdf.PdfWriter, iTextSharp.text.Rectangle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfWriter, Single, Single, Single, Single, iTextSharp.text.pdf.PdfString, iTextSharp.text.pdf.PdfString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfWriter, Single, Single, Single, Single, iTextSharp.text.pdf.PdfAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.interfaces.IAccessibleElement
  Fields:
    iTextSharp.text.pdf.PdfName HIGHLIGHT_NONE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HIGHLIGHT_INVERT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HIGHLIGHT_OUTLINE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HIGHLIGHT_PUSH : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HIGHLIGHT_TOGGLE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName APPEARANCE_NORMAL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName APPEARANCE_ROLLOVER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName APPEARANCE_DOWN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AA_ENTER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AA_EXIT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AA_DOWN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AA_UP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AA_FOCUS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AA_BLUR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AA_JS_KEY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AA_JS_FORMAT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AA_JS_CHANGE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AA_JS_OTHER_CHANGE : Public, Static, InitOnly
    Int32 FLAGS_INVISIBLE = 1 : Public, Static, Literal, HasDefault
    Int32 FLAGS_HIDDEN = 2 : Public, Static, Literal, HasDefault
    Int32 FLAGS_PRINT = 4 : Public, Static, Literal, HasDefault
    Int32 FLAGS_NOZOOM = 8 : Public, Static, Literal, HasDefault
    Int32 FLAGS_NOROTATE = 16 : Public, Static, Literal, HasDefault
    Int32 FLAGS_NOVIEW = 32 : Public, Static, Literal, HasDefault
    Int32 FLAGS_READONLY = 64 : Public, Static, Literal, HasDefault
    Int32 FLAGS_LOCKED = 128 : Public, Static, Literal, HasDefault
    Int32 FLAGS_TOGGLENOVIEW = 256 : Public, Static, Literal, HasDefault
    Int32 FLAGS_LOCKEDCONTENTS = 512 : Public, Static, Literal, HasDefault
    Int32 MARKUP_HIGHLIGHT = 0 : Public, Static, Literal, HasDefault
    Int32 MARKUP_UNDERLINE = 1 : Public, Static, Literal, HasDefault
    Int32 MARKUP_STRIKEOUT = 2 : Public, Static, Literal, HasDefault
    Int32 MARKUP_SQUIGGLY = 3 : Public, Static, Literal, HasDefault
  Properties:
    iTextSharp.text.pdf.PdfIndirectReference IndirectReference 'get ' : 
    iTextSharp.text.pdf.PdfContentByte DefaultAppearanceString 'set' : 
    Int32 Flags 'set' : 
    iTextSharp.text.pdf.PdfBorderArray Border 'set' : 
    iTextSharp.text.pdf.PdfBorderDictionary BorderStyle 'set' : 
    System.String AppearanceState 'set' : 
    iTextSharp.text.BaseColor Color 'set' : 
    System.String Title 'set' : 
    iTextSharp.text.pdf.PdfAnnotation Popup 'set' : 
    iTextSharp.text.pdf.PdfAction Action 'set' : 
    System.Collections.Generic.Dictionary`2[iTextSharp.text.pdf.PdfTemplate,System.Object] Templates 'get ' :  (Obsolete)
    Int32 Page 'set' : 
    Int32 PlaceInPage 'get set' : 
    Int32 Rotate 'set' : 
    iTextSharp.text.pdf.PdfDictionary MK 'get ' : 
    Int32 MKRotation 'set' : 
    iTextSharp.text.BaseColor MKBorderColor 'set' : 
    iTextSharp.text.BaseColor MKBackgroundColor 'set' : 
    System.String MKNormalCaption 'set' : 
    System.String MKRolloverCaption 'set' : 
    System.String MKAlternateCaption 'set' : 
    iTextSharp.text.pdf.PdfTemplate MKNormalIcon 'set' : 
    iTextSharp.text.pdf.PdfTemplate MKRolloverIcon 'set' : 
    iTextSharp.text.pdf.PdfTemplate MKAlternateIcon 'set' : 
    Int32 MKTextPosition 'set' : 
    iTextSharp.text.pdf.IPdfOCG Layer 'set' : 
    System.String Name 'set' : 
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    iTextSharp.text.AccessibleElementId ID 'get set' : 
    Boolean IsInline 'get ' : 
  Methods:
    CreateScreen(PdfWriter, Rectangle, String, PdfFileSpecification, String, Boolean): PrivateScope, Public, Static, HideBySig
    get_IndirectReference(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreateText(PdfWriter, Rectangle, String, String, Boolean, String): PrivateScope, Public, Static, HideBySig
    CreateLink(PdfWriter, Rectangle, PdfName, PdfAction): PrivateScope, Public, Static, HideBySig
    CreateLink(PdfWriter, Rectangle, PdfName, String): PrivateScope, Public, Static, HideBySig
    CreateLink(PdfWriter, Rectangle, PdfName, Int32, PdfDestination): PrivateScope, Public, Static, HideBySig
    CreateFreeText(PdfWriter, Rectangle, String, PdfContentByte): PrivateScope, Public, Static, HideBySig
    CreateLine(PdfWriter, Rectangle, String, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    CreateSquareCircle(PdfWriter, Rectangle, String, Boolean): PrivateScope, Public, Static, HideBySig
    CreateMarkup(PdfWriter, Rectangle, String, Int32, Single[]): PrivateScope, Public, Static, HideBySig
    CreateStamp(PdfWriter, Rectangle, String, String): PrivateScope, Public, Static, HideBySig
    CreateInk(PdfWriter, Rectangle, String, Single[][]): PrivateScope, Public, Static, HideBySig
    CreateFileAttachment(PdfWriter, Rectangle, String, Byte[], String, String): PrivateScope, Public, Static, HideBySig
    CreateFileAttachment(PdfWriter, Rectangle, String, PdfFileSpecification): PrivateScope, Public, Static, HideBySig
    CreatePopup(PdfWriter, Rectangle, String, Boolean): PrivateScope, Public, Static, HideBySig
    CreatePolygonPolyline(PdfWriter, Rectangle, String, Boolean, PdfArray): PrivateScope, Public, Static, HideBySig
    set_DefaultAppearanceString(PdfContentByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Flags(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Border(PdfBorderArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BorderStyle(PdfBorderDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetHighlighting(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAppearance(PdfName, PdfTemplate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAppearance(PdfName, String, PdfTemplate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_AppearanceState(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Color(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Title(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Popup(PdfAnnotation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Action(PdfAction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetAdditionalActions(PdfName, PdfAction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsUsed(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    SetUsed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Templates(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetTemplates(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsForm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsAnnotation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Page(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetPage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_PlaceInPage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PlaceInPage(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ShallowDuplicate(PdfAnnotation): PrivateScope, Public, Static, HideBySig
    set_Rotate(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MK(): PrivateScope, Assembly, HideBySig, SpecialName
    set_MKRotation(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetMKColor(BaseColor): PrivateScope, Public, Static, HideBySig
    set_MKBorderColor(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MKBackgroundColor(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MKNormalCaption(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MKRolloverCaption(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MKAlternateCaption(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MKNormalIcon(PdfTemplate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MKRolloverIcon(PdfTemplate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MKAlternateIcon(PdfTemplate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetMKIconFit(PdfName, PdfName, Single, Single, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_MKTextPosition(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Layer(IPdfOCG): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ApplyCTM(AffineTransform): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ApplyCTM(Matrix): PrivateScope, Public, HideBySig (Obsolete)
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
    GetAccessibleAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessibleAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Role(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ID(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PdfAnnotation+PdfImportedLink: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfDictionary): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRect(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsInternal(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDestinationPage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDestinationPage(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TransformDestination(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TransformRect(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateAnnotation(PdfWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfContentByte: AutoLayout, AnsiClass, Class, Public
    Void .ctor(iTextSharp.text.pdf.PdfWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 ALIGN_CENTER = 1 : Public, Static, Literal, HasDefault
    Int32 ALIGN_LEFT = 0 : Public, Static, Literal, HasDefault
    Int32 ALIGN_RIGHT = 2 : Public, Static, Literal, HasDefault
    Int32 LINE_CAP_BUTT = 0 : Public, Static, Literal, HasDefault
    Int32 LINE_CAP_ROUND = 1 : Public, Static, Literal, HasDefault
    Int32 LINE_CAP_PROJECTING_SQUARE = 2 : Public, Static, Literal, HasDefault
    Int32 LINE_JOIN_MITER = 0 : Public, Static, Literal, HasDefault
    Int32 LINE_JOIN_ROUND = 1 : Public, Static, Literal, HasDefault
    Int32 LINE_JOIN_BEVEL = 2 : Public, Static, Literal, HasDefault
    Int32 TEXT_RENDER_MODE_FILL = 0 : Public, Static, Literal, HasDefault
    Int32 TEXT_RENDER_MODE_STROKE = 1 : Public, Static, Literal, HasDefault
    Int32 TEXT_RENDER_MODE_FILL_STROKE = 2 : Public, Static, Literal, HasDefault
    Int32 TEXT_RENDER_MODE_INVISIBLE = 3 : Public, Static, Literal, HasDefault
    Int32 TEXT_RENDER_MODE_FILL_CLIP = 4 : Public, Static, Literal, HasDefault
    Int32 TEXT_RENDER_MODE_STROKE_CLIP = 5 : Public, Static, Literal, HasDefault
    Int32 TEXT_RENDER_MODE_FILL_STROKE_CLIP = 6 : Public, Static, Literal, HasDefault
    Int32 TEXT_RENDER_MODE_CLIP = 7 : Public, Static, Literal, HasDefault
  Properties:
    Boolean SuppressTagging 'get set' : 
    iTextSharp.text.pdf.ByteBuffer InternalBuffer 'get ' : 
    Single XTLM 'get ' : 
    Single YTLM 'get ' : 
    Single CharacterSpacing 'get ' : 
    Single WordSpacing 'get ' : 
    Single HorizontalScaling 'get ' : 
    Single Leading 'get ' : 
    Int32 Size 'get ' : 
    iTextSharp.text.pdf.PdfOutline RootOutline 'get ' : 
    iTextSharp.text.pdf.PdfWriter PdfWriter 'get ' : 
    iTextSharp.text.pdf.PdfDocument PdfDocument 'get ' : 
    iTextSharp.text.pdf.PdfContentByte Duplicate 'get ' : 
    iTextSharp.text.pdf.PageResources PageResources 'get ' : 
  Methods:
    CloseMCBlock(IAccessibleElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SaveMCBlocks(): PrivateScope, Assembly, HideBySig
    RestoreMCBlocks(IList`1): PrivateScope, Assembly, HideBySig
    GetMcDepth(): PrivateScope, Assembly, HideBySig
    SetMcDepth(Int32): PrivateScope, Assembly, HideBySig
    GetMcElements(): PrivateScope, Assembly, HideBySig
    SetMcElements(IList`1): PrivateScope, Assembly, HideBySig
    UpdateTx(String, Single): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_SuppressTagging(): PrivateScope, Public, HideBySig, SpecialName
    set_SuppressTagging(Boolean): PrivateScope, Public, HideBySig, SpecialName
    IsTagged(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_InternalBuffer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToPdf(PdfWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(PdfContentByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_XTLM(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_YTLM(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CharacterSpacing(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_WordSpacing(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HorizontalScaling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Leading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetLeading(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFlatness(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFlatness(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLineCap(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRenderingIntent(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLineDash(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLineDash(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLineDash(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLineDash(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLineDash(Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLineDash(Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLineDash(Single[], Single): PrivateScope, Public, HideBySig
    SetLineDash(Double[], Double): PrivateScope, Public, HideBySig
    SetLineJoin(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLineWidth(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLineWidth(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMiterLimit(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMiterLimit(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clip(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EoClip(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGrayFill(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetGrayFill(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGrayStroke(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetGrayStroke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRGBColorFillF(Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetRGBColorFill(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRGBColorStrokeF(Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetRGBColorStroke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCMYKColorFillF(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetCMYKColorFill(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCMYKColorStrokeF(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetCMYKColorStroke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MoveTo(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MoveTo(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LineTo(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LineTo(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CurveTo(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CurveTo(Double, Double, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CurveTo(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CurveTo(Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CurveFromTo(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CurveFromTo(Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Circle(Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Circle(Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Rectangle(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Rectangle(Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VariableRectangle(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Rectangle(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClosePath(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NewPath(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Stroke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClosePathStroke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Fill(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EoFill(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FillStroke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClosePathFillStroke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EoFillStroke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClosePathEoFillStroke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddImage(Image): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddImage(Image, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddImage(Image, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddImage(Image, Double, Double, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddImage(Image, AffineTransform): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddImage(Image, Matrix): PrivateScope, Public, HideBySig (Obsolete)
    AddImage(Image, Single, Single, Single, Single, Single, Single, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddImage(Image, Double, Double, Double, Double, Double, Double, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SaveState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RestoreState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCharacterSpacing(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetWordSpacing(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetHorizontalScaling(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFontAndSize(BaseFont, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTextRenderingMode(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTextRise(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTextRise(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ShowText(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ShowTextGid(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetKernArray(String, BaseFont): PrivateScope, Public, Static, HideBySig
    ShowTextKerned(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NewlineShowText(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NewlineShowText(Single, Single, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTextMatrix(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTextMatrix(AffineTransform): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTextMatrix(Matrix): PrivateScope, Public, HideBySig (Obsolete)
    SetTextMatrix(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MoveText(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MoveTextWithLeading(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NewlineText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Size(): PrivateScope, Assembly, HideBySig, SpecialName
    GetSize(Boolean): PrivateScope, Assembly, HideBySig
    AddOutline(PdfOutline, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_RootOutline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEffectiveStringWidth(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ShowTextAligned(Int32, String, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ShowTextAlignedKerned(Int32, String, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ConcatCTM(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ConcatCTM(Double, Double, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ConcatCTM(AffineTransform): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ConcatCTM(Matrix): PrivateScope, Public, HideBySig (Obsolete)
    BezierArc(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    BezierArc(Double, Double, Double, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    Arc(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Arc(Double, Double, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Ellipse(Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Ellipse(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreatePattern(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreatePattern(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreatePattern(Single, Single, Single, Single, BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreatePattern(Single, Single, BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateTemplate(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateTemplate(Single, Single, PdfName): PrivateScope, Assembly, HideBySig
    CreateAppearance(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateAppearance(Single, Single, PdfName): PrivateScope, Assembly, HideBySig
    AddPSXObject(PdfPSXObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddTemplate(PdfTemplate, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddTemplate(PdfTemplate, Double, Double, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddTemplate(PdfTemplate, Single, Single, Single, Single, Single, Single, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddTemplate(PdfTemplate, Double, Double, Double, Double, Double, Double, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddTemplate(PdfTemplate, Double, Double, Double, Double, Double, Double, Boolean, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddFormXObj(PdfStream, PdfName, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddFormXObj(PdfStream, PdfName, Double, Double, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddTemplate(PdfTemplate, AffineTransform): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddTemplate(PdfTemplate, AffineTransform, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddTemplate(PdfTemplate, Matrix, Boolean): PrivateScope, Public, HideBySig (Obsolete)
    AddTemplate(PdfTemplate, Matrix): PrivateScope, Public, HideBySig (Obsolete)
    AddTemplateReference(PdfIndirectReference, PdfName, Single, Single, Single, Single, Single, Single): PrivateScope, Assembly, HideBySig
    AddTemplateReference(PdfIndirectReference, PdfName, Double, Double, Double, Double, Double, Double): PrivateScope, Assembly, HideBySig
    AddTemplate(PdfTemplate, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddTemplate(PdfTemplate, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddTemplate(PdfTemplate, Single, Single, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddTemplate(PdfTemplate, Double, Double, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCMYKColorFill(Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCMYKColorStroke(Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRGBColorFill(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRGBColorStroke(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColorStroke(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColorFill(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColorFill(PdfSpotColor, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColorFill(PdfDeviceNColor, Single[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColorFill(PdfLabColor, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColorStroke(PdfSpotColor, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColorStroke(PdfDeviceNColor, Single[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColorStroke(PdfLabColor, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPatternFill(PdfPatternPainter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OutputColorNumbers(BaseColor, Single): PrivateScope, Assembly, HideBySig
    SetPatternFill(PdfPatternPainter, BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPatternFill(PdfPatternPainter, BaseColor, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPatternStroke(PdfPatternPainter, BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPatternStroke(PdfPatternPainter, BaseColor, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPatternStroke(PdfPatternPainter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PaintShading(PdfShading): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PaintShading(PdfShadingPattern): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetShadingFill(PdfShadingPattern): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetShadingStroke(PdfShadingPattern): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ShowText(PdfTextArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_PdfWriter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PdfDocument(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    LocalGoto(String, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LocalDestination(String, PdfDestination): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Duplicate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetDuplicate(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InheritGraphicState(PdfContentByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoteGoto(String, String, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoteGoto(String, Int32, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RoundRectangle(Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RoundRectangle(Double, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAction(PdfAction, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLiteral(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLiteral(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLiteral(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CheckNoPattern(PdfTemplate): PrivateScope, Assembly, HideBySig
    DrawRadioField(Single, Single, Single, Single, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DrawRadioField(Double, Double, Double, Double, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DrawTextField(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DrawTextField(Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DrawButton(Single, Single, Single, Single, String, BaseFont, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DrawButton(Double, Double, Double, Double, String, BaseFont, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_PageResources(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    SetGState(PdfGState): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginLayer(IPdfOCG): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndLayer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddAnnotation(PdfAnnotation): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    AddAnnotation(PdfAnnotation, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDefaultColorspace(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Transform(AffineTransform): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Transform(Matrix): PrivateScope, Public, HideBySig (Obsolete)
    BeginMarkedContentSequence(PdfStructureElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginMarkedContentSequence(PdfStructureElement, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndMarkedContentSequence(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginMarkedContentSequence(PdfName, PdfDictionary, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginMarkedContentSequence(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SanityCheck(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OpenMCBlock(IAccessibleElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfContentByte+GraphicState: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(GraphicState): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.FontDetails fontDetails : Assembly
    iTextSharp.text.pdf.ColorDetails colorDetails : Assembly
    Single size : Assembly
    Single aTLM : Assembly
    Single bTLM : Assembly
    Single cTLM : Assembly
    Single dTLM : Assembly
    Single tx : Assembly
  Methods:
    CopyParameters(GraphicState): PrivateScope, Assembly, HideBySig
    Restore(GraphicState): PrivateScope, Assembly, HideBySig
Class iTextSharp.text.pdf.PdfTemplate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfContentByte
    Void .ctor(iTextSharp.text.pdf.PdfWriter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.interfaces.IAccessibleElement
  Fields:
    Int32 TYPE_TEMPLATE = 1 : Public, Static, Literal, HasDefault
    Int32 TYPE_IMPORTED = 2 : Public, Static, Literal, HasDefault
    Int32 TYPE_PATTERN = 3 : Public, Static, Literal, HasDefault
  Properties:
    Single Width 'get set' : 
    Single Height 'get set' : 
    iTextSharp.text.Rectangle BoundingBox 'get set' : 
    iTextSharp.text.pdf.IPdfOCG Layer 'get set' : 
    iTextSharp.text.pdf.PdfArray Matrix 'get ' : 
    iTextSharp.text.pdf.PdfIndirectReference IndirectReference 'get ' : 
    iTextSharp.text.pdf.PdfObject Resources 'get ' : 
    iTextSharp.text.pdf.PdfContentByte Duplicate 'get ' : 
    Int32 Type 'get ' : 
    iTextSharp.text.pdf.PageResources PageResources 'get ' : 
    iTextSharp.text.pdf.PdfTransparencyGroup Group 'get set' : 
    iTextSharp.text.pdf.PdfDictionary Additional 'get set' : 
    iTextSharp.text.pdf.PdfIndirectReference PageReference 'get set' : 
    Boolean ContentTagged 'get set' : 
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    iTextSharp.text.AccessibleElementId ID 'get set' : 
    Boolean IsInline 'get ' : 
  Methods:
    CreateTemplate(PdfWriter, Single, Single): PrivateScope, Public, Static, HideBySig
    CreateTemplate(PdfWriter, Single, Single, PdfName): PrivateScope, Assembly, Static, HideBySig
    IsTagged(): PrivateScope, Public, Virtual, HideBySig
    get_Width(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Width(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Height(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BoundingBox(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BoundingBox(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Layer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Layer(IPdfOCG): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetMatrix(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Matrix(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IndirectReference(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    BeginVariableText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndVariableText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Resources(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    GetFormXObject(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Duplicate(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PageResources(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_Group(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Group(PdfTransparencyGroup): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Additional(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Additional(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PageReference(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PageReference(PdfIndirectReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ContentTagged(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ContentTagged(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetAccessibleAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessibleAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Role(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ID(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PdfAppearance: AutoLayout, AnsiClass, Class, Public
  :iTextSharp.text.pdf.PdfTemplate
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfIndirectReference): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfWriter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.Dictionary`2[System.String,iTextSharp.text.pdf.PdfName] stdFieldFontNames : Public, Static
  Properties:
    iTextSharp.text.pdf.PdfContentByte Duplicate 'get ' : 
  Methods:
    CreateAppearance(PdfWriter, Single, Single): PrivateScope, Public, Static, HideBySig
    CreateAppearance(PdfWriter, Single, Single, PdfName): PrivateScope, Assembly, Static, HideBySig
    SetFontAndSize(BaseFont, Single): PrivateScope, Public, Virtual, HideBySig
    get_Duplicate(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class iTextSharp.text.pdf.PdfArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfObject): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IList`1[iTextSharp.text.pdf.PdfObject]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[iTextSharp.text.pdf.PdfObject]
    System.Collections.IEnumerable
  Properties:
    iTextSharp.text.pdf.PdfObject Item [Int32] 'get set' : 
    System.Collections.Generic.List`1[iTextSharp.text.pdf.PdfObject] ArrayList 'get ' : 
    Int32 Size 'get ' : 
  Methods:
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, PdfObject): PrivateScope, Public, HideBySig, SpecialName
    GetPdfObject(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Set(Int32, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ArrayList(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(Single[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(Int32, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddFirst(PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetListIterator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetDirectObject(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsDict(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsArray(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsStream(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsString(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsNumber(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsName(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsBoolean(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAsIndirectObject(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AsLongArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AsDoubleArray(): PrivateScope, Public, HideBySig
Class iTextSharp.text.pdf.PdfArtifact: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.interfaces.IAccessibleElement
  Properties:
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    iTextSharp.text.AccessibleElementId ID 'get set' : 
    Boolean IsInline 'get ' : 
    iTextSharp.text.pdf.PdfString Type 'get set' : 
    iTextSharp.text.pdf.PdfArray BBox 'get set' : 
    iTextSharp.text.pdf.PdfArray Attached 'get set' : 
  Methods:
    GetAccessibleAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessibleAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Role(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ID(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Type(PdfString): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetType(ArtifactType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_BBox(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BBox(PdfArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Attached(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Attached(PdfArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct iTextSharp.text.pdf.PdfArtifact+ArtifactType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ArtifactType PAGINATION = 0 : Public, Static, Literal, HasDefault
    ArtifactType LAYOUT = 1 : Public, Static, Literal, HasDefault
    ArtifactType PAGE = 2 : Public, Static, Literal, HasDefault
    ArtifactType BACKGROUND = 3 : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.PdfBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Rectangle
    Void .ctor(iTextSharp.text.Rectangle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Type 'get ' : 
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
  Methods:
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    IsContent(): PrivateScope, Public, Virtual, HideBySig
    IsNestable(): PrivateScope, Public, Virtual, HideBySig
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class iTextSharp.text.pdf.PdfBoolean: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfObject
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.PdfBoolean PDFTRUE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfBoolean PDFFALSE : Public, Static, InitOnly
    System.String TRUE = true : Public, Static, Literal, HasDefault
    System.String FALSE = false : Public, Static, Literal, HasDefault
  Properties:
    Boolean BooleanValue 'get ' : 
  Methods:
    get_BooleanValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfBorderArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfArray
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, iTextSharp.text.pdf.PdfDashPattern): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.PdfBorderDictionary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(Single, Int32, iTextSharp.text.pdf.PdfDashPattern): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 STYLE_SOLID = 0 : Public, Static, Literal, HasDefault
    Int32 STYLE_DASHED = 1 : Public, Static, Literal, HasDefault
    Int32 STYLE_BEVELED = 2 : Public, Static, Literal, HasDefault
    Int32 STYLE_INSET = 3 : Public, Static, Literal, HasDefault
    Int32 STYLE_UNDERLINE = 4 : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.PdfChunk: AutoLayout, AnsiClass, Class, Public
    Void .ctor(System.String, iTextSharp.text.pdf.PdfChunk): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Chunk, iTextSharp.text.pdf.PdfAction): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Chunk, iTextSharp.text.pdf.PdfAction, iTextSharp.text.TabSettings): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.interfaces.IAccessibleElement accessibleElement : Assembly
    Single UNDERLINE_THICKNESS = 0.06666667 : Public, Static, Literal, HasDefault
    Single UNDERLINE_OFFSET = -0.3333333 : Public, Static, Literal, HasDefault
  Properties:
    iTextSharp.text.pdf.PdfFont Font 'get ' : 
    iTextSharp.text.BaseColor Color 'get ' : 
    Single TextRise 'get ' : 
    iTextSharp.text.TabStop TabStop 'get set' : 
    iTextSharp.text.Image Image 'get ' : 
    Single ImageHeight 'get ' : 
    Single ImageWidth 'get ' : 
    Single ImageScalePercentage 'get set' : 
    Single ImageOffsetX 'get set' : 
    Single ImageOffsetY 'get set' : 
    System.String Value 'set' : 
    System.String Encoding 'get ' : 
    Int32 Length 'get ' : 
    Int32 LengthUtf32 'get ' : 
    Boolean ChangeLeading 'get ' : 
    Single Leading 'get ' : 
  Methods:
    GetUnicodeEquivalent(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Split(Single): PrivateScope, Assembly, HideBySig
    Truncate(Single): PrivateScope, Assembly, HideBySig
    get_Font(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Color(): PrivateScope, Assembly, HideBySig, SpecialName
    Width(): PrivateScope, Assembly, HideBySig
    Width(String): PrivateScope, Assembly, HideBySig
    Height(): PrivateScope, Assembly, HideBySig
    IsNewlineSplit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetWidthCorrected(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_TextRise(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    TrimLastSpace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimFirstSpace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAttribute(String): PrivateScope, Assembly, HideBySig
    IsAttribute(String): PrivateScope, Assembly, HideBySig
    IsStroked(): PrivateScope, Assembly, HideBySig
    IsSeparator(): PrivateScope, Assembly, HideBySig
    IsHorizontalSeparator(): PrivateScope, Assembly, HideBySig
    IsTab(): PrivateScope, Assembly, HideBySig
    AdjustLeft(Single): PrivateScope, Assembly, HideBySig (Obsolete)
    GetTabStop(PdfChunk, Single): PrivateScope, Assembly, Static, HideBySig
    get_TabStop(): PrivateScope, Assembly, HideBySig, SpecialName
    set_TabStop(TabStop): PrivateScope, Assembly, HideBySig, SpecialName
    IsImage(): PrivateScope, Assembly, HideBySig
    get_Image(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImageHeight(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImageWidth(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImageScalePercentage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ImageScalePercentage(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ImageOffsetX(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ImageOffsetX(Single): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImageOffsetY(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ImageOffsetY(Single): PrivateScope, Assembly, HideBySig, SpecialName
    set_Value(String): PrivateScope, Assembly, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    IsSpecialEncoding(): PrivateScope, Assembly, HideBySig
    get_Encoding(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Length(): PrivateScope, Assembly, HideBySig, SpecialName
    get_LengthUtf32(): PrivateScope, Assembly, HideBySig, SpecialName
    IsExtSplitCharacter(Int32, Int32, Int32, Char[], PdfChunk[]): PrivateScope, Assembly, HideBySig
    Trim(String): PrivateScope, Assembly, HideBySig
    get_ChangeLeading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Leading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetCharWidth(Int32): PrivateScope, Assembly, HideBySig
    NoPrint(Int32): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.PdfColor: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :iTextSharp.text.pdf.PdfArray
    Void .ctor(Int32, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.BaseColor): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.PdfContentParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PRTokeniser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 COMMAND_TYPE = 200 : Public, Static, Literal, HasDefault
  Properties:
    iTextSharp.text.pdf.PRTokeniser Tokeniser 'get set' : 
  Methods:
    Parse(List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTokeniser(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Tokeniser(PRTokeniser): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Tokeniser(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ReadDictionary(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadPRObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextValidToken(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfContents: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfStream
    Void .ctor(iTextSharp.text.pdf.PdfContentByte, iTextSharp.text.pdf.PdfContentByte, iTextSharp.text.pdf.PdfContentByte, iTextSharp.text.pdf.PdfContentByte, iTextSharp.text.Rectangle): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] SAVESTATE : Assembly, Static
    Byte[] RESTORESTATE : Assembly, Static
    Byte[] ROTATE90 : Assembly, Static
    Byte[] ROTATE180 : Assembly, Static
    Byte[] ROTATE270 : Assembly, Static
    Byte[] ROTATEFINAL : Assembly, Static
Class iTextSharp.text.pdf.PdfCopy: AutoLayout, AnsiClass, Class, Public
  :iTextSharp.text.pdf.PdfWriter
    Void .ctor(iTextSharp.text.Document, System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean updateRootKids : Assembly
    Int32 zero : Assembly, Static
  Properties:
    iTextSharp.text.pdf.IPdfPageEvent PageEvent 'set' : 
    Boolean RotateContents 'get set' : 
  Methods:
    set_PageEvent(IPdfPageEvent): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_RotateContents(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RotateContents(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetMergeFields(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetImportedPage(PdfReader, Int32): PrivateScope, Public, Virtual, HideBySig
    GetImportedPage(PdfReader, Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FixStructureTreeRoot(HashSet2`1, HashSet2`1): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    AddPage(PdfImportedPage): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPage(Rectangle, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddDocument(PdfReader, List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyDocumentFields(PdfReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddDocument(PdfReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddToBody(PdfObject, PdfIndirectReference): PrivateScope, Public, Virtual, HideBySig
    AddToBody(PdfObject, PdfIndirectReference, Boolean): PrivateScope, Public, Virtual, HideBySig
    FlushTaggedObjects(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    FlushAcroFields(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    MergeField(String, Item): PrivateScope, Assembly, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    AddAnnotation(PdfAnnotation): PrivateScope, Public, Virtual, HideBySig
    Add(PdfPage, PdfContents): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    FreeReader(PdfReader): PrivateScope, Public, Virtual, HideBySig
    GetFlags(PdfDictionary): PrivateScope, Assembly, Static, HideBySig
    IsCheckButton(PdfDictionary): PrivateScope, Assembly, Static, HideBySig
    IsRadioButton(PdfDictionary): PrivateScope, Assembly, Static, HideBySig
    IsTextField(PdfDictionary): PrivateScope, Assembly, Static, HideBySig
    CreatePageStamp(PdfImportedPage): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfCopy+IndirectReferences: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfIndirectReference): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Copied 'get set' : 
    iTextSharp.text.pdf.PdfIndirectReference Ref 'get ' : 
  Methods:
    SetCopied(): PrivateScope, Assembly, HideBySig
    get_Copied(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Copied(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_Ref(): PrivateScope, Assembly, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfCopy+PageStamp: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfReader, iTextSharp.text.pdf.PdfDictionary, iTextSharp.text.pdf.PdfCopy): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetUnderContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetOverContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AlterContents(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddAnnotation(PdfAnnotation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfCopy+StampContent: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :iTextSharp.text.pdf.PdfContentByte
    Void .ctor(iTextSharp.text.pdf.PdfWriter, iTextSharp.text.pdf.PageResources): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfContentByte Duplicate 'get ' : 
    iTextSharp.text.pdf.PageResources PageResources 'get ' : 
  Methods:
    get_Duplicate(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_PageResources(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class iTextSharp.text.pdf.PdfCopyFields: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Char): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.interfaces.IPdfViewerPreferences
    iTextSharp.text.pdf.interfaces.IPdfEncryptionSettings
  Properties:
    System.Collections.Generic.IList`1[System.Collections.Generic.Dictionary`2[System.String,System.Object]] Outlines 'set' : 
    iTextSharp.text.pdf.PdfWriter Writer 'get ' : 
    Boolean FullCompression 'get ' : 
    Int32 ViewerPreferences 'set' : 
  Methods:
    AddDocument(PdfReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddDocument(PdfReader, IList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddDocument(PdfReader, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEncryption(Byte[], Byte[], Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEncryption(Boolean, String, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Open(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddJavaScript(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Outlines(IList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Writer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FullCompression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetFullCompression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEncryption(Byte[], Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddViewerPreference(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_ViewerPreferences(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetEncryption(X509Certificate[], Int32[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfCopyFieldsImp: NotPublic (Obsolete)
  :iTextSharp.text.pdf.PdfWriter
    Void .ctor(System.IO.Stream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Char): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.List`1[iTextSharp.text.pdf.PdfReader] readers : Assembly
    System.Collections.Generic.Dictionary`2[iTextSharp.text.pdf.PdfReader,iTextSharp.text.pdf.IntHashtable] readers2intrefs : Assembly
    System.Collections.Generic.Dictionary`2[iTextSharp.text.pdf.PdfReader,iTextSharp.text.pdf.IntHashtable] pages2intrefs : Assembly
    System.Collections.Generic.Dictionary`2[iTextSharp.text.pdf.PdfReader,iTextSharp.text.pdf.IntHashtable] visited : Assembly
    System.Collections.Generic.List`1[iTextSharp.text.pdf.AcroFields] fields : Assembly
    iTextSharp.text.pdf.RandomAccessFileOrArray file : Assembly
    System.Collections.Generic.Dictionary`2[System.String,System.Object] fieldTree : Assembly
    System.Collections.Generic.List`1[iTextSharp.text.pdf.PdfIndirectReference] pageRefs : Assembly
    System.Collections.Generic.List`1[iTextSharp.text.pdf.PdfDictionary] pageDics : Assembly
    iTextSharp.text.pdf.PdfDictionary resources : Assembly
    iTextSharp.text.pdf.PdfDictionary form : Assembly
    iTextSharp.text.Document nd : Assembly
    iTextSharp.text.pdf.PdfName iTextTag : Assembly, Static, InitOnly
    Int32 zero : Assembly, Static
  Methods:
    AddDocument(PdfReader, ICollection`1): PrivateScope, Assembly, HideBySig
    AddDocument(PdfReader): PrivateScope, Assembly, HideBySig
    GetCOName(PdfReader, PRIndirectReference): PrivateScope, Assembly, Static, HideBySig
    Propagate(PdfObject, PdfIndirectReference, Boolean): PrivateScope, Assembly, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    AddPageOffsetToField(IDictionary`2, Int32): PrivateScope, Assembly, HideBySig
    CreateWidgets(List`1, Item): PrivateScope, Assembly, HideBySig
    MergeField(String, Item): PrivateScope, Assembly, HideBySig
    MergeWithMaster(IDictionary`2): PrivateScope, Assembly, HideBySig
    MergeFields(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetPageReference(Int32): PrivateScope, Public, Virtual, HideBySig
    GetReaderFile(PdfReader): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    OpenDoc(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfCopyForms: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.interfaces.IPdfViewerPreferences
    iTextSharp.text.pdf.interfaces.IPdfEncryptionSettings
  Properties:
    System.Collections.Generic.IList`1[System.Collections.Generic.Dictionary`2[System.String,System.Object]] Outlines 'set' : 
    iTextSharp.text.pdf.PdfWriter Writer 'get ' : 
    Boolean FullCompression 'get ' : 
    Int32 ViewerPreferences 'set' : 
  Methods:
    AddDocument(PdfReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddDocument(PdfReader, ICollection`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddDocument(PdfReader, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyDocumentFields(PdfReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEncryption(Byte[], Byte[], Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEncryption(Boolean, String, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Open(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddJavaScript(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Outlines(IList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Writer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FullCompression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetFullCompression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEncryption(Byte[], Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddViewerPreference(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_ViewerPreferences(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetEncryption(X509Certificate[], Int32[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfCopyFormsImp: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :iTextSharp.text.pdf.PdfCopyFieldsImp
    Void .ctor(System.IO.Stream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    CopyDocumentFields(PdfReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MergeFields(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class iTextSharp.text.pdf.PdfDashPattern: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfArray
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Encoding 'get ' : 
  Methods:
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_Encoding(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToUnicodeString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetObjNum(Int32, Int32): PrivateScope, Assembly, HideBySig
    Decrypt(PdfReader): PrivateScope, Assembly, HideBySig
    GetBytes(): PrivateScope, Public, Virtual, HideBySig
    GetOriginalBytes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetHexWriting(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsHexWriting(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfDate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfString
    Void .ctor(System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetW3CDate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetW3CDate(String): PrivateScope, Public, Static, HideBySig
    Decode(String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.PdfDestination: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfArray
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfDestination): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 XYZ = 0 : Public, Static, Literal, HasDefault
    Int32 FIT = 1 : Public, Static, Literal, HasDefault
    Int32 FITH = 2 : Public, Static, Literal, HasDefault
    Int32 FITV = 3 : Public, Static, Literal, HasDefault
    Int32 FITR = 4 : Public, Static, Literal, HasDefault
    Int32 FITB = 5 : Public, Static, Literal, HasDefault
    Int32 FITBH = 6 : Public, Static, Literal, HasDefault
    Int32 FITBV = 7 : Public, Static, Literal, HasDefault
  Methods:
    HasPage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPage(PdfIndirectReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfDeveloperExtension: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfName, iTextSharp.text.pdf.PdfName, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.PdfDeveloperExtension ADOBE_1_7_EXTENSIONLEVEL3 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfDeveloperExtension ESIC_1_7_EXTENSIONLEVEL2 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfDeveloperExtension ESIC_1_7_EXTENSIONLEVEL5 : Public, Static, InitOnly
  Properties:
    iTextSharp.text.pdf.PdfName Prefix 'get ' : 
    iTextSharp.text.pdf.PdfName Baseversion 'get ' : 
    Int32 ExtensionLevel 'get ' : 
  Methods:
    get_Prefix(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Baseversion(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExtensionLevel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetDeveloperExtensions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfDeviceNColor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfSpotColor[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.ICachedColorSpace
    iTextSharp.text.pdf.IPdfSpecialColorSpace
  Properties:
    Int32 NumberOfColorants 'get ' : 
    iTextSharp.text.pdf.PdfSpotColor[] SpotColors 'get ' : 
  Methods:
    get_NumberOfColorants(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SpotColors(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetColorantDetails(PdfWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPdfObject(PdfWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfDocument: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Document
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.Dictionary`2[iTextSharp.text.AccessibleElementId,iTextSharp.text.pdf.PdfStructureElement] structElements : Assembly
    iTextSharp.text.pdf.intern.PdfAnnotationsImp annotationsImp : Assembly
    System.Collections.Generic.List`1[iTextSharp.text.IElement] floatingElements : Assembly
    System.String hangingPunctuation = .,;:' : Assembly, Static, Literal, HasDefault
  Properties:
    Single Leading 'get set' : 
    iTextSharp.text.TabSettings TabSettings 'get set' : 
    Byte[] XmpMetadata 'set' : 
    Int32 PageCount 'set' : 
    PdfInfo Info 'get ' : 
    iTextSharp.text.pdf.PdfOutline RootOutline 'get ' : 
    Int32 ViewerPreferences 'set' : 
    iTextSharp.text.pdf.PdfPageLabels PageLabels 'get set' : 
    iTextSharp.text.pdf.collection.PdfCollection Collection 'set' : 
    iTextSharp.text.pdf.PdfAcroForm AcroForm 'get ' : 
    Int32 SigFlags 'set' : 
    iTextSharp.text.Rectangle CropBoxSize 'set' : 
    Boolean PageEmpty 'get set' : 
    Int32 Duration 'set' : 
    iTextSharp.text.pdf.PdfTransition Transition 'set' : 
    iTextSharp.text.Image Thumbnail 'set' : 
    iTextSharp.text.pdf.PageResources PageResources 'get ' : 
    Boolean StrictImageSequence 'get set' : 
  Methods:
    AddWriter(PdfWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Leading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Leading(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TabSettings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TabSettings(TabSettings): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(IElement): PrivateScope, Public, Virtual, HideBySig
    Open(): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    set_XmpMetadata(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    NewPage(): PrivateScope, Public, Virtual, HideBySig
    EndPage(): PrivateScope, Public, HideBySig
    SetPageSize(Rectangle): PrivateScope, Public, Virtual, HideBySig
    SetMargins(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig
    SetMarginMirroring(Boolean): PrivateScope, Public, Virtual, HideBySig
    SetMarginMirroringTopBottom(Boolean): PrivateScope, Public, Virtual, HideBySig
    set_PageCount(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ResetPageCount(): PrivateScope, Public, Virtual, HideBySig
    GetVerticalPosition(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLineToContent(PdfLine, PdfContentByte, PdfContentByte, Object[], Single): PrivateScope, Assembly, HideBySig
    get_Info(): PrivateScope, Assembly, HideBySig, SpecialName
    GetCatalog(PdfIndirectReference): PrivateScope, Assembly, HideBySig
    AddOutline(PdfOutline, String): PrivateScope, Assembly, HideBySig
    get_RootOutline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CalculateOutlineCount(): PrivateScope, Assembly, HideBySig
    TraverseOutlineCount(PdfOutline): PrivateScope, Assembly, HideBySig
    WriteOutlines(): PrivateScope, Assembly, HideBySig
    OutlineTree(PdfOutline): PrivateScope, Assembly, HideBySig
    set_ViewerPreferences(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    AddViewerPreference(PdfName, PdfObject): PrivateScope, Assembly, HideBySig
    get_PageLabels(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PageLabels(PdfPageLabels): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    LocalGoto(String, Single, Single, Single, Single): PrivateScope, Assembly, HideBySig
    RemoteGoto(String, String, Single, Single, Single, Single): PrivateScope, Assembly, HideBySig
    RemoteGoto(String, Int32, Single, Single, Single, Single): PrivateScope, Assembly, HideBySig
    SetAction(PdfAction, Single, Single, Single, Single): PrivateScope, Assembly, HideBySig
    GetLocalGotoAction(String): PrivateScope, Assembly, HideBySig
    LocalDestination(String, PdfDestination): PrivateScope, Assembly, HideBySig
    AddJavaScript(PdfAction): PrivateScope, Assembly, HideBySig
    AddJavaScript(String, PdfAction): PrivateScope, Assembly, HideBySig
    GetDocumentLevelJS(): PrivateScope, Assembly, HideBySig
    AddFileAttachment(String, PdfFileSpecification): PrivateScope, Assembly, HideBySig
    GetDocumentFileAttachment(): PrivateScope, Assembly, HideBySig
    SetOpenAction(String): PrivateScope, Assembly, HideBySig
    SetOpenAction(PdfAction): PrivateScope, Assembly, HideBySig
    AddAdditionalAction(PdfName, PdfAction): PrivateScope, Assembly, HideBySig
    set_Collection(PdfCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AcroForm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SigFlags(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    AddCalculationOrder(PdfFormField): PrivateScope, Assembly, HideBySig
    AddAnnotation(PdfAnnotation): PrivateScope, Assembly, HideBySig
    SetLanguage(String): PrivateScope, Assembly, HideBySig
    set_CropBoxSize(Rectangle): PrivateScope, Assembly, HideBySig, SpecialName
    SetBoxSize(String, Rectangle): PrivateScope, Assembly, HideBySig
    GetBoxSize(String): PrivateScope, Assembly, HideBySig
    set_PageEmpty(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_PageEmpty(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Duration(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    set_Transition(PdfTransition): PrivateScope, Assembly, HideBySig, SpecialName
    SetPageAction(PdfName, PdfAction): PrivateScope, Assembly, HideBySig
    set_Thumbnail(Image): PrivateScope, Assembly, HideBySig, SpecialName
    get_PageResources(): PrivateScope, Assembly, HideBySig, SpecialName
    set_StrictImageSequence(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_StrictImageSequence(): PrivateScope, Assembly, HideBySig, SpecialName
    ClearTextWrap(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStructParentIndex(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNextMarkPoint(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStructParentIndexAndNextMarkPoint(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPTable(PdfPTable): PrivateScope, Assembly, HideBySig
    AddDiv(PdfDiv): PrivateScope, Assembly, HideBySig
    FlushFloatingElements(): PrivateScope, Assembly, HideBySig
    FitsPage(PdfPTable, Single): PrivateScope, Assembly, HideBySig
Class iTextSharp.text.pdf.PdfDocument+PdfInfo: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddTitle(String): PrivateScope, Assembly, HideBySig
    AddSubject(String): PrivateScope, Assembly, HideBySig
    AddKeywords(String): PrivateScope, Assembly, HideBySig
    AddAuthor(String): PrivateScope, Assembly, HideBySig
    AddCreator(String): PrivateScope, Assembly, HideBySig
    AddProducer(): PrivateScope, Assembly, HideBySig
    AddCreationDate(): PrivateScope, Assembly, HideBySig
    Addkey(String, String): PrivateScope, Assembly, HideBySig
Class iTextSharp.text.pdf.PdfDocument+PdfCatalog: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(iTextSharp.text.pdf.PdfIndirectReference, iTextSharp.text.pdf.PdfWriter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.PdfWriter writer : Assembly
  Properties:
    iTextSharp.text.pdf.PdfAction OpenAction 'set' : 
    iTextSharp.text.pdf.PdfDictionary AdditionalActions 'set' : 
  Methods:
    AddNames(SortedDictionary`2, Dictionary`2, Dictionary`2, PdfWriter): PrivateScope, Assembly, HideBySig
    set_OpenAction(PdfAction): PrivateScope, Assembly, HideBySig, SpecialName
    set_AdditionalActions(PdfDictionary): PrivateScope, Assembly, HideBySig, SpecialName
Class iTextSharp.text.pdf.PdfDocument+Indentation: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single indentLeft : Assembly
    Single sectionIndentLeft : Assembly
    Single listIndentLeft : Assembly
    Single imageIndentLeft : Assembly
    Single indentRight : Assembly
    Single sectionIndentRight : Assembly
    Single imageIndentRight : Assembly
    Single indentTop : Assembly
    Single indentBottom : Assembly
Class iTextSharp.text.pdf.PdfDocument+Destination: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.PdfAction action : Public
    iTextSharp.text.pdf.PdfIndirectReference reference : Public
    iTextSharp.text.pdf.PdfDestination destination : Public
Class iTextSharp.text.pdf.PdfEFStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfStream
    Void .ctor(System.IO.Stream, iTextSharp.text.pdf.PdfWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfEncodings: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Char[] winansiByteToChar : Assembly, Static
    Char[] pdfEncodingByteToChar : Assembly, Static
    iTextSharp.text.pdf.IntHashtable winansi : Assembly, Static
    iTextSharp.text.pdf.IntHashtable pdfEncoding : Assembly, Static
    System.Collections.Generic.Dictionary`2[System.String,iTextSharp.text.pdf.IExtraEncoding] extraEncodings : Assembly, Static
  Methods:
    ConvertToBytes(String, String): PrivateScope, Public, Static, HideBySig
    ConvertToBytes(Char, String): PrivateScope, Public, Static, HideBySig
    ConvertToString(Byte[], String): PrivateScope, Public, Static, HideBySig
    IsPdfDocEncoding(String): PrivateScope, Public, Static, HideBySig
    AddExtraEncoding(String, IExtraEncoding): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.PdfEncryption: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfEncryption): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] key : Assembly
    Int32 keySize : Assembly
    Byte[] mkey : Assembly
    Byte[] extra : Assembly
    Org.BouncyCastle.Crypto.IDigest md5 : Assembly
    Byte[] ownerKey : Assembly
    Byte[] userKey : Assembly
    Byte[] oeKey : Assembly
    Byte[] ueKey : Assembly
    Byte[] perms : Assembly
    Int64 permissions : Assembly
    Byte[] documentID : Assembly
    Byte[] metadataPad : Assembly, Static, InitOnly
    Int64 seq : Assembly, Static
    Int32 STANDARD_ENCRYPTION_40 = 2 : Public, Static, Literal, HasDefault
    Int32 STANDARD_ENCRYPTION_128 = 3 : Public, Static, Literal, HasDefault
    Int32 AES_128 = 4 : Public, Static, Literal, HasDefault
    Int32 AES_256 = 5 : Public, Static, Literal, HasDefault
  Methods:
    SetCryptoMode(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCryptoMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsMetadataEncrypted(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPermissions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsEmbeddedFilesOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetupAllKeys(Byte[], Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadKey(PdfDictionary, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateDocumentId(): PrivateScope, Public, Static, HideBySig
    SetupByUserPassword(Byte[], Byte[], Byte[], Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetupByOwnerPassword(Byte[], Byte[], Byte[], Byte[], Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetKey(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetupByEncryptionKey(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetHashKey(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateInfoId(Byte[], Boolean): PrivateScope, Public, Static, HideBySig
    GetEncryptionDictionary(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFileID(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEncryptionStream(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CalculateStreamSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EncryptByteArray(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDecryptor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DecryptByteArray(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddRecipient(X509Certificate, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ComputeUserPassword(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfEncryptor: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    Encrypt(PdfReader, Stream, Byte[], Byte[], Int32, Boolean): PrivateScope, Public, Static, HideBySig
    Encrypt(PdfReader, Stream, Byte[], Byte[], Int32, Boolean, Dictionary`2): PrivateScope, Public, Static, HideBySig
    Encrypt(PdfReader, Stream, Boolean, String, String, Int32): PrivateScope, Public, Static, HideBySig
    Encrypt(PdfReader, Stream, Boolean, String, String, Int32, Dictionary`2): PrivateScope, Public, Static, HideBySig
    Encrypt(PdfReader, Stream, Int32, String, String, Int32, Dictionary`2): PrivateScope, Public, Static, HideBySig
    Encrypt(PdfReader, Stream, Int32, String, String, Int32): PrivateScope, Public, Static, HideBySig
    GetPermissionsVerbose(Int32): PrivateScope, Public, Static, HideBySig
    IsPrintingAllowed(Int32): PrivateScope, Public, Static, HideBySig
    IsModifyContentsAllowed(Int32): PrivateScope, Public, Static, HideBySig
    IsCopyAllowed(Int32): PrivateScope, Public, Static, HideBySig
    IsModifyAnnotationsAllowed(Int32): PrivateScope, Public, Static, HideBySig
    IsFillInAllowed(Int32): PrivateScope, Public, Static, HideBySig
    IsScreenReadersAllowed(Int32): PrivateScope, Public, Static, HideBySig
    IsAssemblyAllowed(Int32): PrivateScope, Public, Static, HideBySig
    IsDegradedPrintingAllowed(Int32): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.PdfException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :iTextSharp.text.DocumentException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.PdfFileSpecification: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfIndirectReference Reference 'get ' : 
    Byte[] MultiByteFileName 'set' : 
    Boolean Volatile 'set' : 
  Methods:
    Url(PdfWriter, String): PrivateScope, Public, Static, HideBySig
    FileEmbedded(PdfWriter, String, String, Byte[]): PrivateScope, Public, Static, HideBySig
    FileEmbedded(PdfWriter, String, String, Byte[], Int32): PrivateScope, Public, Static, HideBySig
    FileEmbedded(PdfWriter, String, String, Byte[], Boolean): PrivateScope, Public, Static, HideBySig
    FileEmbedded(PdfWriter, String, String, Byte[], Boolean, String, PdfDictionary): PrivateScope, Public, Static, HideBySig
    FileEmbedded(PdfWriter, String, String, Byte[], String, PdfDictionary, Int32): PrivateScope, Public, Static, HideBySig
    FileExtern(PdfWriter, String): PrivateScope, Public, Static, HideBySig
    get_Reference(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MultiByteFileName(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetUnicodeFileName(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Volatile(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddDescription(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddCollectionItem(PdfCollectionItem): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfFont: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.BaseFont, Single): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable`1[iTextSharp.text.pdf.PdfFont]
  Properties:
    Single Size 'get ' : 
    iTextSharp.text.pdf.BaseFont Font 'get ' : 
    iTextSharp.text.pdf.PdfFont DefaultFont 'get ' : 
    Single HorizontalScaling 'get set' : 
  Methods:
    CompareTo(PdfFont): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Size(): PrivateScope, Assembly, HideBySig, SpecialName
    Width(): PrivateScope, Assembly, HideBySig
    Width(Int32): PrivateScope, Assembly, HideBySig
    Width(String): PrivateScope, Assembly, HideBySig
    get_Font(): PrivateScope, Assembly, HideBySig, SpecialName
    get_DefaultFont(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    set_HorizontalScaling(Single): PrivateScope, Assembly, HideBySig, SpecialName
    get_HorizontalScaling(): PrivateScope, Assembly, HideBySig, SpecialName
Class iTextSharp.text.pdf.PdfFormField: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfAnnotation
    Void .ctor(iTextSharp.text.pdf.PdfWriter, Single, Single, Single, Single, iTextSharp.text.pdf.PdfAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfWriter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.PdfFormField parent : Assembly
    System.Collections.Generic.List`1[iTextSharp.text.pdf.PdfFormField] kids : Assembly
    iTextSharp.text.pdf.PdfName IF_SCALE_ALWAYS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IF_SCALE_BIGGER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IF_SCALE_SMALLER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IF_SCALE_NEVER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IF_SCALE_ANAMORPHIC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IF_SCALE_PROPORTIONAL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName[] mergeTarget : Public, Static
    Int32 FF_READ_ONLY = 1 : Public, Static, Literal, HasDefault
    Int32 FF_REQUIRED = 2 : Public, Static, Literal, HasDefault
    Int32 FF_NO_EXPORT = 4 : Public, Static, Literal, HasDefault
    Int32 FF_NO_TOGGLE_TO_OFF = 16384 : Public, Static, Literal, HasDefault
    Int32 FF_RADIO = 32768 : Public, Static, Literal, HasDefault
    Int32 FF_PUSHBUTTON = 65536 : Public, Static, Literal, HasDefault
    Int32 FF_MULTILINE = 4096 : Public, Static, Literal, HasDefault
    Int32 FF_PASSWORD = 8192 : Public, Static, Literal, HasDefault
    Int32 FF_COMBO = 131072 : Public, Static, Literal, HasDefault
    Int32 FF_EDIT = 262144 : Public, Static, Literal, HasDefault
    Int32 FF_FILESELECT = 1048576 : Public, Static, Literal, HasDefault
    Int32 FF_MULTISELECT = 2097152 : Public, Static, Literal, HasDefault
    Int32 FF_DONOTSPELLCHECK = 4194304 : Public, Static, Literal, HasDefault
    Int32 FF_DONOTSCROLL = 8388608 : Public, Static, Literal, HasDefault
    Int32 FF_COMB = 16777216 : Public, Static, Literal, HasDefault
    Int32 FF_RADIOSINUNISON = 33554432 : Public, Static, Literal, HasDefault
    Int32 FF_RICHTEXT = 33554432 : Public, Static, Literal, HasDefault
    Int32 Q_LEFT = 0 : Public, Static, Literal, HasDefault
    Int32 Q_CENTER = 1 : Public, Static, Literal, HasDefault
    Int32 Q_RIGHT = 2 : Public, Static, Literal, HasDefault
    Int32 MK_NO_ICON = 0 : Public, Static, Literal, HasDefault
    Int32 MK_NO_CAPTION = 1 : Public, Static, Literal, HasDefault
    Int32 MK_CAPTION_BELOW = 2 : Public, Static, Literal, HasDefault
    Int32 MK_CAPTION_ABOVE = 3 : Public, Static, Literal, HasDefault
    Int32 MK_CAPTION_RIGHT = 4 : Public, Static, Literal, HasDefault
    Int32 MK_CAPTION_LEFT = 5 : Public, Static, Literal, HasDefault
    Int32 MK_CAPTION_OVERLAID = 6 : Public, Static, Literal, HasDefault
    Boolean MULTILINE = True : Public, Static, Literal, HasDefault
    Boolean SINGLELINE = False : Public, Static, Literal, HasDefault
    Boolean PLAINTEXT = False : Public, Static, Literal, HasDefault
    Boolean PASSWORD = True : Public, Static, Literal, HasDefault
  Properties:
    Int32 Button 'set' : 
    iTextSharp.text.pdf.PdfFormField Parent 'get ' : 
    System.Collections.Generic.List`1[iTextSharp.text.pdf.PdfFormField] Kids 'get ' : 
    System.String ValueAsString 'set' : 
    System.String ValueAsName 'set' : 
    iTextSharp.text.pdf.PdfSignature ValueAsSig 'set' : 
    System.String RichValue 'set' : 
    System.String DefaultValueAsString 'set' : 
    System.String DefaultValueAsName 'set' : 
    System.String FieldName 'set' : 
    System.String UserName 'set' : 
    System.String MappingName 'set' : 
    Int32 Quadding 'set' : 
  Methods:
    SetWidget(Rectangle, PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateEmpty(PdfWriter): PrivateScope, Public, Static, HideBySig
    set_Button(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreatePushButton(PdfWriter): PrivateScope, Public, Static, HideBySig
    CreateCheckBox(PdfWriter): PrivateScope, Public, Static, HideBySig
    CreateRadioButton(PdfWriter, Boolean): PrivateScope, Public, Static, HideBySig
    CreateTextField(PdfWriter, Boolean, Boolean, Int32): PrivateScope, Public, Static, HideBySig
    CreateList(PdfWriter, String[], Int32): PrivateScope, Public, Static, HideBySig
    CreateList(PdfWriter, String[,], Int32): PrivateScope, Public, Static, HideBySig
    CreateCombo(PdfWriter, Boolean, String[], Int32): PrivateScope, Public, Static, HideBySig
    CreateCombo(PdfWriter, Boolean, String[,], Int32): PrivateScope, Public, Static, HideBySig
    CreateSignature(PdfWriter): PrivateScope, Public, Static, HideBySig
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddKid(PdfFormField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Kids(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetFieldFlags(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_ValueAsString(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ValueAsName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ValueAsSig(PdfSignature): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RichValue(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DefaultValueAsString(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DefaultValueAsName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FieldName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_UserName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MappingName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Quadding(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MergeResources(PdfDictionary, PdfDictionary, PdfStamperImp): PrivateScope, Assembly, Static, HideBySig
    MergeResources(PdfDictionary, PdfDictionary): PrivateScope, Assembly, Static, HideBySig
    SetUsed(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfFormXObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfStream
    Void .ctor(iTextSharp.text.pdf.PdfTemplate, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.PdfNumber ZERO : Public, Static
    iTextSharp.text.pdf.PdfNumber ONE : Public, Static
    iTextSharp.text.pdf.PdfLiteral MATRIX : Public, Static
Class iTextSharp.text.pdf.PdfFunction: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    iTextSharp.text.pdf.PdfIndirectReference Reference 'get ' : 
  Methods:
    get_Reference(): PrivateScope, Assembly, HideBySig, SpecialName
    Type0(PdfWriter, Single[], Single[], Int32[], Int32, Int32, Single[], Single[], Byte[]): PrivateScope, Public, Static, HideBySig
    Type2(PdfWriter, Single[], Single[], Single[], Single[], Single): PrivateScope, Public, Static, HideBySig
    Type3(PdfWriter, Single[], Single[], PdfFunction[], Single[], Single[]): PrivateScope, Public, Static, HideBySig
    Type4(PdfWriter, Single[], Single[], String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.PdfGState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.PdfName BM_NORMAL : Public, Static
    iTextSharp.text.pdf.PdfName BM_COMPATIBLE : Public, Static
    iTextSharp.text.pdf.PdfName BM_MULTIPLY : Public, Static
    iTextSharp.text.pdf.PdfName BM_SCREEN : Public, Static
    iTextSharp.text.pdf.PdfName BM_OVERLAY : Public, Static
    iTextSharp.text.pdf.PdfName BM_DARKEN : Public, Static
    iTextSharp.text.pdf.PdfName BM_LIGHTEN : Public, Static
    iTextSharp.text.pdf.PdfName BM_COLORDODGE : Public, Static
    iTextSharp.text.pdf.PdfName BM_COLORBURN : Public, Static
    iTextSharp.text.pdf.PdfName BM_HARDLIGHT : Public, Static
    iTextSharp.text.pdf.PdfName BM_SOFTLIGHT : Public, Static
    iTextSharp.text.pdf.PdfName BM_DIFFERENCE : Public, Static
    iTextSharp.text.pdf.PdfName BM_EXCLUSION : Public, Static
  Properties:
    Boolean OverPrintStroking 'set' : 
    Boolean OverPrintNonStroking 'set' : 
    Int32 OverPrintMode 'set' : 
    Single StrokeOpacity 'set' : 
    Single FillOpacity 'set' : 
    Boolean AlphaIsShape 'set' : 
    Boolean TextKnockout 'set' : 
    iTextSharp.text.pdf.PdfName BlendMode 'set' : 
    iTextSharp.text.pdf.PdfName RenderingIntent 'set' : 
  Methods:
    set_OverPrintStroking(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_OverPrintNonStroking(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_OverPrintMode(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_StrokeOpacity(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FillOpacity(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AlphaIsShape(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TextKnockout(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BlendMode(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RenderingIntent(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfICCBased: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfStream
    Void .ctor(iTextSharp.text.pdf.ICC_Profile): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.ICC_Profile, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.PdfImage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfStream
    Void .ctor(iTextSharp.text.Image, System.String, iTextSharp.text.pdf.PdfIndirectReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 TRANSFERSIZE = 4096 : Assembly, Static, Literal, HasDefault
  Properties:
    iTextSharp.text.pdf.PdfName Name 'get ' : 
    iTextSharp.text.Image Image 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Image(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    TransferBytes(Stream, Stream, Int32): PrivateScope, Assembly, Static, HideBySig
Class iTextSharp.text.pdf.PdfImportedPage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfTemplate
    Void .ctor(iTextSharp.text.pdf.PdfReaderInstance, iTextSharp.text.pdf.PdfWriter, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.PdfReaderInstance readerInstance : Assembly
    Int32 pageNumber : Assembly
    Int32 rotation : Assembly
  Properties:
    iTextSharp.text.pdf.PdfImportedPage FromReader 'get ' : 
    Int32 PageNumber 'get ' : 
    Int32 Rotation 'get ' : 
    iTextSharp.text.pdf.PdfContentByte Duplicate 'get ' : 
    iTextSharp.text.pdf.PdfObject Resources 'get ' : 
    iTextSharp.text.pdf.PdfTransparencyGroup Group 'set' : 
    iTextSharp.text.pdf.PdfReaderInstance PdfReaderInstance 'get ' : 
  Methods:
    get_FromReader(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PageNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Rotation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddImage(Image, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig
    AddTemplate(PdfTemplate, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig
    get_Duplicate(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetFormXObject(Int32): PrivateScope, Public, Virtual, HideBySig
    SetColorFill(PdfSpotColor, Single): PrivateScope, Public, Virtual, HideBySig
    SetColorStroke(PdfSpotColor, Single): PrivateScope, Public, Virtual, HideBySig
    get_Resources(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    SetFontAndSize(BaseFont, Single): PrivateScope, Public, Virtual, HideBySig
    set_Group(PdfTransparencyGroup): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ThrowError(): PrivateScope, Assembly, HideBySig
    get_PdfReaderInstance(): PrivateScope, Assembly, HideBySig, SpecialName
    IsToCopy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCopied(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfIndirectObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, iTextSharp.text.pdf.PdfObject, iTextSharp.text.pdf.PdfWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfIndirectReference, iTextSharp.text.pdf.PdfObject, iTextSharp.text.pdf.PdfWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, iTextSharp.text.pdf.PdfObject, iTextSharp.text.pdf.PdfWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] STARTOBJ : Assembly, Static
    Byte[] ENDOBJ : Assembly, Static
    Int32 SIZEOBJ : Assembly, Static
  Properties:
    Int32 Number 'get ' : 
    Int32 Generation 'get ' : 
    iTextSharp.text.pdf.PdfIndirectReference IndirectReference 'get ' : 
  Methods:
    get_Number(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Generation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IndirectReference(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    WriteTo(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfIndirectReference: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfObject
    Void .ctor(Int32, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Number 'get ' : 
    Int32 Generation 'get ' : 
  Methods:
    get_Number(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Generation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfLabColor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[], Single[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[], Single[], Single[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.ICachedColorSpace
  Methods:
    GetPdfObject(PdfWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Lab2Rgb(Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Lab2Cmyk(Single, Single, Single): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    Rgb2lab(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfLayer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, iTextSharp.text.pdf.PdfWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.IPdfOCG
  Properties:
    System.String Title 'get ' : 
    iTextSharp.text.pdf.PdfLayer Parent 'get ' : 
    System.Collections.Generic.List`1[iTextSharp.text.pdf.PdfLayer] Children 'get ' : 
    iTextSharp.text.pdf.PdfIndirectReference Ref 'get set' : 
    System.String Name 'set' : 
    iTextSharp.text.pdf.PdfObject PdfObject 'get ' : 
    Boolean On 'get set' : 
    Boolean Export 'set' : 
    Boolean View 'set' : 
    System.String PageElement 'set' : 
    Boolean OnPanel 'get set' : 
  Methods:
    CreateTitle(String, PdfWriter): PrivateScope, Public, Static, HideBySig
    get_Title(): PrivateScope, Assembly, HideBySig, SpecialName
    AddChild(PdfLayer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Children(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Ref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Ref(PdfIndirectReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PdfObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_On(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_On(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetCreatorInfo(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLanguage(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Export(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetZoom(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPrint(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_View(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PageElement(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetUser(String, String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_OnPanel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_OnPanel(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PdfLayerMembership: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(iTextSharp.text.pdf.PdfWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.IPdfOCG
  Fields:
    iTextSharp.text.pdf.PdfIndirectReference refi : Assembly
    iTextSharp.text.pdf.PdfArray members : Assembly
    System.Collections.Generic.Dictionary`2[iTextSharp.text.pdf.PdfLayer,System.Object] layers : Assembly
    iTextSharp.text.pdf.PdfName ALLON : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ANYON : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ANYOFF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ALLOFF : Public, Static, InitOnly
  Properties:
    iTextSharp.text.pdf.PdfIndirectReference Ref 'get ' : 
    KeyCollection Layers 'get ' : 
    iTextSharp.text.pdf.PdfName VisibilityPolicy 'set' : 
    iTextSharp.text.pdf.PdfVisibilityExpression VisibilityExpression 'set' : 
    iTextSharp.text.pdf.PdfObject PdfObject 'get ' : 
  Methods:
    get_Ref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddMember(PdfLayer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Layers(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_VisibilityPolicy(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_VisibilityExpression(PdfVisibilityExpression): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PdfObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PdfLine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Single, Single, Int32, Single): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Int32, Boolean, System.Collections.Generic.List`1[iTextSharp.text.pdf.PdfChunk], Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Size 'get ' : 
    Single Height 'get ' : 
    Single IndentLeft 'get ' : 
    Single WidthLeft 'get ' : 
    Int32 NumberOfSpaces 'get ' : 
    iTextSharp.text.ListItem ListItem 'get set' : 
    iTextSharp.text.Chunk ListSymbol 'get ' : 
    Single ListIndent 'get ' : 
    Boolean NewlineSplit 'get ' : 
    Int32 LastStrokeChunk 'get ' : 
    Single OriginalWidth 'get ' : 
    Boolean RTL 'get ' : 
    Single Ascender 'get ' : 
    Single Descender 'get ' : 
  Methods:
    Add(PdfChunk, Single): PrivateScope, Assembly, HideBySig
    Add(PdfChunk): PrivateScope, Assembly, HideBySig
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Height(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IndentLeft(): PrivateScope, Assembly, HideBySig, SpecialName
    HasToBeJustified(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetAlignment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetExtraIndent(Single): PrivateScope, Assembly, HideBySig
    get_WidthLeft(): PrivateScope, Assembly, HideBySig, SpecialName
    get_NumberOfSpaces(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ListItem(ListItem): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ListItem(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ListSymbol(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ListIndent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetLineLengthUtf32(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_NewlineSplit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LastStrokeChunk(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetChunk(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_OriginalWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetMaxSize(Single, Single): PrivateScope, Assembly, HideBySig
    get_RTL(): PrivateScope, Assembly, HideBySig, SpecialName
    GetSeparatorCount(): PrivateScope, Assembly, HideBySig
    GetWidthCorrected(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Ascender(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Descender(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfLiteral: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfObject
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 Position 'get ' : 
    Int32 PosLength 'get ' : 
  Methods:
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
    get_Position(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PosLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PdfMediaClipData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(System.String, iTextSharp.text.pdf.PdfFileSpecification, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.PdfName: AutoLayout, AnsiClass, Class, Public
  :iTextSharp.text.pdf.PdfObject
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable`1[iTextSharp.text.pdf.PdfName]
  Fields:
    iTextSharp.text.pdf.PdfName _3D : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName A : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName A85 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ABSOLUTECOLORIMETRIC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ACROFORM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ACTION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ACTIVATION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ADBE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ACTUALTEXT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ADBE_PKCS7_DETACHED : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ADBE_PKCS7_S4 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ADBE_PKCS7_S5 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ADBE_PKCS7_SHA1 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ADBE_X509_RSA_SHA1 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ADOBE_PPKLITE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ADOBE_PPKMS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AESV2 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AESV3 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AFRELATIONSHIP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AHX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AIS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ALL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ALLPAGES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ALT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ALTERNATE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ALTERNATEPRESENTATION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ALTERNATES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AND : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ANIMATION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ANNOT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ANNOTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ANTIALIAS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName APP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName APPDEFAULT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ART : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ARTBOX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ARTIFACT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ASCENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ASCII85DECODE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ASCIIHEXDECODE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ASSET : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ASSETS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ATTACHED : Public, Static
    iTextSharp.text.pdf.PdfName AUTHEVENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName AUTHOR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName B : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BACKGROUND : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BACKGROUNDCOLOR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BASEENCODING : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BASEFONT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BASEVERSION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BBOX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BG : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BIBENTRY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BIGFIVE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BINDING : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BINDINGMATERIALNAME : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BITSPERCOMPONENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BITSPERSAMPLE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BLACKIS1 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BLACKPOINT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BLOCKQUOTE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BLEEDBOX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BLINDS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BORDER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BOTH : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BOUNDS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BOX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BTN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName BYTERANGE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName C : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName C0 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName C1 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ca : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CALGRAY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CALRGB : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CAPHEIGHT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CARET : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CAPTION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CATALOG : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CATEGORY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CB : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CCITTFAXDECODE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CENTER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CENTERWINDOW : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CERT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CERTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CFM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CH : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CHARPROCS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CHECKSUM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CI : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CIDFONTTYPE0 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CIDFONTTYPE2 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CIDSET : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CIDSYSTEMINFO : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CIDTOGIDMAP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CIRCLE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CLASSMAP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CLOUD : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CMD : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CO : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CODE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COLOR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COLORANTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COLORS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COLORSPACE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COLORTRANSFORM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COLLECTION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COLLECTIONFIELD : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COLLECTIONITEM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COLLECTIONSCHEMA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COLLECTIONSORT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COLLECTIONSUBITEM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COLSPAN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COLUMN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COLUMNS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CONDITION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CONFIGS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CONFIGURATION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CONFIGURATIONS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CONTACTINFO : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CONTENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CONTENTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COORDS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COUNT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COURIER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COURIER_BOLD : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COURIER_OBLIQUE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName COURIER_BOLDOBLIQUE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CREATIONDATE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CREATOR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CREATORINFO : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CRL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CRLS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CROPBOX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CRYPT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CUEPOINT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CUEPOINTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName CYX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName D : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DATA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DCS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DCTDECODE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DECIMAL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DEACTIVATION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DECODE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DECODEPARMS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DEFAULT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DEFAULTCRYPTFILTER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DEFAULTCMYK : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DEFAULTGRAY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DEFAULTRGB : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DESC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DESCENDANTFONTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DESCENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DEST : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DESTOUTPUTPROFILE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DESTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DEVICEGRAY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DEVICERGB : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DEVICECMYK : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DEVICEN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DI : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DIFFERENCES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DISSOLVE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DIRECTION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DISPLAYDOCTITLE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DIV : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DOS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DOCMDP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DOCOPEN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DOCTIMESTAMP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DOCUMENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DOMAIN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DSS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DUR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DUPLEX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DUPLEXFLIPSHORTEDGE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DUPLEXFLIPLONGEDGE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DV : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName DW : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName E : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName EARLYCHANGE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName EF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName EFF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName EFOPEN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName EMBEDDED : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName EMBEDDEDFILE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName EMBEDDEDFILES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ENCODE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ENCODEDBYTEALIGN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ENCODING : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ENCRYPT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ENCRYPTMETADATA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName END : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ENDINDENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ENDOFBLOCK : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ENDOFLINE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName EPSG : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ESIC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ETSI_CADES_DETACHED : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ETSI_RFC3161 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName EXCLUDE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName EXTEND : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName EXTENSIONS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName EXTENSIONLEVEL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName EXTGSTATE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName EXPORT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName EXPORTSTATE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName EVENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName F : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FAR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FB : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FD : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FDECODEPARMS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FDF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FFILTER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FG : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FIELDMDP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FIELDS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FIGURE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FILEATTACHMENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FILESPEC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FILTER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FIRST : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FIRSTCHAR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FIRSTPAGE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FIT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FITH : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FITV : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FITR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FITB : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FITBH : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FITBV : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FITWINDOW : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FLAGS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FLASH : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FLASHVARS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FLATEDECODE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FO : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FONT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FONTBBOX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FONTDESCRIPTOR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FONTFAMILY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FONTFILE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FONTFILE2 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FONTFILE3 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FONTMATRIX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FONTNAME : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FONTWEIGHT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FOREGROUND : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FORM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FORMTYPE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FORMULA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FREETEXT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FRM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FULLSCREEN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FUNCTION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FUNCTIONS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName FUNCTIONTYPE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName GAMMA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName GBK : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName GCS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName GEO : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName GEOGCS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName GLITTER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName GOTO : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName GOTO3DVIEW : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName GOTOE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName GOTOR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName GPTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName GROUP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName GTS_PDFA1 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName GTS_PDFX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName GTS_PDFXVERSION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName H : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName H1 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName H2 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName H3 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName H4 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName H5 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName H6 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HALFTONENAME : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HALFTONETYPE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HALIGN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HEADERS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HEIGHT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HELV : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HELVETICA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HELVETICA_BOLD : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HELVETICA_OBLIQUE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HELVETICA_BOLDOBLIQUE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HID : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HIDE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HIDEMENUBAR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HIDETOOLBAR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HIDEWINDOWUI : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HIGHLIGHT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HOFFSET : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName HTP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName I : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ICCBASED : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ID : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IDENTITY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IDTREE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IMAGE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IMAGEB : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IMAGEC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IMAGEI : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IMAGEMASK : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName INCLUDE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IND : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName INDEX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName INDEXED : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName INFO : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName INK : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName INKLIST : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName INSTANCES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IMPORTDATA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName INTENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName INTERPOLATE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ISMAP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IRT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ITALICANGLE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ITXT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName IX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName JAVASCRIPT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName JBIG2DECODE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName JBIG2GLOBALS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName JPXDECODE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName JS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName JUSTIFY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName K : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName KEYWORDS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName KIDS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName L : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName L2R : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LAB : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LANG : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LANGUAGE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LAST : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LASTCHAR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LASTPAGE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LAUNCH : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LAYOUT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LBL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LBODY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LENGTH : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LENGTH1 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LI : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LIMITS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LINE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LINEAR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LINEHEIGHT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LINK : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LIST : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LISTMODE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LISTNUMBERING : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LOCATION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LOCK : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LOCKED : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LOWERALPHA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LOWERROMAN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LPTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName LZWDECODE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName M : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MAC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MATERIAL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MATRIX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MAC_EXPERT_ENCODING : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MAC_ROMAN_ENCODING : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MARKED : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MARKINFO : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MASK : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MAX_LOWER_CASE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MAX_CAMEL_CASE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MAXLEN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MEDIABOX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MCID : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MCR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MEASURE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName METADATA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MIN_LOWER_CASE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MIN_CAMEL_CASE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MK : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MMTYPE1 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MODDATE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName MOVIE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName N : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName N0 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName N1 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName N2 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName N3 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName N4 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NAME : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NAMED : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NAMES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NAVIGATION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NAVIGATIONPANE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NCHANNEL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NEAR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NEEDAPPEARANCES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NEEDRENDERING : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NEWWINDOW : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NEXT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NEXTPAGE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NONE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NONFULLSCREENPAGEMODE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NONSTRUCT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NOT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NOTE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NUMBERFORMAT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NUMCOPIES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName NUMS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName O : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OBJ : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OBJR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OBJSTM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OCG : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OCGS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OCMD : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OCPROPERTIES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OCSP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OCSPS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName Off_ : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OFF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ON : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ONECOLUMN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OPEN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OPENACTION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName op_ : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OPI : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OPM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OPT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ORDER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ORDERING : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ORG : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OSCILLATING : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OUTLINES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OUTPUTCONDITION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OUTPUTCONDITIONIDENTIFIER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OUTPUTINTENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OUTPUTINTENTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName OVERLAYTEXT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName P : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PAGE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PAGEELEMENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PAGELABELS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PAGELAYOUT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PAGEMODE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PAGES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PAINTTYPE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PANOSE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PARAMS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PARENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PARENTTREE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PARENTTREENEXTKEY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PART : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PASSCONTEXTCLICK : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PATTERN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PATTERNTYPE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PB : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PDF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PDFDOCENCODING : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PDU : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PERCEPTUAL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PERMS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PG : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PI : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PICKTRAYBYPDFSIZE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PIECEINFO : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PLAYCOUNT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PO : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName POLYGON : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName POLYLINE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName POPUP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName POSITION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PREDICTOR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PREFERRED : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PRESENTATION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PRESERVERB : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PRESSTEPS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PREV : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PREVPAGE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PRINT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PRINTAREA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PRINTCLIP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PRINTERMARK : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PRINTFIELD : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PRINTPAGERANGE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PRINTSCALING : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PRINTSTATE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PRIVATE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PROCSET : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PRODUCER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PROJCS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PROP_BUILD : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PROPERTIES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PTDATA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PUBSEC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName PV : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName Q : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName QUADPOINTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName QUOTE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName R : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName R2L : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RANGE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RB : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName rb : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RBGROUPS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RD : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName REASON : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RECIPIENTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RECT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName REDACT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName REFERENCE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName REGISTRY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName REGISTRYNAME : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RELATIVECOLORIMETRIC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RENDITION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName REPEAT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName REVERSEDCHARS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RESETFORM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RESOURCES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName REQUIREMENTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RI : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RICHMEDIA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RICHMEDIAACTIVATION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RICHMEDIAANIMATION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RICHMEDIACOMMAND : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RICHMEDIACONFIGURATION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RICHMEDIACONTENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RICHMEDIADEACTIVATION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RICHMEDIAEXECUTE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RICHMEDIAINSTANCE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RICHMEDIAPARAMS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RICHMEDIAPOSITION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RICHMEDIAPRESENTATION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RICHMEDIASETTINGS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RICHMEDIAWINDOW : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ROLE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RO : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ROLEMAP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ROOT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ROTATE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ROW : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ROWS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ROWSPAN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RUBY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RUNLENGTHDECODE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName RV : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName S : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SATURATION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SCHEMA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SCOPE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SCREEN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SCRIPTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SECT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SEPARATION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SETOCGSTATE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SETTINGS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SHADING : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SHADINGTYPE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SHIFT_JIS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SIG : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SIGFIELDLOCK : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SIGFLAGS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SIGREF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SIMPLEX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SINGLEPAGE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SIZE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SMASK : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SMASKINDATA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SORT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SOUND : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SPACEAFTER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SPACEBEFORE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SPAN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SPEED : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SPLIT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SQUARE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SQUIGGLY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ST : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName STAMP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName STANDARD : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName START : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName STARTINDENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName STATE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName STATUS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName STDCF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName STEMV : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName STMF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName STRF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName STRIKEOUT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName STRUCTELEM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName STRUCTPARENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName STRUCTPARENTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName STRUCTTREEROOT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName STYLE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SUBFILTER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SUBJECT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SUBMITFORM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SUBTYPE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SUMMARY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SUPPLEMENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SV : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SW : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName SYMBOL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName T : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TABLE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TABS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TBODY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TD : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TR2 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TEXT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TEXTALIGN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TEXTDECORATIONCOLOR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TEXTDECORATIONTHICKNESS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TEXTDECORATIONTYPE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TEXTINDENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TFOOT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TH : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName THEAD : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName THUMB : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName THREADS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TI : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TIME : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TILINGTYPE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TIMES_ROMAN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TIMES_BOLD : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TIMES_ITALIC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TIMES_BOLDITALIC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TITLE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TK : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TOC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TOCI : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TOGGLE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TOOLBAR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TOUNICODE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TABLEROW : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TRANS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TRANSFORMPARAMS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TRANSFORMMETHOD : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TRANSPARENCY : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TRANSPARENT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TRAPNET : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TRAPPED : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TRIMBOX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TRUETYPE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TTL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TU : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TV : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TWOCOLUMNLEFT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TWOCOLUMNRIGHT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TWOPAGELEFT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TWOPAGERIGHT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TYPE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TYPE0 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TYPE1 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName TYPE3 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName U : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName UE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName UF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName UHC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName UNDERLINE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName UNIX : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName UPPERALPHA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName UPPERROMAN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName UR : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName UR3 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName URI : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName URL : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName USAGE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName USEATTACHMENTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName USENONE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName USEOC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName USEOUTLINES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName USER : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName USERPROPERTIES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName USERUNIT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName USETHUMBS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName UTF_8 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName V : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName V2 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VALIGN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VERISIGN_PPKVS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VERSION : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VERTICES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VIDEO : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VIEW : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VIEWS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VIEWAREA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VIEWCLIP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VIEWERPREFERENCES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VIEWPORT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VIEWSTATE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VISIBLEPAGES : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VOFFSET : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName VRI : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName W : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName W2 : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName WARICHU : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName WATERMARK : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName WC : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName WIDGET : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName WIDTH : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName WIDTHS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName WIN : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName WIN_ANSI_ENCODING : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName WINDOW : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName WINDOWED : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName WIPE : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName WHITEPOINT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName WKT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName WP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName WS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName WT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName X : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName XA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName XD : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName XFA : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName XML : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName XOBJECT : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName XPTS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName XREF : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName XREFSTM : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName XSTEP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName XYZ : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName YSTEP : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ZADB : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ZAPFDINGBATS : Public, Static, InitOnly
    iTextSharp.text.pdf.PdfName ZOOM : Public, Static, InitOnly
    System.Collections.Generic.Dictionary`2[System.String,iTextSharp.text.pdf.PdfName] staticNames : Public, Static
  Methods:
    CompareTo(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    EncodeName(String): PrivateScope, Public, Static, HideBySig
    DecodeName(String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.PdfNameTree: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteTree(Dictionary`2, PdfWriter): PrivateScope, Public, Static, HideBySig
    ReadTree(PdfDictionary): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.PdfNameTree+CompareSrt: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[System.String]
  Methods:
    Compare(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfNull: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.PdfNull PDFNULL : Public, Static
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfNumber: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfObject
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 IntValue 'get ' : 
    Int64 LongValue 'get ' : 
    Double DoubleValue 'get ' : 
    Single FloatValue 'get ' : 
  Methods:
    get_IntValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LongValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DoubleValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FloatValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Increment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfNumberTree: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteTree(Dictionary`2, PdfWriter): PrivateScope, Public, Static, HideBySig
    ReadTree(PdfDictionary): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.PdfOCProperties: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.PdfOutline: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(iTextSharp.text.pdf.PdfWriter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfOutline, iTextSharp.text.pdf.PdfAction, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfOutline, iTextSharp.text.pdf.PdfAction, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfOutline, iTextSharp.text.pdf.PdfDestination, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfOutline, iTextSharp.text.pdf.PdfDestination, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfOutline, iTextSharp.text.pdf.PdfAction, iTextSharp.text.pdf.PdfString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfOutline, iTextSharp.text.pdf.PdfAction, iTextSharp.text.pdf.PdfString, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfOutline, iTextSharp.text.pdf.PdfDestination, iTextSharp.text.pdf.PdfString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfOutline, iTextSharp.text.pdf.PdfDestination, iTextSharp.text.pdf.PdfString, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfOutline, iTextSharp.text.pdf.PdfAction, iTextSharp.text.Paragraph): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfOutline, iTextSharp.text.pdf.PdfAction, iTextSharp.text.Paragraph, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfOutline, iTextSharp.text.pdf.PdfDestination, iTextSharp.text.Paragraph): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfOutline, iTextSharp.text.pdf.PdfDestination, iTextSharp.text.Paragraph, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfIndirectReference IndirectReference 'get set' : 
    iTextSharp.text.pdf.PdfOutline Parent 'get ' : 
    iTextSharp.text.pdf.PdfDestination PdfDestination 'get ' : 
    Int32 Count 'get set' : 
    Int32 Level 'get ' : 
    System.Collections.Generic.List`1[iTextSharp.text.pdf.PdfOutline] Kids 'get set' : 
    System.String Tag 'get set' : 
    System.String Title 'get set' : 
    Boolean Open 'get set' : 
    iTextSharp.text.BaseColor Color 'get set' : 
    Int32 Style 'get set' : 
  Methods:
    InitOutline(PdfOutline, String, Boolean): PrivateScope, Assembly, HideBySig
    get_IndirectReference(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IndirectReference(PdfIndirectReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetDestinationPage(PdfIndirectReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_PdfDestination(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Count(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Level(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
    AddKid(PdfOutline): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Kids(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Kids(List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Tag(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Tag(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Title(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Title(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Open(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Open(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Color(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Color(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Style(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Style(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PdfPage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(iTextSharp.text.pdf.PdfRectangle, System.Collections.Generic.Dictionary`2[System.String,iTextSharp.text.pdf.PdfRectangle], iTextSharp.text.pdf.PdfDictionary, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfRectangle, System.Collections.Generic.Dictionary`2[System.String,iTextSharp.text.pdf.PdfRectangle], iTextSharp.text.pdf.PdfDictionary): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.PdfNumber PORTRAIT : Public, Static
    iTextSharp.text.pdf.PdfNumber LANDSCAPE : Public, Static
    iTextSharp.text.pdf.PdfNumber INVERTEDPORTRAIT : Public, Static
    iTextSharp.text.pdf.PdfNumber SEASCAPE : Public, Static
  Properties:
    iTextSharp.text.pdf.PdfRectangle MediaBox 'get ' : 
  Methods:
    IsParent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(PdfIndirectReference): PrivateScope, Assembly, HideBySig
    RotateMediaBox(): PrivateScope, Assembly, HideBySig
    get_MediaBox(): PrivateScope, Assembly, HideBySig, SpecialName
Class iTextSharp.text.pdf.PdfPageLabels: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.Dictionary`2[System.Int32,iTextSharp.text.pdf.PdfDictionary] map : Assembly
    iTextSharp.text.pdf.PdfName[] numberingStyle : Assembly, Static
    Int32 DECIMAL_ARABIC_NUMERALS = 0 : Public, Static, Literal, HasDefault
    Int32 UPPERCASE_ROMAN_NUMERALS = 1 : Public, Static, Literal, HasDefault
    Int32 LOWERCASE_ROMAN_NUMERALS = 2 : Public, Static, Literal, HasDefault
    Int32 UPPERCASE_LETTERS = 3 : Public, Static, Literal, HasDefault
    Int32 LOWERCASE_LETTERS = 4 : Public, Static, Literal, HasDefault
    Int32 EMPTY = 5 : Public, Static, Literal, HasDefault
  Methods:
    AddPageLabel(Int32, Int32, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPageLabel(Int32, Int32, String, Int32, Boolean): PrivateScope, Public, HideBySig
    AddPageLabel(Int32, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPageLabel(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPageLabel(PdfPageLabelFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemovePageLabel(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDictionary(PdfWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageLabels(PdfReader): PrivateScope, Public, Static, HideBySig
    GetPageLabelFormats(PdfReader): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.PdfPageLabels+PdfPageLabelFormat: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Int32, Int32, System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 physicalPage : Public
    Int32 numberStyle : Public
    System.String prefix : Public
    Int32 logicalPage : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfPages: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfWriter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfIndirectReference TopParent 'get ' : 
  Methods:
    AddPage(PdfDictionary): PrivateScope, Assembly, HideBySig
    AddPageRef(PdfIndirectReference): PrivateScope, Assembly, HideBySig
    WritePageTree(): PrivateScope, Assembly, HideBySig
    get_TopParent(): PrivateScope, Assembly, HideBySig, SpecialName
    SetLinearMode(PdfIndirectReference): PrivateScope, Assembly, HideBySig
    AddPage(PdfIndirectReference): PrivateScope, Assembly, HideBySig
    ReorderPages(Int32[]): PrivateScope, Assembly, HideBySig
Class iTextSharp.text.pdf.PdfPattern: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfStream
    Void .ctor(iTextSharp.text.pdf.PdfPatternPainter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfPatternPainter, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.PdfPatternPainter: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :iTextSharp.text.pdf.PdfTemplate
    Void .ctor(iTextSharp.text.pdf.PdfWriter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfWriter, iTextSharp.text.BaseColor): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single xstep : Assembly
    Single ystep : Assembly
    Boolean stencil : Assembly
    iTextSharp.text.BaseColor defaultColor : Assembly
  Properties:
    Single XStep 'get set' : 
    Single YStep 'get set' : 
    iTextSharp.text.pdf.PdfContentByte Duplicate 'get ' : 
    iTextSharp.text.BaseColor DefaultColor 'get ' : 
  Methods:
    get_XStep(): PrivateScope, Public, HideBySig, SpecialName
    set_XStep(Single): PrivateScope, Public, HideBySig, SpecialName
    get_YStep(): PrivateScope, Public, HideBySig, SpecialName
    set_YStep(Single): PrivateScope, Public, HideBySig, SpecialName
    IsStencil(): PrivateScope, Public, HideBySig
    SetPatternMatrix(Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig
    GetPattern(): PrivateScope, Public, HideBySig
    GetPattern(Int32): PrivateScope, Public, HideBySig
    get_Duplicate(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DefaultColor(): PrivateScope, Public, HideBySig, SpecialName
    SetGrayFill(Single): PrivateScope, Public, Virtual, HideBySig
    ResetGrayFill(): PrivateScope, Public, Virtual, HideBySig
    SetGrayStroke(Single): PrivateScope, Public, Virtual, HideBySig
    ResetGrayStroke(): PrivateScope, Public, Virtual, HideBySig
    SetRGBColorFillF(Single, Single, Single): PrivateScope, Public, Virtual, HideBySig
    ResetRGBColorFill(): PrivateScope, Public, Virtual, HideBySig
    SetRGBColorStrokeF(Single, Single, Single): PrivateScope, Public, Virtual, HideBySig
    ResetRGBColorStroke(): PrivateScope, Public, Virtual, HideBySig
    SetCMYKColorFillF(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig
    ResetCMYKColorFill(): PrivateScope, Public, Virtual, HideBySig
    SetCMYKColorStrokeF(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig
    ResetCMYKColorStroke(): PrivateScope, Public, Virtual, HideBySig
    AddImage(Image, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig
    SetCMYKColorFill(Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    SetCMYKColorStroke(Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    SetRGBColorFill(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    SetRGBColorStroke(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    SetColorStroke(BaseColor): PrivateScope, Public, Virtual, HideBySig
    SetColorFill(BaseColor): PrivateScope, Public, Virtual, HideBySig
    SetColorFill(PdfSpotColor, Single): PrivateScope, Public, Virtual, HideBySig
    SetColorStroke(PdfSpotColor, Single): PrivateScope, Public, Virtual, HideBySig
    SetPatternFill(PdfPatternPainter): PrivateScope, Public, Virtual, HideBySig
    SetPatternFill(PdfPatternPainter, BaseColor, Single): PrivateScope, Public, Virtual, HideBySig
    SetPatternStroke(PdfPatternPainter, BaseColor, Single): PrivateScope, Public, Virtual, HideBySig
    SetPatternStroke(PdfPatternPainter): PrivateScope, Public, Virtual, HideBySig
    CheckNoColor(): PrivateScope, Assembly, HideBySig
Class iTextSharp.text.pdf.PdfPCell: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Rectangle
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Phrase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Image): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Image, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfPTable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfPTable, iTextSharp.text.pdf.PdfPCell): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfPCell): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.interfaces.IAccessibleElement
  Properties:
    iTextSharp.text.Phrase Phrase 'get set' : 
    Int32 HorizontalAlignment 'get set' : 
    Int32 VerticalAlignment 'get set' : 
    Single EffectivePaddingLeft 'get ' : 
    Single PaddingLeft 'get set' : 
    Single EffectivePaddingRight 'get ' : 
    Single PaddingRight 'get set' : 
    Single EffectivePaddingTop 'get ' : 
    Single PaddingTop 'get set' : 
    Single EffectivePaddingBottom 'get ' : 
    Single PaddingBottom 'get set' : 
    Single Padding 'set' : 
    Boolean UseBorderPadding 'get set' : 
    Single Leading 'get ' : 
    Single MultipliedLeading 'get ' : 
    Single Indent 'get set' : 
    Single ExtraParagraphSpace 'get set' : 
    Single CalculatedHeight 'get set' : 
    Single FixedHeight 'get set' : 
    Single CachedMaxHeight 'get ' : 
    Boolean NoWrap 'get set' : 
    iTextSharp.text.pdf.PdfPTable Table 'get set' : 
    Single MinimumHeight 'get set' : 
    Int32 Colspan 'get set' : 
    Int32 Rowspan 'get set' : 
    Single FollowingIndent 'get set' : 
    Single RightIndent 'get set' : 
    Single SpaceCharRatio 'get set' : 
    Int32 RunDirection 'get set' : 
    iTextSharp.text.Image Image 'get set' : 
    iTextSharp.text.pdf.IPdfPCellEvent CellEvent 'get set' : 
    Int32 ArabicOptions 'get set' : 
    Boolean UseAscender 'get set' : 
    Boolean UseDescender 'get set' : 
    iTextSharp.text.pdf.ColumnText Column 'get set' : 
    System.Collections.Generic.List`1[iTextSharp.text.IElement] CompositeElements 'get ' : 
    Int32 Rotation 'get set' : 
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    iTextSharp.text.AccessibleElementId ID 'get set' : 
    Boolean IsInline 'get ' : 
    System.Collections.Generic.List`1[iTextSharp.text.pdf.PdfPHeaderCell] Headers 'get ' : 
  Methods:
    AddElement(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Phrase(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Phrase(Phrase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HorizontalAlignment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HorizontalAlignment(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_VerticalAlignment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_VerticalAlignment(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EffectivePaddingLeft(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PaddingLeft(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PaddingLeft(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EffectivePaddingRight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PaddingRight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PaddingRight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EffectivePaddingTop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PaddingTop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PaddingTop(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EffectivePaddingBottom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PaddingBottom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PaddingBottom(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Padding(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_UseBorderPadding(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UseBorderPadding(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetLeading(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Leading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MultipliedLeading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Indent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Indent(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExtraParagraphSpace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ExtraParagraphSpace(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CalculatedHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CalculatedHeight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    HasCalculatedHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_FixedHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FixedHeight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    HasFixedHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_CachedMaxHeight(): PrivateScope, Public, HideBySig, SpecialName
    HasCachedMaxHeight(): PrivateScope, Public, HideBySig
    set_NoWrap(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NoWrap(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Table(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Table(PdfPTable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MinimumHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MinimumHeight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    HasMinimumHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Colspan(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Colspan(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Rowspan(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Rowspan(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FollowingIndent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FollowingIndent(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RightIndent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RightIndent(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SpaceCharRatio(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SpaceCharRatio(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RunDirection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RunDirection(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Image(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Image(Image): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CellEvent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CellEvent(IPdfPCellEvent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ArabicOptions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ArabicOptions(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UseAscender(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_UseAscender(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UseDescender(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_UseDescender(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Column(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Column(ColumnText): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompositeElements(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Rotation(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Rotation(): PrivateScope, Public, HideBySig, SpecialName
    GetMaxHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessibleAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Role(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ID(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Headers(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddHeader(PdfPHeaderCell): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfPHeaderCell: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfPCell
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfPHeaderCell): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 NONE = 0 : Public, Static, Literal, HasDefault
    Int32 ROW = 1 : Public, Static, Literal, HasDefault
    Int32 COLUMN = 2 : Public, Static, Literal, HasDefault
    Int32 BOTH = 3 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Scope 'get set' : 
    System.String Name 'get set' : 
    iTextSharp.text.pdf.PdfName Role 'get set' : 
  Methods:
    get_Scope(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Scope(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Role(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class iTextSharp.text.pdf.PdfPRow: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfPCell[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfPCell[], iTextSharp.text.pdf.PdfPRow): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfPRow): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.interfaces.IAccessibleElement
  Fields:
    Boolean mayNotBreak : Public
    Single BOTTOM_LIMIT = -1.073742E+09 : Public, Static, Literal, HasDefault
    Single RIGHT_LIMIT = 20000 : Public, Static, Literal, HasDefault
  Properties:
    Boolean MayNotBreak 'get set' : 
    Single MaxHeights 'get set' : 
    Boolean Adjusted 'get set' : 
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    iTextSharp.text.AccessibleElementId ID 'get set' : 
    Boolean IsInline 'get ' : 
  Methods:
    SetWidths(Single[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetExtraHeight(Int32, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_MayNotBreak(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MayNotBreak(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    WriteBorderAndBackground(Single, Single, Single, PdfPCell, PdfContentByte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColumn(ColumnText, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    WriteCells(Int32, Int32, Single, Single, PdfContentByte[], Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsCalculated(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_MaxHeights(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MaxHeights(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEventWidth(Single, Single[]): PrivateScope, Assembly, HideBySig
    CopyRowContent(PdfPTable, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SplitRow(PdfPTable, Int32, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMaxRowHeightsWithoutCalculating(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFinalMaxHeights(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SplitRowspans(PdfPTable, Int32, PdfPTable, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCells(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasRowspan(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Adjusted(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Adjusted(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetAccessibleAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessibleAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Role(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ID(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PdfPSXObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfTemplate
    Void .ctor(iTextSharp.text.pdf.PdfWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfContentByte Duplicate 'get ' : 
  Methods:
    GetFormXObject(Int32): PrivateScope, Public, Virtual, HideBySig
    get_Duplicate(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class iTextSharp.text.pdf.PdfPTable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Single[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfPTable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.ILargeElement
    iTextSharp.text.IElement
    iTextSharp.text.api.ISpaceable
    iTextSharp.text.pdf.interfaces.IAccessibleElement
  Fields:
    Int32 BASECANVAS = 0 : Public, Static, Literal, HasDefault
    Int32 BACKGROUNDCANVAS = 1 : Public, Static, Literal, HasDefault
    Int32 LINECANVAS = 2 : Public, Static, Literal, HasDefault
    Int32 TEXTCANVAS = 3 : Public, Static, Literal, HasDefault
  Properties:
    Boolean Complete 'get set' : 
    Single TotalWidth 'get set' : 
    iTextSharp.text.pdf.PdfPCell DefaultCell 'get ' : 
    Int32 Size 'get ' : 
    Single TotalHeight 'get ' : 
    Single HeaderHeight 'get ' : 
    Single FooterHeight 'get ' : 
    Int32 NumberOfColumns 'get ' : 
    Int32 HeaderRows 'get set' : 
    Int32 FooterRows 'get set' : 
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
    Int32 Type 'get ' : 
    Single WidthPercentage 'get set' : 
    Int32 HorizontalAlignment 'get set' : 
    System.Collections.Generic.List`1[iTextSharp.text.pdf.PdfPRow] Rows 'get ' : 
    iTextSharp.text.pdf.IPdfPTableEvent TableEvent 'get set' : 
    Single[] AbsoluteWidths 'get ' : 
    Boolean SkipFirstHeader 'get set' : 
    Boolean SkipLastFooter 'get set' : 
    Int32 RunDirection 'get set' : 
    Boolean LockedWidth 'get set' : 
    Boolean SplitRows 'get set' : 
    Single SpacingBefore 'get set' : 
    Single SpacingAfter 'get set' : 
    Single PaddingTop 'get set' : 
    System.String Summary 'get set' : 
    Boolean ExtendLastRow 'get set' : 
    Boolean HeadersInEvent 'get set' : 
    Boolean SplitLate 'get set' : 
    Boolean KeepTogether 'get set' : 
    Boolean ElementComplete 'get set' : 
    Boolean LoopCheck 'get set' : 
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    iTextSharp.text.AccessibleElementId ID 'get set' : 
    Boolean IsInline 'get ' : 
  Methods:
    get_Complete(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Complete(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ShallowCopy(PdfPTable): PrivateScope, Public, Static, HideBySig
    SetWidths(Single[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetWidths(Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTotalWidth(Single[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetWidthPercentage(Single[], Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_TotalWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TotalWidth(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CalculateHeights(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetColumnCount(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_DefaultCell(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddCell(PdfPCell): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CellAt(Int32, Int32): PrivateScope, Assembly, HideBySig
    RowSpanAbove(Int32, Int32): PrivateScope, Assembly, HideBySig
    AddCell(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddCell(PdfPTable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddCell(Image): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddCell(Phrase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteSelectedRows(Int32, Int32, Single, Single, PdfContentByte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteSelectedRows(Int32, Int32, Int32, Int32, Single, Single, PdfContentByte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteSelectedRows(Int32, Int32, Int32, Int32, Single, Single, PdfContentByte[], Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteSelectedRows(Int32, Int32, Single, Single, PdfContentByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteSelectedRows(Int32, Int32, Int32, Int32, Single, Single, PdfContentByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteSelectedRows(Int32, Int32, Int32, Int32, Single, Single, PdfContentByte, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginWritingRows(PdfContentByte): PrivateScope, Public, Static, HideBySig
    EndWritingRows(PdfContentByte[]): PrivateScope, Public, Static, HideBySig
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TotalHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetRowHeight(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRowspanHeight(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasRowspan(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NormalizeHeadersFooters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_HeaderHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FooterHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    DeleteRow(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteLastRow(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteBodyRows(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_NumberOfColumns(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HeaderRows(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HeaderRows(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FooterRows(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FooterRows(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNestable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_WidthPercentage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_WidthPercentage(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HorizontalAlignment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HorizontalAlignment(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetRow(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getLastCompletedRowIndex(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetBreakPoints(Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    KeepRowsTogether(Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    KeepRowsTogether(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    KeepRowsTogether(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Rows(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetRows(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_TableEvent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TableEvent(IPdfPTableEvent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AbsoluteWidths(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEventWidths(Single, Int32, Int32, Boolean): PrivateScope, Assembly, HideBySig
    get_SkipFirstHeader(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SkipFirstHeader(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SkipLastFooter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SkipLastFooter(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RunDirection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RunDirection(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LockedWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LockedWidth(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SplitRows(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SplitRows(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SpacingBefore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SpacingBefore(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SpacingAfter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SpacingAfter(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PaddingTop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PaddingTop(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Summary(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Summary(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExtendLastRow(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ExtendLastRow(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetExtendLastRow(Boolean, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsExtendLastRow(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_HeadersInEvent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HeadersInEvent(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SplitLate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SplitLate(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_KeepTogether(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_KeepTogether(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CompleteRow(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FlushContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddNumberOfRowsWritten(Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    get_ElementComplete(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ElementComplete(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LoopCheck(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LoopCheck(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetAccessibleAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessibleAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Role(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ID(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetHeader(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBody(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFooter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCellStartRowIndex(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFittingRows(Single, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfPTable+FittingRows: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Int32, Int32, Single, Single, System.Collections.Generic.Dictionary`2[System.Int32,System.Single]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 firstRow : Public, InitOnly
    Int32 lastRow : Public, InitOnly
    Single height : Public, InitOnly
    Single completedRowsHeight : Public, InitOnly
  Methods:
    CorrectLastRowChosen(PdfPTable, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfPTable+ColumnMeasurementState: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single height : Public
    Int32 rowspan : Public
    Int32 colspan : Public
  Methods:
    BeginCell(PdfPCell, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ConsumeRowspan(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CellEnds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfPTableBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.interfaces.IAccessibleElement
  Properties:
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    iTextSharp.text.AccessibleElementId ID 'get set' : 
    Boolean IsInline 'get ' : 
  Methods:
    GetAccessibleAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessibleAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Role(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ID(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PdfPTableFooter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfPTableBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfName Role 'get set' : 
  Methods:
    get_Role(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class iTextSharp.text.pdf.PdfPTableHeader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfPTableBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfName Role 'get set' : 
  Methods:
    get_Role(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class iTextSharp.text.pdf.PdfPublicKeyRecipient: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.X509.X509Certificate, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.X509.X509Certificate Certificate 'get ' : 
    Int32 Permission 'get ' : 
  Methods:
    get_Certificate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Permission(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PdfPublicKeySecurityHandler: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddRecipient(PdfPublicKeyRecipient): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRecipientsSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEncodedRecipient(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEncodedRecipients(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfReaderInstance: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfReader, iTextSharp.text.pdf.PdfWriter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32[] myXref : Assembly
    iTextSharp.text.pdf.PdfReader reader : Assembly
    iTextSharp.text.pdf.RandomAccessFileOrArray file : Assembly
    System.Collections.Generic.Dictionary`2[System.Int32,iTextSharp.text.pdf.PdfImportedPage] importedPages : Assembly
    iTextSharp.text.pdf.PdfWriter writer : Assembly
    System.Collections.Generic.Dictionary`2[System.Int32,System.Object] visited : Assembly
    System.Collections.Generic.List`1[System.Int32] nextRound : Assembly
    iTextSharp.text.pdf.PdfLiteral IDENTITYMATRIX : Assembly, Static
    iTextSharp.text.pdf.PdfNumber ONE : Assembly, Static
  Properties:
    iTextSharp.text.pdf.PdfReader Reader 'get ' : 
    iTextSharp.text.pdf.RandomAccessFileOrArray ReaderFile 'get ' : 
  Methods:
    get_Reader(): PrivateScope, Assembly, HideBySig, SpecialName
    GetImportedPage(Int32): PrivateScope, Assembly, HideBySig
    GetNewObjectNumber(Int32, Int32): PrivateScope, Assembly, HideBySig
    get_ReaderFile(): PrivateScope, Assembly, HideBySig, SpecialName
    GetResources(Int32): PrivateScope, Assembly, HideBySig
    GetFormXObject(Int32, Int32): PrivateScope, Assembly, HideBySig
    WriteAllVisited(): PrivateScope, Assembly, HideBySig
    WriteAllPages(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.NumberArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfArray
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IList`1[iTextSharp.text.pdf.PdfNumber]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.PdfRectangle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.NumberArray
    Void .ctor(Single, Single, Single, Single, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Rectangle, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Rectangle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.Rectangle Rectangle 'get ' : 
    Single Left 'get ' : 
    Single Right 'get ' : 
    Single Top 'get ' : 
    Single Bottom 'get ' : 
    Single Width 'get ' : 
    Single Height 'get ' : 
    iTextSharp.text.pdf.PdfRectangle Rotate 'get ' : 
  Methods:
    get_Rectangle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(PdfObject): PrivateScope, Public, Virtual, HideBySig
    Add(Single[]): PrivateScope, Public, Virtual, HideBySig
    Add(Int32[]): PrivateScope, Public, Virtual, HideBySig
    AddFirst(PdfObject): PrivateScope, Public, Virtual, HideBySig
    get_Left(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetLeft(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRight(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTop(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBottom(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Width(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Rotate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Transform(Matrix): PrivateScope, Public, HideBySig (Obsolete)
    Transform(AffineTransform): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfRendition: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(System.String, iTextSharp.text.pdf.PdfFileSpecification, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.PdfResources: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(PdfName, PdfDictionary): PrivateScope, Assembly, HideBySig
Class iTextSharp.text.pdf.PdfShading: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    iTextSharp.text.BaseColor ColorSpace 'get ' : 
    iTextSharp.text.pdf.PdfName ShadingName 'get ' : 
    iTextSharp.text.pdf.PdfIndirectReference ShadingReference 'get ' : 
    Int32 Name 'set' : 
    iTextSharp.text.pdf.PdfWriter Writer 'get ' : 
    iTextSharp.text.pdf.ColorDetails ColorDetails 'get ' : 
    Single[] BBox 'get set' : 
    Boolean AntiAlias 'get set' : 
  Methods:
    get_ColorSpace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ThrowColorSpaceError(): PrivateScope, Public, Static, HideBySig
    CheckCompatibleColors(BaseColor, BaseColor): PrivateScope, Public, Static, HideBySig
    GetColorArray(BaseColor): PrivateScope, Public, Static, HideBySig
    Type1(PdfWriter, BaseColor, Single[], Single[], PdfFunction): PrivateScope, Public, Static, HideBySig
    Type2(PdfWriter, BaseColor, Single[], Single[], PdfFunction, Boolean[]): PrivateScope, Public, Static, HideBySig
    Type3(PdfWriter, BaseColor, Single[], Single[], PdfFunction, Boolean[]): PrivateScope, Public, Static, HideBySig
    SimpleAxial(PdfWriter, Single, Single, Single, Single, BaseColor, BaseColor, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    SimpleAxial(PdfWriter, Single, Single, Single, Single, BaseColor, BaseColor): PrivateScope, Public, Static, HideBySig
    SimpleRadial(PdfWriter, Single, Single, Single, Single, Single, Single, BaseColor, BaseColor, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    SimpleRadial(PdfWriter, Single, Single, Single, Single, Single, Single, BaseColor, BaseColor): PrivateScope, Public, Static, HideBySig
    get_ShadingName(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShadingReference(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Name(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    AddToBody(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Writer(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ColorDetails(): PrivateScope, Assembly, HideBySig, SpecialName
    get_BBox(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BBox(Single[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AntiAlias(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AntiAlias(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PdfShadingPattern: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(iTextSharp.text.pdf.PdfShading): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfName PatternName 'get ' : 
    iTextSharp.text.pdf.PdfName ShadingName 'get ' : 
    iTextSharp.text.pdf.PdfIndirectReference PatternReference 'get ' : 
    iTextSharp.text.pdf.PdfIndirectReference ShadingReference 'get ' : 
    Int32 Name 'set' : 
    Single[] Matrix 'get set' : 
    iTextSharp.text.pdf.PdfShading Shading 'get ' : 
    iTextSharp.text.pdf.ColorDetails ColorDetails 'get ' : 
  Methods:
    get_PatternName(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShadingName(): PrivateScope, Assembly, HideBySig, SpecialName
    get_PatternReference(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShadingReference(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Name(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    AddToBody(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Matrix(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Matrix(Single[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Shading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ColorDetails(): PrivateScope, Assembly, HideBySig, SpecialName
Class iTextSharp.text.pdf.PdfSignature: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(iTextSharp.text.pdf.PdfName, iTextSharp.text.pdf.PdfName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32[] ByteRange 'set' : 
    Byte[] Contents 'set' : 
    Byte[] Cert 'set' : 
    System.String Name 'set' : 
    iTextSharp.text.pdf.PdfDate Date 'set' : 
    System.String Location 'set' : 
    System.String Reason 'set' : 
    System.String SignatureCreator 'set' : 
    System.String Contact 'set' : 
  Methods:
    set_ByteRange(Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Contents(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Cert(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Date(PdfDate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Location(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Reason(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SignatureCreator(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Contact(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PdfSignatureAppearance: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfStamperImp): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 NOT_CERTIFIED = 0 : Public, Static, Literal, HasDefault
    Int32 CERTIFIED_NO_CHANGES_ALLOWED = 1 : Public, Static, Literal, HasDefault
    Int32 CERTIFIED_FORM_FILLING = 2 : Public, Static, Literal, HasDefault
    Int32 CERTIFIED_FORM_FILLING_AND_ANNOTATIONS = 3 : Public, Static, Literal, HasDefault
    System.String questionMark = % DSUnknown
q
1 G
1 g
0.1 0 0 0.1 9 0 cm
0 J 0 j 4 M []0 d
1 i 
0 g
313 292 m
313 404 325 453 432 529 c
478 561 504 597 504 645 c
504 736 440 760 391 760 c
286 760 271 681 265 626 c
265 625 l
100 625 l
100 828 253 898 381 898 c
451 898 679 878 679 650 c
679 555 628 499 538 435 c
488 399 467 376 467 292 c
313 292 l
h
308 214 170 -164 re
f
0.44 G
1.2 w
1 1 0.4 rg
287 318 m
287 430 299 479 406 555 c
451 587 478 623 478 671 c
478 762 414 786 365 786 c
260 786 245 707 239 652 c
239 651 l
74 651 l
74 854 227 924 355 924 c
425 924 653 904 653 676 c
653 581 602 525 512 461 c
462 425 441 402 441 318 c
287 318 l
h
282 240 170 -164 re
B
Q
 : Public, Static, Literal, HasDefault
  Properties:
    Int32 CertificationLevel 'get set' : 
    System.String Reason 'get set' : 
    System.String ReasonCaption 'set' : 
    System.String Location 'get set' : 
    System.String LocationCaption 'set' : 
    System.String SignatureCreator 'get set' : 
    System.String Contact 'get set' : 
    System.DateTime SignDate 'get set' : 
    iTextSharp.text.pdf.PdfDictionary CryptoDictionary 'get set' : 
    Org.BouncyCastle.X509.X509Certificate Certificate 'get set' : 
    ISignatureEvent SignatureEvent 'get set' : 
    System.String FieldName 'get ' : 
    Int32 Page 'get ' : 
    iTextSharp.text.Rectangle Rect 'get ' : 
    iTextSharp.text.Rectangle PageRect 'get ' : 
    RenderingMode SignatureRenderingMode 'get set' : 
    iTextSharp.text.Image SignatureGraphic 'get set' : 
    Boolean Acro6Layers 'get set' : 
    Boolean ReuseAppearance 'set' : 
    iTextSharp.text.Image Image 'get set' : 
    Single ImageScale 'get set' : 
    System.String Layer2Text 'get set' : 
    iTextSharp.text.Font Layer2Font 'get set' : 
    Int32 RunDirection 'get set' : 
    System.String Layer4Text 'get set' : 
    iTextSharp.text.pdf.PdfStamper Stamper 'get ' : 
    iTextSharp.text.pdf.ByteBuffer Sigout 'get set' : 
    System.IO.Stream Originalout 'get set' : 
    System.String TempFile 'get ' : 
    iTextSharp.text.pdf.PdfSigLockDictionary FieldLockDict 'get set' : 
  Methods:
    get_CertificationLevel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CertificationLevel(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Reason(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Reason(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ReasonCaption(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Location(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LocationCaption(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SignatureCreator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SignatureCreator(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Contact(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Contact(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SignDate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SignDate(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetRangeStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddDeveloperExtension(PdfDeveloperExtension): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_CryptoDictionary(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CryptoDictionary(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Certificate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Certificate(X509Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SignatureEvent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SignatureEvent(ISignatureEvent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FieldName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetNewSigName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Page(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Rect(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PageRect(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsInvisible(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetVisibleSignature(Rectangle, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetVisibleSignature(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SignatureRenderingMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SignatureRenderingMode(RenderingMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SignatureGraphic(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SignatureGraphic(Image): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Acro6Layers(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Acro6Layers(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetLayer(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_ReuseAppearance(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Image(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Image(Image): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ImageScale(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ImageScale(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Layer2Text(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Layer2Text(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Layer2Font(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Layer2Font(Font): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RunDirection(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RunDirection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Layer4Text(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Layer4Text(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetTopLayer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAppearance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Stamper(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetStamper(PdfStamper): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Sigout(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Sigout(ByteBuffer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Originalout(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Originalout(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TempFile(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetTempFile(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_FieldLockDict(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FieldLockDict(PdfSigLockDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsPreClosed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PreClose(Dictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.pdf.PdfSignatureAppearance+ISignatureEvent: AutoLayout, AnsiClass, Class, NestedPublic, ClassSemanticsMask, Abstract
  Methods:
    GetSignatureDictionary(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct iTextSharp.text.pdf.PdfSignatureAppearance+RenderingMode: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    RenderingMode DESCRIPTION = 0 : Public, Static, Literal, HasDefault
    RenderingMode NAME_AND_DESCRIPTION = 1 : Public, Static, Literal, HasDefault
    RenderingMode GRAPHIC_AND_DESCRIPTION = 2 : Public, Static, Literal, HasDefault
    RenderingMode GRAPHIC = 3 : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.PdfSmartCopy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfCopy
    Void .ctor(iTextSharp.text.Document, System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FreeReader(PdfReader): PrivateScope, Public, Virtual, HideBySig
    AddPage(PdfImportedPage): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfSmartCopy+ByteStore: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PRStream, System.Collections.Generic.Dictionary`2[iTextSharp.text.pdf.RefKey,System.Int32]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfDictionary, System.Collections.Generic.Dictionary`2[iTextSharp.text.pdf.RefKey,System.Int32]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfSpotColor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, iTextSharp.text.BaseColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.ICachedColorSpace
    iTextSharp.text.pdf.IPdfSpecialColorSpace
  Fields:
    iTextSharp.text.pdf.PdfName name : Public
    iTextSharp.text.BaseColor altcs : Public
    iTextSharp.text.pdf.ColorDetails altColorDetails : Public
  Properties:
    iTextSharp.text.BaseColor AlternativeCS 'get ' : 
    iTextSharp.text.pdf.PdfName Name 'get ' : 
  Methods:
    GetColorantDetails(PdfWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AlternativeCS(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetPdfObject(PdfWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfStamper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfReader, System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfReader, System.IO.Stream, Char): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfReader, System.IO.Stream, Char, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.interfaces.IPdfViewerPreferences
    iTextSharp.text.pdf.interfaces.IPdfEncryptionSettings
    System.IDisposable
  Properties:
    System.Collections.Generic.IDictionary`2[System.String,System.String] MoreInfo 'get set' : 
    iTextSharp.text.pdf.PdfSignatureAppearance SignatureAppearance 'get ' : 
    iTextSharp.text.pdf.XmlSignatureAppearance XmlSignatureAppearance 'get ' : 
    Boolean RotateContents 'get set' : 
    iTextSharp.text.pdf.PdfWriter Writer 'get ' : 
    iTextSharp.text.pdf.PdfReader Reader 'get ' : 
    iTextSharp.text.pdf.AcroFields AcroFields 'get ' : 
    Boolean FormFlattening 'set' : 
    Boolean FreeTextFlattening 'set' : 
    Boolean AnnotationFlattening 'set' : 
    System.Collections.Generic.IList`1[System.Collections.Generic.Dictionary`2[System.String,System.Object]] Outlines 'set' : 
    System.String JavaScript 'set' : 
    Int32 ViewerPreferences 'set' : 
    Byte[] XmpMetadata 'set' : 
    iTextSharp.text.xml.xmp.XmpWriter XmpWriter 'get ' : 
    Boolean FullCompression 'get ' : 
    iTextSharp.text.pdf.security.LtvVerification LtvVerification 'get ' : 
  Methods:
    set_MoreInfo(IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MoreInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ReplacePage(PdfReader, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InsertPage(Int32, Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SignatureAppearance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_XmlSignatureAppearance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUnderContent(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetOverContent(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_RotateContents(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RotateContents(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetEncryption(Byte[], Byte[], Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEncryption(Byte[], Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEncryption(Boolean, String, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEncryption(Int32, String, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEncryption(X509Certificate[], Int32[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetImportedPage(PdfReader, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Writer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Reader(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AcroFields(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FormFlattening(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FreeTextFlattening(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AnnotationFlattening(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddAnnotation(PdfAnnotation, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSignature(String, Int32, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddComments(FdfReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Outlines(IList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetThumbnail(Image, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PartialFormFlattening(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_JavaScript(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddJavaScript(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddFileAttachment(String, Byte[], String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddFileAttachment(String, PdfFileSpecification): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MakePackage(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MakePackage(PdfCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_ViewerPreferences(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddViewerPreference(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_XmpMetadata(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreateXmpMetadata(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_XmpWriter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FullCompression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetFullCompression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPageAction(PdfName, PdfAction, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDuration(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTransition(PdfTransition, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateSignature(PdfReader, Stream, Char, String, Boolean): PrivateScope, Public, Static, HideBySig
    CreateSignature(PdfReader, Stream, Char): PrivateScope, Public, Static, HideBySig
    CreateSignature(PdfReader, Stream, Char, String): PrivateScope, Public, Static, HideBySig
    createXmlSignature(PdfReader, Stream): PrivateScope, Public, Static, HideBySig
    GetPdfLayers(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MarkUsed(PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_LtvVerification(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MergeVerification(): PrivateScope, Assembly, HideBySig
Class iTextSharp.text.pdf.PdfStamperImp: AutoLayout, AnsiClass, Class, Public
  :iTextSharp.text.pdf.PdfWriter
  Fields:
    System.Collections.Generic.Dictionary`2[iTextSharp.text.pdf.PdfReader,iTextSharp.text.pdf.IntHashtable] readers2intrefs : Assembly
    System.Collections.Generic.Dictionary`2[iTextSharp.text.pdf.PdfReader,iTextSharp.text.pdf.RandomAccessFileOrArray] readers2file : Assembly
    iTextSharp.text.pdf.IntHashtable myXref : Assembly
    System.Collections.Generic.Dictionary`2[iTextSharp.text.pdf.PdfDictionary,iTextSharp.text.pdf.PdfStamperImp+PageStamp] pagesToContent : Assembly
  Properties:
    Boolean RotateContents 'get set' : 
    Boolean ContentWritten 'get ' : 
    Boolean FormFlattening 'set' : 
    Boolean FreeTextFlattening 'set' : 
    Boolean FlatAnnotations 'set' : 
    Int32 ViewerPreferences 'set' : 
    Int32 SigFlags 'set' : 
    Int32 Duration 'set' : 
    iTextSharp.text.pdf.PdfTransition Transition 'set' : 
    iTextSharp.text.Image Thumbnail 'set' : 
    iTextSharp.text.pdf.PdfContentByte DirectContent 'get ' : 
    iTextSharp.text.pdf.PdfContentByte DirectContentUnder 'get ' : 
  Methods:
    ApplyRotation(PdfDictionary, ByteBuffer): PrivateScope, Assembly, HideBySig
    AlterResources(PageStamp): PrivateScope, Assembly, HideBySig
    GetReaderFile(PdfReader): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    RegisterReader(PdfReader, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UnRegisterReader(PdfReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FindAllObjects(PdfReader, PdfObject, IntHashtable): PrivateScope, Assembly, Static, HideBySig
    AddComments(FdfReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPageStamp(Int32): PrivateScope, Assembly, HideBySig
    GetUnderContent(Int32): PrivateScope, Assembly, HideBySig
    GetOverContent(Int32): PrivateScope, Assembly, HideBySig
    CorrectAcroFieldPages(Int32): PrivateScope, Assembly, HideBySig
    ReplacePage(PdfReader, Int32, Int32): PrivateScope, Assembly, HideBySig
    InsertPage(Int32, Rectangle): PrivateScope, Assembly, HideBySig
    set_RotateContents(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_RotateContents(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ContentWritten(): PrivateScope, Assembly, HideBySig, SpecialName
    GetAcroFields(): PrivateScope, Assembly, HideBySig
    set_FormFlattening(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    set_FreeTextFlattening(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    PartialFormFlattening(String): PrivateScope, Assembly, HideBySig
    EliminateAcroformObjects(): PrivateScope, Assembly, HideBySig
    CalculateTemplateTransformationMatrix(AffineTransform, Double, Rectangle): PrivateScope, Assembly, HideBySig
    SweepKids(PdfObject): PrivateScope, Assembly, HideBySig
    set_FlatAnnotations(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetPageReference(Int32): PrivateScope, Public, Virtual, HideBySig
    AddAnnotation(PdfAnnotation): PrivateScope, Public, Virtual, HideBySig
    AddDocumentField(PdfIndirectReference): PrivateScope, Assembly, HideBySig
    ExpandFields(PdfFormField, List`1): PrivateScope, Assembly, HideBySig
    AddAnnotation(PdfAnnotation, PdfDictionary): PrivateScope, Assembly, HideBySig
    AddAnnotation(PdfAnnotation, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DeleteOutlines(): PrivateScope, Assembly, HideBySig
    MakePackage(PdfCollection): PrivateScope, Assembly, HideBySig
    set_ViewerPreferences(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    AddViewerPreference(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig
    set_SigFlags(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    SetPageAction(PdfName, PdfAction): PrivateScope, Public, Virtual, HideBySig
    SetPageAction(PdfName, PdfAction, Int32): PrivateScope, Assembly, HideBySig
    set_Duration(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Transition(PdfTransition): PrivateScope, Public, Virtual, HideBySig, SpecialName
    SetDuration(Int32, Int32): PrivateScope, Assembly, HideBySig
    SetTransition(PdfTransition, Int32): PrivateScope, Assembly, HideBySig
    MarkUsed(PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsAppend(): PrivateScope, Assembly, HideBySig
    SetAdditionalAction(PdfName, PdfAction): PrivateScope, Public, Virtual, HideBySig
    SetOpenAction(PdfAction): PrivateScope, Public, Virtual, HideBySig
    SetOpenAction(String): PrivateScope, Public, Virtual, HideBySig
    set_Thumbnail(Image): PrivateScope, Public, Virtual, HideBySig, SpecialName
    SetThumbnail(Image, Int32): PrivateScope, Assembly, HideBySig
    GetPdfLayers(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RegisterLayer(IPdfOCG): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateXmpMetadata(): PrivateScope, Public, Virtual, HideBySig
    get_DirectContent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DirectContentUnder(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetPdfReader(): PrivateScope, Public, HideBySig
Class iTextSharp.text.pdf.PdfStamperImp+PageStamp: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfStamperImp, iTextSharp.text.pdf.PdfReader, iTextSharp.text.pdf.PdfDictionary): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.PdfDictionary pageN : Assembly
    iTextSharp.text.pdf.StampContent under : Assembly
    iTextSharp.text.pdf.StampContent over : Assembly
    iTextSharp.text.pdf.PageResources pageResources : Assembly
    Int32 replacePoint : Assembly
Interface iTextSharp.text.pdf.interfaces.IPdfStructureElement: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.PdfStructureElement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(iTextSharp.text.pdf.PdfStructureElement, iTextSharp.text.pdf.PdfName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfStructureTreeRoot, iTextSharp.text.pdf.PdfName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfDictionary, iTextSharp.text.pdf.PdfName): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.interfaces.IPdfStructureElement
  Properties:
    iTextSharp.text.pdf.PdfName StructureType 'get ' : 
    iTextSharp.text.pdf.PdfDictionary Parent 'get ' : 
    iTextSharp.text.pdf.PdfIndirectReference Reference 'get ' : 
  Methods:
    get_StructureType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetParent(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPageMark(Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    SetAnnotation(PdfAnnotation, PdfIndirectReference): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    get_Reference(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteAttributes(IAccessibleElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfStructureTreeRoot: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(iTextSharp.text.pdf.PdfWriter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.interfaces.IPdfStructureElement
  Fields:
    System.Collections.Generic.Dictionary`2[iTextSharp.text.pdf.PdfName,iTextSharp.text.pdf.PdfObject] classes : Assembly
  Properties:
    iTextSharp.text.pdf.PdfWriter Writer 'get ' : 
    System.Collections.Generic.Dictionary`2[System.Int32,iTextSharp.text.pdf.PdfIndirectReference] NumTree 'get ' : 
    iTextSharp.text.pdf.PdfIndirectReference Reference 'get ' : 
  Methods:
    MapRole(PdfName, PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MapClass(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PutIDTree(String, PdfObject): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetMappedClass(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Writer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumTree(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Reference(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetPageMark(Int32, PdfIndirectReference): PrivateScope, Assembly, HideBySig
    SetAnnotationMark(Int32, PdfIndirectReference): PrivateScope, Assembly, HideBySig
    BuildTree(): PrivateScope, Assembly, HideBySig
    GetAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfTextArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[System.Object] ArrayList 'get ' : 
  Methods:
    Add(PdfNumber): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ArrayList(): PrivateScope, Assembly, HideBySig, SpecialName
Class iTextSharp.text.pdf.PdfTransition: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 SPLITVOUT = 1 : Public, Static, Literal, HasDefault
    Int32 SPLITHOUT = 2 : Public, Static, Literal, HasDefault
    Int32 SPLITVIN = 3 : Public, Static, Literal, HasDefault
    Int32 SPLITHIN = 4 : Public, Static, Literal, HasDefault
    Int32 BLINDV = 5 : Public, Static, Literal, HasDefault
    Int32 BLINDH = 6 : Public, Static, Literal, HasDefault
    Int32 INBOX = 7 : Public, Static, Literal, HasDefault
    Int32 OUTBOX = 8 : Public, Static, Literal, HasDefault
    Int32 LRWIPE = 9 : Public, Static, Literal, HasDefault
    Int32 RLWIPE = 10 : Public, Static, Literal, HasDefault
    Int32 BTWIPE = 11 : Public, Static, Literal, HasDefault
    Int32 TBWIPE = 12 : Public, Static, Literal, HasDefault
    Int32 DISSOLVE = 13 : Public, Static, Literal, HasDefault
    Int32 LRGLITTER = 14 : Public, Static, Literal, HasDefault
    Int32 TBGLITTER = 15 : Public, Static, Literal, HasDefault
    Int32 DGLITTER = 16 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Duration 'get ' : 
    Int32 Type 'get ' : 
    iTextSharp.text.pdf.PdfDictionary TransitionDictionary 'get ' : 
  Methods:
    get_Duration(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TransitionDictionary(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PdfTransparencyGroup: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Isolated 'set' : 
    Boolean Knockout 'set' : 
  Methods:
    set_Isolated(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Knockout(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PdfVisibilityExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfArray
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 OR = 0 : Public, Static, Literal, HasDefault
    Int32 AND = 1 : Public, Static, Literal, HasDefault
    Int32 NOT = -1 : Public, Static, Literal, HasDefault
  Methods:
    Add(Int32, PdfObject): PrivateScope, Public, Virtual, HideBySig
    Add(PdfObject): PrivateScope, Public, Virtual, HideBySig
    AddFirst(PdfObject): PrivateScope, Public, Virtual, HideBySig
    Add(Single[]): PrivateScope, Public, Virtual, HideBySig
    Add(Int32[]): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PdfIsoConformanceException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.PdfXConformanceException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :iTextSharp.text.pdf.PdfIsoConformanceException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.Pfm2afm: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    Convert(RandomAccessFileOrArray, Stream): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.PRAcroForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(iTextSharp.text.pdf.PdfReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.List`1[iTextSharp.text.pdf.PRAcroForm+FieldInformation] fields : Assembly
    System.Collections.Generic.List`1[iTextSharp.text.pdf.PdfDictionary] stack : Assembly
    System.Collections.Generic.Dictionary`2[System.String,iTextSharp.text.pdf.PRAcroForm+FieldInformation] fieldByName : Assembly
    iTextSharp.text.pdf.PdfReader reader : Assembly
  Properties:
    Int32 Size 'get ' : 
    System.Collections.Generic.List`1[iTextSharp.text.pdf.PRAcroForm+FieldInformation] Fields 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Fields(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetField(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRefByName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadAcroForm(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PRAcroForm+FieldInformation: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(System.String, iTextSharp.text.pdf.PdfDictionary, iTextSharp.text.pdf.PRIndirectReference): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String fieldName : Assembly
    iTextSharp.text.pdf.PdfDictionary info : Assembly
    iTextSharp.text.pdf.PRIndirectReference refi : Assembly
  Properties:
    System.String WidgetName 'get ' : 
    System.String Name 'get ' : 
    iTextSharp.text.pdf.PdfDictionary Info 'get ' : 
    iTextSharp.text.pdf.PRIndirectReference Ref 'get ' : 
  Methods:
    get_WidgetName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Info(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Ref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PRIndirectReference: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfIndirectReference
    Void .ctor(iTextSharp.text.pdf.PdfReader, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfReader, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfReader Reader 'get ' : 
  Methods:
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
    get_Reader(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetNumber(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PRStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfStream
    Void .ctor(iTextSharp.text.pdf.PRStream, iTextSharp.text.pdf.PdfDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PRStream, iTextSharp.text.pdf.PdfDictionary, iTextSharp.text.pdf.PdfReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfReader, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfReader, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfReader, Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get set' : 
    Int64 Offset 'get ' : 
    iTextSharp.text.pdf.PdfReader Reader 'get ' : 
    Int32 ObjNum 'get set' : 
    Int32 ObjGen 'get set' : 
  Methods:
    SetData(Byte[], Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetData(Byte[], Boolean, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDataRaw(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetData(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Length(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Reader(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBytes(): PrivateScope, Public, HideBySig
    get_ObjNum(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ObjNum(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ObjGen(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ObjGen(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToPdf(PdfWriter, Stream): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.PRTokeniser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.RandomAccessFileOrArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String EMPTY =  : Assembly, Static, Literal, HasDefault
  Properties:
    Int64 FilePointer 'get ' : 
    Int64 Length 'get ' : 
    iTextSharp.text.pdf.RandomAccessFileOrArray SafeFile 'get ' : 
    iTextSharp.text.pdf.RandomAccessFileOrArray File 'get ' : 
    TokType TokenType 'get ' : 
    System.String StringValue 'get ' : 
    Int32 Reference 'get ' : 
    Int32 Generation 'get ' : 
    Int64 LongValue 'get ' : 
    Int32 IntValue 'get ' : 
  Methods:
    Seek(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_FilePointer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Read(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SafeFile(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_File(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ReadString(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsWhitespace(Int32): PrivateScope, Public, Static, HideBySig
    IsWhitespace(Int32, Boolean): PrivateScope, Public, Static, HideBySig
    IsDelimiter(Int32): PrivateScope, Public, Static, HideBySig
    get_TokenType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_StringValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Reference(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Generation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    BackOnePosition(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ThrowError(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHeaderOffset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CheckPdfHeader(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CheckFdfHeader(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStartxref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHex(Int32): PrivateScope, Public, Static, HideBySig
    NextValidToken(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextToken(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_LongValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IntValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ReadLineSegment(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadLineSegment(Byte[], Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CheckObjectStart(Byte[]): PrivateScope, Public, Static, HideBySig
    IsHexString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct iTextSharp.text.pdf.PRTokeniser+TokType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    TokType NUMBER = 1 : Public, Static, Literal, HasDefault
    TokType STRING = 2 : Public, Static, Literal, HasDefault
    TokType NAME = 3 : Public, Static, Literal, HasDefault
    TokType COMMENT = 4 : Public, Static, Literal, HasDefault
    TokType START_ARRAY = 5 : Public, Static, Literal, HasDefault
    TokType END_ARRAY = 6 : Public, Static, Literal, HasDefault
    TokType START_DIC = 7 : Public, Static, Literal, HasDefault
    TokType END_DIC = 8 : Public, Static, Literal, HasDefault
    TokType REF = 9 : Public, Static, Literal, HasDefault
    TokType OTHER = 10 : Public, Static, Literal, HasDefault
    TokType ENDOFFILE = 11 : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.PushbuttonField: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.BaseField
    Void .ctor(iTextSharp.text.pdf.PdfWriter, iTextSharp.text.Rectangle, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 LAYOUT_LABEL_ONLY = 1 : Public, Static, Literal, HasDefault
    Int32 LAYOUT_ICON_ONLY = 2 : Public, Static, Literal, HasDefault
    Int32 LAYOUT_ICON_TOP_LABEL_BOTTOM = 3 : Public, Static, Literal, HasDefault
    Int32 LAYOUT_LABEL_TOP_ICON_BOTTOM = 4 : Public, Static, Literal, HasDefault
    Int32 LAYOUT_ICON_LEFT_LABEL_RIGHT = 5 : Public, Static, Literal, HasDefault
    Int32 LAYOUT_LABEL_LEFT_ICON_RIGHT = 6 : Public, Static, Literal, HasDefault
    Int32 LAYOUT_LABEL_OVER_ICON = 7 : Public, Static, Literal, HasDefault
    Int32 SCALE_ICON_ALWAYS = 1 : Public, Static, Literal, HasDefault
    Int32 SCALE_ICON_NEVER = 2 : Public, Static, Literal, HasDefault
    Int32 SCALE_ICON_IS_TOO_BIG = 3 : Public, Static, Literal, HasDefault
    Int32 SCALE_ICON_IS_TOO_SMALL = 4 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Layout 'get set' : 
    iTextSharp.text.Image Image 'get set' : 
    iTextSharp.text.pdf.PdfTemplate Template 'get set' : 
    Int32 ScaleIcon 'get set' : 
    Boolean ProportionalIcon 'get set' : 
    Single IconVerticalAdjustment 'get set' : 
    Single IconHorizontalAdjustment 'get set' : 
    iTextSharp.text.pdf.PdfFormField Field 'get ' : 
    Boolean IconFitToBounds 'get set' : 
    iTextSharp.text.pdf.PRIndirectReference IconReference 'get set' : 
  Methods:
    set_Layout(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Layout(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Image(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Image(Image): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Template(PdfTemplate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Template(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ScaleIcon(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ScaleIcon(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ProportionalIcon(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ProportionalIcon(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IconVerticalAdjustment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IconVerticalAdjustment(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IconHorizontalAdjustment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IconHorizontalAdjustment(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetAppearance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Field(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IconFitToBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IconFitToBounds(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IconReference(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IconReference(PRIndirectReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.qrcode.BitArray: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32[] bits : Public
    Int32 size : Public
  Methods:
    GetSize(): PrivateScope, Public, HideBySig
    Get(Int32): PrivateScope, Public, HideBySig
    Set(Int32): PrivateScope, Public, HideBySig
    Flip(Int32): PrivateScope, Public, HideBySig
    SetBulk(Int32, Int32): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    IsRange(Int32, Int32, Boolean): PrivateScope, Public, HideBySig
    GetBitArray(): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.qrcode.BitMatrix: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 width : Public
    Int32 height : Public
    Int32 rowSize : Public
    Int32[] bits : Public
  Methods:
    Get(Int32, Int32): PrivateScope, Public, HideBySig
    Set(Int32, Int32): PrivateScope, Public, HideBySig
    Flip(Int32, Int32): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    SetRegion(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    GetRow(Int32, BitArray): PrivateScope, Public, HideBySig
    GetWidth(): PrivateScope, Public, HideBySig
    GetHeight(): PrivateScope, Public, HideBySig
    GetDimension(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.qrcode.BitVector: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    At(Int32): PrivateScope, Public, HideBySig
    Size(): PrivateScope, Public, HideBySig
    SizeInBytes(): PrivateScope, Public, HideBySig
    AppendBit(Int32): PrivateScope, Public, HideBySig
    AppendBits(Int32, Int32): PrivateScope, Public, HideBySig
    AppendBitVector(BitVector): PrivateScope, Public, HideBySig
    Xor(BitVector): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetArray(): PrivateScope, Public, HideBySig
Class iTextSharp.text.pdf.qrcode.BlockPair: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.qrcode.ByteArray, iTextSharp.text.pdf.qrcode.ByteArray): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetDataBytes(): PrivateScope, Public, HideBySig
    GetErrorCorrectionBytes(): PrivateScope, Public, HideBySig
Class iTextSharp.text.pdf.qrcode.ByteArray: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    At(Int32): PrivateScope, Public, HideBySig
    Set(Int32, Int32): PrivateScope, Public, HideBySig
    Size(): PrivateScope, Public, HideBySig
    IsEmpty(): PrivateScope, Public, HideBySig
    AppendByte(Int32): PrivateScope, Public, HideBySig
    Reserve(Int32): PrivateScope, Public, HideBySig
    Set(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
Class iTextSharp.text.pdf.qrcode.ByteMatrix: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetHeight(): PrivateScope, Public, HideBySig
    GetWidth(): PrivateScope, Public, HideBySig
    Get(Int32, Int32): PrivateScope, Public, HideBySig
    GetArray(): PrivateScope, Public, HideBySig
    Set(Int32, Int32, SByte): PrivateScope, Public, HideBySig
    Set(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    Clear(SByte): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.qrcode.CharacterSetECI: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    GetEncodingName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCharacterSetECIByName(String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.qrcode.EncodeHintType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Fields:
    iTextSharp.text.pdf.qrcode.EncodeHintType ERROR_CORRECTION : Public, Static, InitOnly
    iTextSharp.text.pdf.qrcode.EncodeHintType CHARACTER_SET : Public, Static, InitOnly
Class iTextSharp.text.pdf.qrcode.Encoder: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    Encode(String, ErrorCorrectionLevel, QRCode): PrivateScope, Public, Static, HideBySig
    Encode(String, ErrorCorrectionLevel, IDictionary`2, QRCode): PrivateScope, Public, Static, HideBySig
    ChooseMode(String): PrivateScope, Public, Static, HideBySig
    ChooseMode(String, String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.qrcode.ErrorCorrectionLevel: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Fields:
    iTextSharp.text.pdf.qrcode.ErrorCorrectionLevel L : Public, Static, InitOnly
    iTextSharp.text.pdf.qrcode.ErrorCorrectionLevel M : Public, Static, InitOnly
    iTextSharp.text.pdf.qrcode.ErrorCorrectionLevel Q : Public, Static, InitOnly
    iTextSharp.text.pdf.qrcode.ErrorCorrectionLevel H : Public, Static, InitOnly
  Methods:
    Ordinal(): PrivateScope, Public, HideBySig
    GetBits(): PrivateScope, Public, HideBySig
    GetName(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ForBits(Int32): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.qrcode.FormatInformation: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    NumBitsDiffering(Int32, Int32): PrivateScope, Public, Static, HideBySig
    DecodeFormatInformation(Int32, Int32): PrivateScope, Public, Static, HideBySig
    GetErrorCorrectionLevel(): PrivateScope, Public, HideBySig
    GetDataMask(): PrivateScope, Public, HideBySig
    HashCode(): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.qrcode.GF256: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Fields:
    iTextSharp.text.pdf.qrcode.GF256 QR_CODE_FIELD : Public, Static, InitOnly
    iTextSharp.text.pdf.qrcode.GF256 DATA_MATRIX_FIELD : Public, Static, InitOnly
  Methods:
    GetZero(): PrivateScope, Assembly, HideBySig
    GetOne(): PrivateScope, Assembly, HideBySig
    BuildMonomial(Int32, Int32): PrivateScope, Assembly, HideBySig
    AddOrSubtract(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    Exp(Int32): PrivateScope, Assembly, HideBySig
    Log(Int32): PrivateScope, Assembly, HideBySig
    Inverse(Int32): PrivateScope, Assembly, HideBySig
    Multiply(Int32, Int32): PrivateScope, Assembly, HideBySig
Class iTextSharp.text.pdf.qrcode.GF256Poly: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.qrcode.GF256, Int32[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetCoefficients(): PrivateScope, Assembly, HideBySig
    GetDegree(): PrivateScope, Assembly, HideBySig
    IsZero(): PrivateScope, Assembly, HideBySig
    GetCoefficient(Int32): PrivateScope, Assembly, HideBySig
    EvaluateAt(Int32): PrivateScope, Assembly, HideBySig
    AddOrSubtract(GF256Poly): PrivateScope, Assembly, HideBySig
    Multiply(GF256Poly): PrivateScope, Assembly, HideBySig
    Multiply(Int32): PrivateScope, Assembly, HideBySig
    MultiplyByMonomial(Int32, Int32): PrivateScope, Assembly, HideBySig
    Divide(GF256Poly): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.qrcode.MaskUtil: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    ApplyMaskPenaltyRule1(ByteMatrix): PrivateScope, Public, Static, HideBySig
    ApplyMaskPenaltyRule2(ByteMatrix): PrivateScope, Public, Static, HideBySig
    ApplyMaskPenaltyRule3(ByteMatrix): PrivateScope, Public, Static, HideBySig
    ApplyMaskPenaltyRule4(ByteMatrix): PrivateScope, Public, Static, HideBySig
    GetDataMaskBit(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.qrcode.MatrixUtil: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    ClearMatrix(ByteMatrix): PrivateScope, Public, Static, HideBySig
    BuildMatrix(BitVector, ErrorCorrectionLevel, Int32, Int32, ByteMatrix): PrivateScope, Public, Static, HideBySig
    EmbedBasicPatterns(Int32, ByteMatrix): PrivateScope, Public, Static, HideBySig
    EmbedTypeInfo(ErrorCorrectionLevel, Int32, ByteMatrix): PrivateScope, Public, Static, HideBySig
    MaybeEmbedVersionInfo(Int32, ByteMatrix): PrivateScope, Public, Static, HideBySig
    EmbedDataBits(BitVector, Int32, ByteMatrix): PrivateScope, Public, Static, HideBySig
    FindMSBSet(Int32): PrivateScope, Public, Static, HideBySig
    CalculateBCHCode(Int32, Int32): PrivateScope, Public, Static, HideBySig
    MakeTypeInfoBits(ErrorCorrectionLevel, Int32, BitVector): PrivateScope, Public, Static, HideBySig
    MakeVersionInfoBits(Int32, BitVector): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.qrcode.Mode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Fields:
    iTextSharp.text.pdf.qrcode.Mode TERMINATOR : Public, Static, InitOnly
    iTextSharp.text.pdf.qrcode.Mode NUMERIC : Public, Static, InitOnly
    iTextSharp.text.pdf.qrcode.Mode ALPHANUMERIC : Public, Static, InitOnly
    iTextSharp.text.pdf.qrcode.Mode STRUCTURED_APPEND : Public, Static, InitOnly
    iTextSharp.text.pdf.qrcode.Mode BYTE : Public, Static, InitOnly
    iTextSharp.text.pdf.qrcode.Mode ECI : Public, Static, InitOnly
    iTextSharp.text.pdf.qrcode.Mode KANJI : Public, Static, InitOnly
    iTextSharp.text.pdf.qrcode.Mode FNC1_FIRST_POSITION : Public, Static, InitOnly
    iTextSharp.text.pdf.qrcode.Mode FNC1_SECOND_POSITION : Public, Static, InitOnly
  Methods:
    ForBits(Int32): PrivateScope, Public, Static, HideBySig
    GetCharacterCountBits(Version): PrivateScope, Public, HideBySig
    GetBits(): PrivateScope, Public, HideBySig
    GetName(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.qrcode.QRCode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 NUM_MASK_PATTERNS = 8 : Public, Static, Literal, HasDefault
  Methods:
    GetMode(): PrivateScope, Public, HideBySig
    GetECLevel(): PrivateScope, Public, HideBySig
    GetVersion(): PrivateScope, Public, HideBySig
    GetMatrixWidth(): PrivateScope, Public, HideBySig
    GetMaskPattern(): PrivateScope, Public, HideBySig
    GetNumTotalBytes(): PrivateScope, Public, HideBySig
    GetNumDataBytes(): PrivateScope, Public, HideBySig
    GetNumECBytes(): PrivateScope, Public, HideBySig
    GetNumRSBlocks(): PrivateScope, Public, HideBySig
    GetMatrix(): PrivateScope, Public, HideBySig
    At(Int32, Int32): PrivateScope, Public, HideBySig
    IsValid(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    SetMode(Mode): PrivateScope, Public, HideBySig
    SetECLevel(ErrorCorrectionLevel): PrivateScope, Public, HideBySig
    SetVersion(Int32): PrivateScope, Public, HideBySig
    SetMatrixWidth(Int32): PrivateScope, Public, HideBySig
    SetMaskPattern(Int32): PrivateScope, Public, HideBySig
    SetNumTotalBytes(Int32): PrivateScope, Public, HideBySig
    SetNumDataBytes(Int32): PrivateScope, Public, HideBySig
    SetNumECBytes(Int32): PrivateScope, Public, HideBySig
    SetNumRSBlocks(Int32): PrivateScope, Public, HideBySig
    SetMatrix(ByteMatrix): PrivateScope, Public, HideBySig
    IsValidMaskPattern(Int32): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.qrcode.QRCodeWriter: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(String, Int32, Int32): PrivateScope, Public, HideBySig
    Encode(String, Int32, Int32, IDictionary`2): PrivateScope, Public, HideBySig
Class iTextSharp.text.pdf.qrcode.ReedSolomonEncoder: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.qrcode.GF256): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Int32[], Int32): PrivateScope, Public, HideBySig
Class iTextSharp.text.pdf.qrcode.ReedSolomonException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.qrcode.Version: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    GetVersionNumber(): PrivateScope, Public, HideBySig
    GetAlignmentPatternCenters(): PrivateScope, Public, HideBySig
    GetTotalCodewords(): PrivateScope, Public, HideBySig
    GetDimensionForVersion(): PrivateScope, Public, HideBySig
    GetECBlocksForLevel(ErrorCorrectionLevel): PrivateScope, Public, HideBySig
    GetProvisionalVersionForDimension(Int32): PrivateScope, Public, Static, HideBySig
    GetVersionForNumber(Int32): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.qrcode.Version+ECBlocks: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
    Void .ctor(Int32, ECB): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, ECB, ECB): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetECCodewordsPerBlock(): PrivateScope, Public, HideBySig
    GetNumBlocks(): PrivateScope, Public, HideBySig
    GetTotalECCodewords(): PrivateScope, Public, HideBySig
    GetECBlocks(): PrivateScope, Public, HideBySig
Class iTextSharp.text.pdf.qrcode.Version+ECB: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetCount(): PrivateScope, Public, HideBySig
    GetDataCodewords(): PrivateScope, Public, HideBySig
Class iTextSharp.text.pdf.qrcode.WriterException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.RadioCheckField: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.BaseField
    Void .ctor(iTextSharp.text.pdf.PdfWriter, iTextSharp.text.Rectangle, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 TYPE_CHECK = 1 : Public, Static, Literal, HasDefault
    Int32 TYPE_CIRCLE = 2 : Public, Static, Literal, HasDefault
    Int32 TYPE_CROSS = 3 : Public, Static, Literal, HasDefault
    Int32 TYPE_DIAMOND = 4 : Public, Static, Literal, HasDefault
    Int32 TYPE_SQUARE = 5 : Public, Static, Literal, HasDefault
    Int32 TYPE_STAR = 6 : Public, Static, Literal, HasDefault
  Properties:
    Int32 CheckType 'get set' : 
    System.String OnValue 'get set' : 
    Boolean Checked 'get set' : 
    iTextSharp.text.pdf.PdfFormField RadioField 'get ' : 
    iTextSharp.text.pdf.PdfFormField CheckField 'get ' : 
  Methods:
    get_CheckType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CheckType(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OnValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_OnValue(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Checked(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Checked(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetAppearance(Boolean, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAppearanceRadioCircle(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRadioGroup(Boolean, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_RadioField(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CheckField(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.RandomAccessFileOrArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.RandomAccessFileOrArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.io.IRandomAccessSource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 Length 'get ' : 
    Int64 FilePointer 'get ' : 
  Methods:
    CreateView(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateSourceView(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PushBack(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadFully(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadFully(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Skip(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SkipBytes(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReOpen(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Seek(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Seek(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_FilePointer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ReadBoolean(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadByte(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadUnsignedByte(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadShort(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadShortLE(): PrivateScope, Public, HideBySig
    ReadUnsignedShort(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadUnsignedShortLE(): PrivateScope, Public, HideBySig
    ReadChar(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadCharLE(): PrivateScope, Public, HideBySig
    ReadInt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadIntLE(): PrivateScope, Public, HideBySig
    ReadUnsignedInt(): PrivateScope, Public, HideBySig
    ReadUnsignedIntLE(): PrivateScope, Public, HideBySig
    ReadLong(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadLongLE(): PrivateScope, Public, HideBySig
    ReadFloat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadFloatLE(): PrivateScope, Public, HideBySig
    ReadDouble(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadDoubleLE(): PrivateScope, Public, HideBySig
    ReadLine(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadString(Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.RefKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfIndirectReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PRIndirectReference): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Interface iTextSharp.text.pdf.security.IExternalSignature: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetHashAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetEncryptionAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Sign(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.security.AsymmetricAlgorithmSignature: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Security.Cryptography.RSACryptoServiceProvider, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.DSACryptoServiceProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.security.IExternalSignature
  Methods:
    Sign(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashAlgorithm(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEncryptionAlgorithm(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.pdf.security.IExternalSignatureContainer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Sign(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ModifySigningDictionary(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class com.itextpdf.text.pdf.security.ExternalBlankSignatureContainer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfName, iTextSharp.text.pdf.PdfName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.security.IExternalSignatureContainer
  Methods:
    Sign(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ModifySigningDictionary(PdfDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.pdf.security.IXmlLocator: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetDocument(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetDocument(XmlDocument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetEncoding(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.pdf.security.IXpathConstructor: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetXpathExpression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetNamespaceManager(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.security.MakeXmlSignature: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SignXmlDSig(XmlSignatureAppearance, IExternalSignature, KeyInfoClause): PrivateScope, Public, Static, HideBySig
    SignXades(XmlSignatureAppearance, IExternalSignature, X509Certificate[], Boolean): PrivateScope, Public, Static, HideBySig
    SignXadesBes(XmlSignatureAppearance, IExternalSignature, X509Certificate[]): PrivateScope, Public, Static, HideBySig
    SignXadesEpes(XmlSignatureAppearance, IExternalSignature, X509Certificate[]): PrivateScope, Public, Static, HideBySig
    SignXmlDSig(XmlSignatureAppearance, IExternalSignature, X509Certificate[]): PrivateScope, Public, Static, HideBySig
    SignXmlDSig(XmlSignatureAppearance, IExternalSignature, AsymmetricAlgorithm): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.security.PdfSignatureAppDictionary: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SignatureCreator 'set' : 
  Methods:
    set_SignatureCreator(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.security.PdfSignatureBuildProperties: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SignatureCreator 'set' : 
  Methods:
    set_SignatureCreator(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.security.SecurityConstants: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String XMLNS = xmlns : Public, Static, Literal, HasDefault
    System.String XMLNS_XADES = xmlns:xades : Public, Static, Literal, HasDefault
    System.String XMLNS_URI = http://www.w3.org/2000/xmlns/ : Public, Static, Literal, HasDefault
    System.String XMLDSIG_URI = http://www.w3.org/2000/09/xmldsig# : Public, Static, Literal, HasDefault
    System.String XADES_132_URI = http://uri.etsi.org/01903/v1.3.2# : Public, Static, Literal, HasDefault
    System.String XMLDSIG_URI_C14N = http://www.w3.org/TR/2001/REC-xml-c14n-20010315 : Public, Static, Literal, HasDefault
    System.String XMLDSIG_URI_RSA_SHA1 = http://www.w3.org/2000/09/xmldsig#rsa-sha1 : Public, Static, Literal, HasDefault
    System.String XMLDSIG_URI_DSA_SHA1 = http://www.w3.org/2000/09/xmldsig#dsa-sha1 : Public, Static, Literal, HasDefault
    System.String XMLDSIG_URI_ENVELOPED = http://www.w3.org/2000/09/xmldsig#enveloped-signature : Public, Static, Literal, HasDefault
    System.String XMLDSIG_URI_XPATH_FILTER2 = http://www.w3.org/2002/06/xmldsig-filter2 : Public, Static, Literal, HasDefault
    System.String XMLDSIG_URI_SHA1 = http://www.w3.org/2000/09/xmldsig#sha1 : Public, Static, Literal, HasDefault
    System.String SignedProperties_Type = http://uri.etsi.org/01903#SignedProperties : Public, Static, Literal, HasDefault
    System.String OIDAsURN = OIDAsURN : Public, Static, Literal, HasDefault
    System.String OID_DSA_SHA1 = urn:oid:1.2.840.10040.4.3 : Public, Static, Literal, HasDefault
    System.String OID_DSA_SHA1_DESC = ANSI X9.57 DSA signature generated with SHA-1 hash (DSA x9.30) : Public, Static, Literal, HasDefault
    System.String OID_RSA_SHA1 = urn:oid:1.2.840.113549.1.1.5 : Public, Static, Literal, HasDefault
    System.String OID_RSA_SHA1_DESC = RSA (PKCS #1 v1.5) with SHA-1 signature : Public, Static, Literal, HasDefault
    System.String DSA = DSA : Public, Static, Literal, HasDefault
    System.String RSA = RSA : Public, Static, Literal, HasDefault
    System.String SHA1 = SHA1 : Public, Static, Literal, HasDefault
    System.String DigestMethod = DigestMethod : Public, Static, Literal, HasDefault
    System.String DigestValue = DigestValue : Public, Static, Literal, HasDefault
    System.String Signature = Signature : Public, Static, Literal, HasDefault
    System.String SignatureValue = SignatureValue : Public, Static, Literal, HasDefault
    System.String X509SerialNumber = X509SerialNumber : Public, Static, Literal, HasDefault
    System.String X509IssuerName = X509IssuerName : Public, Static, Literal, HasDefault
    System.String Algorithm = Algorithm : Public, Static, Literal, HasDefault
    System.String Id = Id : Public, Static, Literal, HasDefault
    System.String ObjectReference = ObjectReference : Public, Static, Literal, HasDefault
    System.String Target = Target : Public, Static, Literal, HasDefault
    System.String Qualifier = Qualifier : Public, Static, Literal, HasDefault
    System.String XADES_Encoding = xades:Encoding : Public, Static, Literal, HasDefault
    System.String XADES_MimeType = xades:MimeType : Public, Static, Literal, HasDefault
    System.String XADES_Description = xades:Description : Public, Static, Literal, HasDefault
    System.String XADES_DataObjectFormat = xades:DataObjectFormat : Public, Static, Literal, HasDefault
    System.String XADES_SignedDataObjectProperties = xades:SignedDataObjectProperties : Public, Static, Literal, HasDefault
    System.String XADES_IssuerSerial = xades:IssuerSerial : Public, Static, Literal, HasDefault
    System.String XADES_CertDigest = xades:CertDigest : Public, Static, Literal, HasDefault
    System.String XADES_Cert = xades:Cert : Public, Static, Literal, HasDefault
    System.String XADES_SigningCertificate = xades:SigningCertificate : Public, Static, Literal, HasDefault
    System.String XADES_SigningTime = xades:SigningTime : Public, Static, Literal, HasDefault
    System.String XADES_SignedSignatureProperties = xades:SignedSignatureProperties : Public, Static, Literal, HasDefault
    System.String XADES_SignedProperties = xades:SignedProperties : Public, Static, Literal, HasDefault
    System.String XADES_QualifyingProperties = xades:QualifyingProperties : Public, Static, Literal, HasDefault
    System.String XADES_SignaturePolicyIdentifier = xades:SignaturePolicyIdentifier : Public, Static, Literal, HasDefault
    System.String XADES_SignaturePolicyId = xades:SignaturePolicyId : Public, Static, Literal, HasDefault
    System.String XADES_SigPolicyId = xades:SigPolicyId : Public, Static, Literal, HasDefault
    System.String XADES_Identifier = xades:Identifier : Public, Static, Literal, HasDefault
    System.String XADES_SigPolicyHash = xades:SigPolicyHash : Public, Static, Literal, HasDefault
    System.String Reference_ = Reference- : Public, Static, Literal, HasDefault
    System.String SignedProperties_ = SignedProperties- : Public, Static, Literal, HasDefault
    System.String Signature_ = Signature- : Public, Static, Literal, HasDefault
    System.String SigningTimeFormat = yyyy-MM-dd'T'HH:mm:sszzz : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.security.SignaturePolicyInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, Byte[], System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String PolicyIdentifier 'get ' : 
    Byte[] PolicyHash 'get ' : 
    System.String PolicyDigestAlgorithm 'get ' : 
    System.String PolicyUri 'get ' : 
  Methods:
    get_PolicyIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    get_PolicyHash(): PrivateScope, Public, HideBySig, SpecialName
    get_PolicyDigestAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_PolicyUri(): PrivateScope, Public, HideBySig, SpecialName
Class iTextSharp.text.pdf.SequenceList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    Expand(String, Int32): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.ShadingColor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.ExtendedColor
    Void .ctor(iTextSharp.text.pdf.PdfShadingPattern): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfShadingPattern PdfShadingPattern 'get ' : 
  Methods:
    get_PdfShadingPattern(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.SimpleBookmark: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    iTextSharp.text.xml.simpleparser.ISimpleXMLDocHandler
  Methods:
    GetBookmark(PdfReader): PrivateScope, Public, Static, HideBySig
    GetBookmark(PdfReader, PdfDictionary, Boolean): PrivateScope, Public, Static, HideBySig
    EliminatePages(IList`1, Int32[]): PrivateScope, Public, Static, HideBySig
    ShiftPageNumbers(IList`1, Int32, Int32[]): PrivateScope, Public, Static, HideBySig
    GetVal(Dictionary`2, String): PrivateScope, Public, Static, HideBySig
    CreateOutlineAction(PdfDictionary, Dictionary`2, PdfWriter, Boolean): PrivateScope, Assembly, Static, HideBySig
    IterateOutlines(PdfWriter, PdfIndirectReference, IList`1, Boolean): PrivateScope, Public, Static, HideBySig
    ExportToXMLNode(IList`1, TextWriter, Int32, Boolean): PrivateScope, Public, Static, HideBySig
    ExportToXML(IList`1, Stream, String, Boolean): PrivateScope, Public, Static, HideBySig
    ExportToXML(IList`1, TextWriter, String, Boolean): PrivateScope, Public, Static, HideBySig
    ImportFromXML(Stream): PrivateScope, Public, Static, HideBySig
    ImportFromXML(TextReader): PrivateScope, Public, Static, HideBySig
    EscapeBinaryString(String): PrivateScope, Public, Static, HideBySig
    UnEscapeBinaryString(String): PrivateScope, Public, Static, HideBySig
    EndDocument(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndElement(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    StartDocument(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    StartElement(String, IDictionary`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Text(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.SimpleNamedDestination: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    iTextSharp.text.xml.simpleparser.ISimpleXMLDocHandler
  Methods:
    GetNamedDestination(PdfReader, Boolean): PrivateScope, Public, Static, HideBySig
    ExportToXML(Dictionary`2, Stream, String, Boolean): PrivateScope, Public, Static, HideBySig
    ExportToXML(Dictionary`2, TextWriter, String, Boolean): PrivateScope, Public, Static, HideBySig
    ImportFromXML(Stream): PrivateScope, Public, Static, HideBySig
    ImportFromXML(TextReader): PrivateScope, Public, Static, HideBySig
    CreateDestinationArray(String, PdfWriter): PrivateScope, Assembly, Static, HideBySig
    OutputNamedDestinationAsNames(Dictionary`2, PdfWriter): PrivateScope, Public, Static, HideBySig
    OutputNamedDestinationAsStrings(Dictionary`2, PdfWriter): PrivateScope, Public, Static, HideBySig
    EscapeBinaryString(String): PrivateScope, Public, Static, HideBySig
    UnEscapeBinaryString(String): PrivateScope, Public, Static, HideBySig
    EndDocument(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndElement(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    StartDocument(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    StartElement(String, IDictionary`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Text(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.SpotColor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.ExtendedColor
    Void .ctor(iTextSharp.text.pdf.PdfSpotColor, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfSpotColor PdfSpotColor 'get ' : 
    Single Tint 'get ' : 
  Methods:
    get_PdfSpotColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Tint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.StampContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfContentByte
    Void .ctor(iTextSharp.text.pdf.PdfStamperImp, PageStamp): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    PageStamp ps : Assembly
    iTextSharp.text.pdf.PageResources pageResources : Assembly
  Properties:
    iTextSharp.text.pdf.PdfContentByte Duplicate 'get ' : 
    iTextSharp.text.pdf.PageResources PageResources 'get ' : 
  Methods:
    SetAction(PdfAction, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig
    get_Duplicate(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_PageResources(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    AddAnnotation(PdfAnnotation): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class iTextSharp.text.pdf.crypto.StandardDecryption: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[], Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Update(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Finish(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.StringUtils: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    EscapeString(Byte[]): PrivateScope, Public, Static, HideBySig
    EscapeString(Byte[], ByteBuffer): PrivateScope, Public, Static, HideBySig
    ConvertCharsToBytes(Char[]): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.TextField: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.BaseField
    Void .ctor(iTextSharp.text.pdf.PdfWriter, iTextSharp.text.Rectangle, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DefaultText 'get set' : 
    System.String[] Choices 'get set' : 
    System.String[] ChoiceExports 'get set' : 
    Int32 ChoiceSelection 'get set' : 
    System.Collections.Generic.List`1[System.Int32] ChoiceSelections 'get set' : 
    Int32 VisibleTopChoice 'get set' : 
    Int32 TopFirst 'get ' : 
    System.Collections.Generic.List`1[iTextSharp.text.pdf.BaseFont] SubstitutionFonts 'get set' : 
    iTextSharp.text.pdf.BaseFont ExtensionFont 'get set' : 
  Methods:
    RemoveCRLF(String): PrivateScope, Public, Static, HideBySig
    ObfuscatePassword(String): PrivateScope, Public, Static, HideBySig
    GetAppearance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetListAppearance(): PrivateScope, Assembly, HideBySig
    GetTextField(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetComboField(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetListField(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_DefaultText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DefaultText(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Choices(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Choices(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ChoiceExports(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ChoiceExports(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ChoiceSelection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ChoiceSelection(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ChoiceSelections(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ChoiceSelections(List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_VisibleTopChoice(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_VisibleTopChoice(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddChoiceSelection(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_TopFirst(): PrivateScope, Assembly, HideBySig, SpecialName
    SetExtraMargin(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_SubstitutionFonts(List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SubstitutionFonts(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ExtensionFont(BaseFont): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExtensionFont(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.TrueTypeFontSubSet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, iTextSharp.text.pdf.RandomAccessFileOrArray, System.util.collections.HashSet2`1[System.Int32], Int32, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String[] tableNamesSimple : Assembly, Static
    System.String[] tableNamesCmap : Assembly, Static
    System.String[] tableNamesExtra : Assembly, Static
    Int32[] entrySelectors : Assembly, Static
    Int32 TABLE_CHECKSUM : Assembly, Static
    Int32 TABLE_OFFSET : Assembly, Static
    Int32 TABLE_LENGTH : Assembly, Static
    Int32 HEAD_LOCA_FORMAT_OFFSET : Assembly, Static
    Int32 ARG_1_AND_2_ARE_WORDS : Assembly, Static
    Int32 WE_HAVE_A_SCALE : Assembly, Static
    Int32 MORE_COMPONENTS : Assembly, Static
    Int32 WE_HAVE_AN_X_AND_Y_SCALE : Assembly, Static
    Int32 WE_HAVE_A_TWO_BY_TWO : Assembly, Static
  Methods:
    Process(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.TrueTypeFontUnicode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.TrueTypeFont
    Void .ctor(System.String, System.String, Boolean, Byte[], Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[System.Int32[]]
  Methods:
    GetWidth(Int32): PrivateScope, Public, Virtual, HideBySig
    GetWidth(String): PrivateScope, Public, Virtual, HideBySig
    GetToUnicode(Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToHex(Int32): PrivateScope, Assembly, Static, HideBySig
    GetCIDFontType2(PdfIndirectReference, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFontBaseType(PdfIndirectReference, String, PdfIndirectReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCharFromGlyphId(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Compare(Int32[], Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteFont(PdfWriter, PdfIndirectReference, Object[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetFullFontStream(): PrivateScope, Public, Virtual, HideBySig
    ConvertToBytes(String): PrivateScope, Public, Virtual, HideBySig
    ConvertToBytes(Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetMetricsTT(Int32): PrivateScope, Public, Virtual, HideBySig
    CharExists(Int32): PrivateScope, Public, Virtual, HideBySig
    SetCharAdvance(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GetCharBBox(Int32): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.Type1Font: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :iTextSharp.text.pdf.BaseFont
    Void .ctor(System.String, System.String, Boolean, Byte[], Byte[], Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String PostscriptFontName 'get set' : 
    System.String[][] FullFontName 'get ' : 
    System.String[][] AllNameEntries 'get ' : 
    System.String[][] FamilyFontName 'get ' : 
  Methods:
    GetRawWidth(Int32, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetKerning(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Process(RandomAccessFileOrArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFullFontStream(): PrivateScope, Public, Virtual, HideBySig
    GetFontDescriptor(PdfIndirectReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteFont(PdfWriter, PdfIndirectReference, Object[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetFontDescriptor(Int32, Single): PrivateScope, Public, Virtual, HideBySig
    SetFontDescriptor(Int32, Single): PrivateScope, Public, Virtual, HideBySig
    get_PostscriptFontName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_PostscriptFontName(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullFontName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AllNameEntries(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FamilyFontName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    HasKernPairs(): PrivateScope, Public, Virtual, HideBySig
    SetKerning(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.Type3Font: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.BaseFont
    Void .ctor(iTextSharp.text.pdf.PdfWriter, Char[], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfWriter, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String[][] FamilyFontName 'get ' : 
    System.String[][] FullFontName 'get ' : 
    System.String[][] AllNameEntries 'get ' : 
    System.String PostscriptFontName 'get set' : 
  Methods:
    DefineGlyph(Char, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_FamilyFontName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetFontDescriptor(Int32, Single): PrivateScope, Public, Virtual, HideBySig
    get_FullFontName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AllNameEntries(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetKerning(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_PostscriptFontName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_PostscriptFontName(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetRawWidth(Int32, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    HasKernPairs(): PrivateScope, Public, Virtual, HideBySig
    SetKerning(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteFont(PdfWriter, PdfIndirectReference, Object[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetFullFontStream(): PrivateScope, Public, Virtual, HideBySig
    ConvertToBytes(String): PrivateScope, Public, Virtual, HideBySig
    ConvertToBytes(Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetWidth(Int32): PrivateScope, Public, Virtual, HideBySig
    GetWidth(String): PrivateScope, Public, Virtual, HideBySig
    GetCharBBox(Int32): PrivateScope, Public, Virtual, HideBySig
    CharExists(Int32): PrivateScope, Public, Virtual, HideBySig
    SetCharAdvance(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.Type3Glyph: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :iTextSharp.text.pdf.PdfContentByte
    Void .ctor(iTextSharp.text.pdf.PdfWriter, iTextSharp.text.pdf.PageResources, Single, Single, Single, Single, Single, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PageResources PageResources 'get ' : 
  Methods:
    get_PageResources(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    AddImage(Image, Single, Single, Single, Single, Single, Single, Boolean): PrivateScope, Public, Virtual, HideBySig
    GetDuplicate(): PrivateScope, Public, HideBySig
Class iTextSharp.text.pdf.VerticalText: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfContentByte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 NO_MORE_TEXT : Public, Static
    Int32 NO_MORE_COLUMN : Public, Static
  Properties:
    Single Leading 'get set' : 
    Single OriginX 'get ' : 
    Single OriginY 'get ' : 
    Int32 MaxLines 'get set' : 
    Single Height 'get set' : 
    Int32 Alignment 'get set' : 
  Methods:
    AddText(Phrase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddText(Chunk): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetVerticalLayout(Single, Single, Single, Int32, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Leading(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Leading(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Go(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Go(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(PdfLine, PdfContentByte, PdfContentByte): PrivateScope, Assembly, HideBySig
    SetOrigin(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_OriginX(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OriginY(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MaxLines(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MaxLines(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Height(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Alignment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Alignment(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.XfaForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.pdf.PdfReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String XFA_DATA_SCHEMA = http://www.xfa.org/schema/xfa-data/1.0/ : Public, Static, Literal, HasDefault
  Properties:
    Boolean XfaPresent 'get set' : 
    System.Xml.XmlDocument DomDocument 'get set' : 
    iTextSharp.text.pdf.PdfReader Reader 'get set' : 
    Boolean Changed 'get set' : 
    Xml2SomTemplate TemplateSom 'get set' : 
    Xml2SomDatasets DatasetsSom 'get set' : 
    AcroFieldsSearch AcroFieldsSom 'get set' : 
    System.Xml.XmlNode DatasetsNode 'get ' : 
  Methods:
    GetXfaObject(PdfReader): PrivateScope, Public, Static, HideBySig
    ExtractXFANodes(XmlDocument): PrivateScope, Public, Static, HideBySig
    SetXfa(XfaForm, PdfReader, PdfWriter): PrivateScope, Public, Static, HideBySig
    SetXfa(PdfWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SerializeDoc(XmlNode): PrivateScope, Public, Static, HideBySig
    get_XfaPresent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_XfaPresent(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DomDocument(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DomDocument(XmlDocument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    FindFieldName(String, AcroFields): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FindDatasetsName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FindDatasetsNode(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNodeText(XmlNode): PrivateScope, Public, Static, HideBySig
    SetNodeText(XmlNode, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Reader(PdfReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Reader(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Changed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Changed(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TemplateSom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TemplateSom(Xml2SomTemplate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DatasetsSom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DatasetsSom(Xml2SomDatasets): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AcroFieldsSom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AcroFieldsSom(AcroFieldsSearch): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DatasetsNode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    FillXfaForm(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FillXfaForm(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FillXfaForm(Stream, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FillXfaForm(XmlReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FillXfaForm(XmlReader, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FillXfaForm(XmlNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FillXfaForm(XmlNode, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.XfaForm+InverseStore: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DefaultName 'get ' : 
  Methods:
    get_DefaultName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsSimilar(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.XfaForm+Stack2`1[T]: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  Type parameter: T
  :System.Collections.Generic.List`1[T]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Peek(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Pop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Push(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Empty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.XfaForm+Xml2Som: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[System.String] Order 'get set' : 
    System.Collections.Generic.Dictionary`2[System.String,System.Xml.XmlNode] Name2Node 'get set' : 
    System.Collections.Generic.Dictionary`2[System.String,iTextSharp.text.pdf.XfaForm+InverseStore] InverseSearch 'get set' : 
  Methods:
    EscapeSom(String): PrivateScope, Public, Static, HideBySig
    UnescapeSom(String): PrivateScope, Public, Static, HideBySig
    GetShortName(String): PrivateScope, Public, Static, HideBySig
    InverseSearchAdd(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InverseSearchAdd(Dictionary`2, Stack2`1, String): PrivateScope, Public, Static, HideBySig
    InverseSearchGlobal(List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SplitParts(String): PrivateScope, Public, Static, HideBySig
    get_Order(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Order(List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name2Node(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name2Node(Dictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_InverseSearch(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_InverseSearch(Dictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.XfaForm+Xml2SomDatasets: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :iTextSharp.text.pdf.XfaForm+Xml2Som
    Void .ctor(System.Xml.XmlNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    InsertNode(XmlNode, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.XfaForm+AcroFieldsSearch: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :iTextSharp.text.pdf.XfaForm+Xml2Som
    Void .ctor(System.Collections.Generic.ICollection`1[System.String]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.Dictionary`2[System.String,System.String] AcroShort2LongName 'get set' : 
  Methods:
    get_AcroShort2LongName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AcroShort2LongName(Dictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.XfaForm+Xml2SomTemplate: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :iTextSharp.text.pdf.XfaForm+Xml2Som
    Void .ctor(System.Xml.XmlNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean DynamicForm 'get set' : 
  Methods:
    GetFieldType(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_DynamicForm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DynamicForm(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.XfaXmlLocator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfStamper): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.security.IXmlLocator
  Methods:
    GetDocument(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDocument(XmlDocument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEncoding(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEncoding(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.XfaXpathConstructor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(XdpPackage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.security.IXpathConstructor
  Methods:
    GetXpathExpression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNamespaceManager(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct iTextSharp.text.pdf.XfaXpathConstructor+XdpPackage: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XdpPackage Config = 0 : Public, Static, Literal, HasDefault
    XdpPackage ConnectionSet = 1 : Public, Static, Literal, HasDefault
    XdpPackage Datasets = 2 : Public, Static, Literal, HasDefault
    XdpPackage LocaleSet = 3 : Public, Static, Literal, HasDefault
    XdpPackage Pdf = 4 : Public, Static, Literal, HasDefault
    XdpPackage SourceSet = 5 : Public, Static, Literal, HasDefault
    XdpPackage Stylesheet = 6 : Public, Static, Literal, HasDefault
    XdpPackage Template = 7 : Public, Static, Literal, HasDefault
    XdpPackage Xdc = 8 : Public, Static, Literal, HasDefault
    XdpPackage Xfdf = 9 : Public, Static, Literal, HasDefault
    XdpPackage Xmpmeta = 10 : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.XfdfReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.xml.simpleparser.ISimpleXMLDocHandler
  Fields:
    System.Collections.Generic.Dictionary`2[System.String,System.String] fields : Assembly
    System.String fileSpec : Assembly
  Properties:
    System.Collections.Generic.Dictionary`2[System.String,System.String] Fields 'get ' : 
    System.String FileSpec 'get ' : 
  Methods:
    get_Fields(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetField(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldValue(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetListValues(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_FileSpec(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    StartElement(String, IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndElement(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    StartDocument(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndDocument(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Text(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.XfdfReader+Stackr: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :System.Collections.Generic.List`1[System.String]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Push(String): PrivateScope, Assembly, HideBySig
    Pop(): PrivateScope, Assembly, HideBySig
Class iTextSharp.text.pdf.XmlSignatureAppearance: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfStamperImp): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetWriter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStamper(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetStamper(PdfStamper): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCertificate(X509Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCertificate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDescription(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDescription(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMimeType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMimeType(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSignDate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSignDate(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetXmlLocator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetXmlLocator(IXmlLocator): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetXpathConstructor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetXpathConstructor(IXpathConstructor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.RectangleReadOnly: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.Rectangle
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Rectangle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Top 'set' : 
    Int32 Border 'set' : 
    Single GrayFill 'set' : 
    Single Left 'set' : 
    Single Right 'set' : 
    Single Bottom 'set' : 
    iTextSharp.text.BaseColor BorderColorBottom 'set' : 
    iTextSharp.text.BaseColor BorderColorTop 'set' : 
    iTextSharp.text.BaseColor BorderColorLeft 'set' : 
    iTextSharp.text.BaseColor BorderColorRight 'set' : 
    Single BorderWidth 'set' : 
    iTextSharp.text.BaseColor BorderColor 'set' : 
    iTextSharp.text.BaseColor BackgroundColor 'set' : 
    Int32 Rotation 'set' : 
    Single BorderWidthLeft 'set' : 
    Single BorderWidthRight 'set' : 
    Single BorderWidthTop 'set' : 
    Single BorderWidthBottom 'set' : 
    Boolean UseVariableBorders 'set' : 
  Methods:
    CloneNonPositionParameters(Rectangle): PrivateScope, Public, Virtual, HideBySig
    SoftCloneNonPositionParameters(Rectangle): PrivateScope, Public, Virtual, HideBySig
    Normalize(): PrivateScope, Public, Virtual, HideBySig
    set_Top(Single): PrivateScope, Public, Virtual, HideBySig, SpecialName
    EnableBorderSide(Int32): PrivateScope, Public, Virtual, HideBySig
    DisableBorderSide(Int32): PrivateScope, Public, Virtual, HideBySig
    set_Border(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_GrayFill(Single): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Single): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Single): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Single): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_BorderColorBottom(BaseColor): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_BorderColorTop(BaseColor): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_BorderColorLeft(BaseColor): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_BorderColorRight(BaseColor): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_BorderWidth(Single): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_BorderColor(BaseColor): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_BackgroundColor(BaseColor): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Rotation(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_BorderWidthLeft(Single): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_BorderWidthRight(Single): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_BorderWidthTop(Single): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_BorderWidthBottom(Single): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_UseVariableBorders(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.RomanList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.List
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(IElement): PrivateScope, Public, Virtual, HideBySig
    CloneShallow(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.SpecialSymbol: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Index(String): PrivateScope, Public, Static, HideBySig
    Get(Char, Font): PrivateScope, Public, Static, HideBySig
    GetCorrespondingSymbol(Char): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.TabSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.List`1[iTextSharp.text.TabStop]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.List`1[iTextSharp.text.TabStop], Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single DEFAULT_TAB_INTERVAL = 36 : Public, Static, Literal, HasDefault
  Properties:
    System.Collections.Generic.List`1[iTextSharp.text.TabStop] TabStops 'get set' : 
    Single TabInterval 'get set' : 
  Methods:
    getTabStopNewInstance(Single, TabSettings): PrivateScope, Public, Static, HideBySig
    get_TabStops(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TabStops(List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TabInterval(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TabInterval(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetTabStopNewInstance(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.TabSplitCharacter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.ISplitCharacter
  Fields:
    iTextSharp.text.ISplitCharacter TAB : Public, Static, InitOnly
  Methods:
    IsSplitCharacter(Int32, Int32, Int32, Char[], PdfChunk[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.TabStop: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, iTextSharp.text.pdf.draw.IDrawInterface): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Alignment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Alignment, Char): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, iTextSharp.text.pdf.draw.IDrawInterface, Alignment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, iTextSharp.text.pdf.draw.IDrawInterface, Alignment, Char): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.TabStop): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Position 'get set' : 
    Alignment Align 'get set' : 
    iTextSharp.text.pdf.draw.IDrawInterface Leader 'get set' : 
    Char AnchorChar 'get set' : 
  Methods:
    NewInstance(Single, Single): PrivateScope, Public, Static, HideBySig
    get_Position(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Position(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Align(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Align(Alignment): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Leader(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Leader(IDrawInterface): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AnchorChar(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AnchorChar(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetPosition(Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct iTextSharp.text.TabStop+Alignment: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Alignment LEFT = 0 : Public, Static, Literal, HasDefault
    Alignment RIGHT = 1 : Public, Static, Literal, HasDefault
    Alignment CENTER = 2 : Public, Static, Literal, HasDefault
    Alignment ANCHOR = 3 : Public, Static, Literal, HasDefault
Class iTextSharp.text.Utilities: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetKeySet(Dictionary`2): PrivateScope, Public, Static, HideBySig
    AddToArray(Object[][], Object[]): PrivateScope, Public, Static, HideBySig
    CheckTrueOrFalse(Properties, String): PrivateScope, Public, Static, HideBySig
    ToURL(String): PrivateScope, Public, Static, HideBySig
    UnEscapeURL(String): PrivateScope, Public, Static, HideBySig
    Skip(Stream, Int32): PrivateScope, Public, Static, HideBySig
    MillimetersToPoints(Single): PrivateScope, Public, Static, HideBySig
    MillimetersToInches(Single): PrivateScope, Public, Static, HideBySig
    PointsToMillimeters(Single): PrivateScope, Public, Static, HideBySig
    PointsToInches(Single): PrivateScope, Public, Static, HideBySig
    InchesToMillimeters(Single): PrivateScope, Public, Static, HideBySig
    InchesToPoints(Single): PrivateScope, Public, Static, HideBySig
    IsSurrogateHigh(Char): PrivateScope, Public, Static, HideBySig
    IsSurrogateLow(Char): PrivateScope, Public, Static, HideBySig
    IsSurrogatePair(String, Int32): PrivateScope, Public, Static, HideBySig
    IsSurrogatePair(Char[], Int32): PrivateScope, Public, Static, HideBySig
    ConvertToUtf32(Char, Char): PrivateScope, Public, Static, HideBySig
    ConvertToUtf32(Char[], Int32): PrivateScope, Public, Static, HideBySig
    ConvertToUtf32(String, Int32): PrivateScope, Public, Static, HideBySig
    ConvertFromUtf32(Int32): PrivateScope, Public, Static, HideBySig
    ReadFileToString(String): PrivateScope, Public, Static, HideBySig
    ConvertToHex(Byte[]): PrivateScope, Public, Static, HideBySig
    ComputeTabSpace(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    ComputeTabSpace(Single, Single): PrivateScope, Public, Static, HideBySig
    Max(Single[]): PrivateScope, Public, Static, HideBySig
    Min(Single[]): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.xml.ParserBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    Parse(XmlDocument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Parse(XmlTextReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Parse(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    StartElement(String, String, String, Hashtable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndElement(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Characters(String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.xml.simpleparser.EntitiesToSymbol: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Get(String, Font): PrivateScope, Public, Static, HideBySig
    GetCorrespondingSymbol(String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.xml.simpleparser.EntitiesToUnicode: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    DecodeEntity(String): PrivateScope, Public, Static, HideBySig
    DecodeString(String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.xml.simpleparser.IanaEncodings: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetEncodingNumber(String): PrivateScope, Public, Static, HideBySig
    GetEncodingEncoding(String): PrivateScope, Public, Static, HideBySig
Interface iTextSharp.text.xml.simpleparser.ISimpleXMLDocHandlerComment: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Comment(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.xml.simpleparser.SimpleXMLParser: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    Parse(ISimpleXMLDocHandler, ISimpleXMLDocHandlerComment, TextReader, Boolean): PrivateScope, Public, Static, HideBySig
    Parse(ISimpleXMLDocHandler, Stream): PrivateScope, Public, Static, HideBySig
    Parse(ISimpleXMLDocHandler, TextReader): PrivateScope, Public, Static, HideBySig
    EscapeXML(String, Boolean): PrivateScope, Public, Static, HideBySig
Class System.util.Properties: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
    System.String Item [System.String] 'get set' : 
    KeyCollection Keys 'get ' : 
  Methods:
    Remove(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ContainsKey(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddAll(Properties): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Keys(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Load(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.xml.xmp.XmpSchema: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit (Obsolete)
  :System.util.Properties
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Xmlns 'get ' : 
    System.String Item [System.String] 'set' : 
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_Xmlns(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddProperty(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Item(String, String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    SetProperty(String, XmpArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetProperty(String, LangAlt): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Escape(String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.xml.xmp.DublinCoreSchema: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :iTextSharp.text.xml.xmp.XmpSchema
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String DEFAULT_XPATH_ID = dc : Public, Static, Literal, HasDefault
    System.String DEFAULT_XPATH_URI = http://purl.org/dc/elements/1.1/ : Public, Static, Literal, HasDefault
    System.String CONTRIBUTOR = dc:contributor : Public, Static, Literal, HasDefault
    System.String COVERAGE = dc:coverage : Public, Static, Literal, HasDefault
    System.String CREATOR = dc:creator : Public, Static, Literal, HasDefault
    System.String DATE = dc:date : Public, Static, Literal, HasDefault
    System.String DESCRIPTION = dc:description : Public, Static, Literal, HasDefault
    System.String FORMAT = dc:format : Public, Static, Literal, HasDefault
    System.String IDENTIFIER = dc:identifier : Public, Static, Literal, HasDefault
    System.String LANGUAGE = dc:language : Public, Static, Literal, HasDefault
    System.String PUBLISHER = dc:publisher : Public, Static, Literal, HasDefault
    System.String RELATION = dc:relation : Public, Static, Literal, HasDefault
    System.String RIGHTS = dc:rights : Public, Static, Literal, HasDefault
    System.String SOURCE = dc:source : Public, Static, Literal, HasDefault
    System.String SUBJECT = dc:subject : Public, Static, Literal, HasDefault
    System.String TITLE = dc:title : Public, Static, Literal, HasDefault
    System.String TYPE = dc:type : Public, Static, Literal, HasDefault
  Methods:
    AddTitle(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddTitle(LangAlt): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddDescription(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddDescription(LangAlt): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSubject(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSubject(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddAuthor(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddAuthor(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPublisher(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPublisher(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.xml.xmp.EncodingNoPreamble: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Text.Encoding
    Void .ctor(System.Text.Encoding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String BodyName 'get ' : 
    Int32 CodePage 'get ' : 
    System.String EncodingName 'get ' : 
    System.String HeaderName 'get ' : 
    Boolean IsBrowserDisplay 'get ' : 
    Boolean IsBrowserSave 'get ' : 
    Boolean IsMailNewsDisplay 'get ' : 
    Boolean IsMailNewsSave 'get ' : 
    System.String WebName 'get ' : 
    Int32 WindowsCodePage 'get ' : 
  Methods:
    GetByteCount(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GetBytes(Char[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    GetCharCount(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GetChars(Byte[], Int32, Int32, Char[], Int32): PrivateScope, Public, Virtual, HideBySig
    GetMaxByteCount(Int32): PrivateScope, Public, Virtual, HideBySig
    GetMaxCharCount(Int32): PrivateScope, Public, Virtual, HideBySig
    get_BodyName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CodePage(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_EncodingName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_HeaderName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsBrowserDisplay(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsBrowserSave(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsMailNewsDisplay(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsMailNewsSave(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_WebName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_WindowsCodePage(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetDecoder(): PrivateScope, Public, Virtual, HideBySig
    GetEncoder(): PrivateScope, Public, Virtual, HideBySig
    GetPreamble(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.xml.xmp.LangAlt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :System.util.Properties
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String DEFAULT = x-default : Public, Static, Literal, HasDefault
  Methods:
    AddLanguage(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.xml.xmp.PdfSchema: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :iTextSharp.text.xml.xmp.XmpSchema
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String DEFAULT_XPATH_ID = pdf : Public, Static, Literal, HasDefault
    System.String DEFAULT_XPATH_URI = http://ns.adobe.com/pdf/1.3/ : Public, Static, Literal, HasDefault
    System.String KEYWORDS = pdf:Keywords : Public, Static, Literal, HasDefault
    System.String VERSION = pdf:PDFVersion : Public, Static, Literal, HasDefault
    System.String PRODUCER = pdf:Producer : Public, Static, Literal, HasDefault
  Methods:
    AddKeywords(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddProducer(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddVersion(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.xml.xmp.XmpArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :System.Collections.Generic.List`1[System.String]
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String UNORDERED = rdf:Bag : Public, Static, Literal, HasDefault
    System.String ORDERED = rdf:Seq : Public, Static, Literal, HasDefault
    System.String ALTERNATIVE = rdf:Alt : Public, Static, Literal, HasDefault
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.xml.xmp.XmpBasicSchema: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :iTextSharp.text.xml.xmp.XmpSchema
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String DEFAULT_XPATH_ID = xmp : Public, Static, Literal, HasDefault
    System.String DEFAULT_XPATH_URI = http://ns.adobe.com/xap/1.0/ : Public, Static, Literal, HasDefault
    System.String ADVISORY = xmp:Advisory : Public, Static, Literal, HasDefault
    System.String BASEURL = xmp:BaseURL : Public, Static, Literal, HasDefault
    System.String CREATEDATE = xmp:CreateDate : Public, Static, Literal, HasDefault
    System.String CREATORTOOL = xmp:CreatorTool : Public, Static, Literal, HasDefault
    System.String IDENTIFIER = xmp:Identifier : Public, Static, Literal, HasDefault
    System.String METADATADATE = xmp:MetadataDate : Public, Static, Literal, HasDefault
    System.String MODIFYDATE = xmp:ModifyDate : Public, Static, Literal, HasDefault
    System.String NICKNAME = xmp:Nickname : Public, Static, Literal, HasDefault
    System.String THUMBNAILS = xmp:Thumbnails : Public, Static, Literal, HasDefault
  Methods:
    AddCreatorTool(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddCreateDate(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddModDate(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddMetaDataDate(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddIdentifiers(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddNickname(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.xml.xmp.XmpMMSchema: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :iTextSharp.text.xml.xmp.XmpSchema
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String DEFAULT_XPATH_ID = xmpMM : Public, Static, Literal, HasDefault
    System.String DEFAULT_XPATH_URI = http://ns.adobe.com/xap/1.0/mm/ : Public, Static, Literal, HasDefault
    System.String DERIVEDFROM = xmpMM:DerivedFrom : Public, Static, Literal, HasDefault
    System.String DOCUMENTID = xmpMM:DocumentID : Public, Static, Literal, HasDefault
    System.String HISTORY = xmpMM:History : Public, Static, Literal, HasDefault
    System.String MANAGEDFROM = xmpMM:ManagedFrom : Public, Static, Literal, HasDefault
    System.String MANAGER = xmpMM:Manager : Public, Static, Literal, HasDefault
    System.String MANAGETO = xmpMM:ManageTo : Public, Static, Literal, HasDefault
    System.String MANAGEUI = xmpMM:ManageUI : Public, Static, Literal, HasDefault
    System.String MANAGERVARIANT = xmpMM:ManagerVariant : Public, Static, Literal, HasDefault
    System.String RENDITIONCLASS = xmpMM:RenditionClass : Public, Static, Literal, HasDefault
    System.String RENDITIONPARAMS = xmpMM:RenditionParams : Public, Static, Literal, HasDefault
    System.String VERSIONID = xmpMM:VersionID : Public, Static, Literal, HasDefault
    System.String VERSIONS = xmpMM:Versions : Public, Static, Literal, HasDefault
Class iTextSharp.text.xml.xmp.XmpReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String EXTRASPACE =                                                                                                    
 : Public, Static, Literal, HasDefault
    System.String XPACKET_PI_BEGIN = <?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
 : Public, Static, Literal, HasDefault
    System.String XPACKET_PI_END_W = <?xpacket end="w"?> : Public, Static, Literal, HasDefault
  Methods:
    ReplaceNode(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReplaceDescriptionAttribute(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetNodeText(XmlDocument, XmlNode, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SerializeDoc(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.xml.xmp.XmpWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream, System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, iTextSharp.text.pdf.PdfDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Collections.Generic.IDictionary`2[System.String,System.String]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String UTF8 : Public, Static
    System.String UTF16 : Public, Static
    System.String UTF16BE : Public, Static
    System.String UTF16LE : Public, Static
  Properties:
    iTextSharp.xmp.IXmpMeta XmpMeta 'get ' : 
    Boolean ReadOnly 'get set' : 
    System.String About 'get set' : 
  Methods:
    get_XmpMeta(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ReadOnly(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_About(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_About(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddRdfDescription(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    AddRdfDescription(XmpSchema): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetProperty(String, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AppendArrayItem(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AppendOrderedArrayItem(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AppendAlternateArrayItem(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Serialize(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddDocInfoProperty(Object, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.xml.xmp.DublinCoreProperties: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String CONTRIBUTOR : Public, Static, InitOnly
    System.String COVERAGE : Public, Static, InitOnly
    System.String CREATOR : Public, Static, InitOnly
    System.String DATE : Public, Static, InitOnly
    System.String DESCRIPTION : Public, Static, InitOnly
    System.String FORMAT : Public, Static, InitOnly
    System.String IDENTIFIER : Public, Static, InitOnly
    System.String LANGUAGE : Public, Static, InitOnly
    System.String PUBLISHER : Public, Static, InitOnly
    System.String RELATION : Public, Static, InitOnly
    System.String RIGHTS : Public, Static, InitOnly
    System.String SOURCE : Public, Static, InitOnly
    System.String SUBJECT : Public, Static, InitOnly
    System.String TITLE : Public, Static, InitOnly
    System.String TYPE : Public, Static, InitOnly
  Methods:
    AddTitle(IXmpMeta, String): PrivateScope, Public, Static, HideBySig
    SetTitle(IXmpMeta, String, String, String): PrivateScope, Public, Static, HideBySig
    AddDescription(IXmpMeta, String): PrivateScope, Public, Static, HideBySig
    SetDescription(IXmpMeta, String, String, String): PrivateScope, Public, Static, HideBySig
    AddSubject(IXmpMeta, String): PrivateScope, Public, Static, HideBySig
    SetSubject(IXmpMeta, String[]): PrivateScope, Public, Static, HideBySig
    AddAuthor(IXmpMeta, String): PrivateScope, Public, Static, HideBySig
    SetAuthor(IXmpMeta, String[]): PrivateScope, Public, Static, HideBySig
    AddPublisher(IXmpMeta, String): PrivateScope, Public, Static, HideBySig
    SetPublisher(IXmpMeta, String[]): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.xml.xmp.PdfProperties: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String KEYWORDS : Public, Static, InitOnly
    System.String VERSION : Public, Static, InitOnly
    System.String PRODUCER : Public, Static, InitOnly
    System.String PART : Public, Static, InitOnly
  Methods:
    SetKeywords(IXmpMeta, String): PrivateScope, Public, Static, HideBySig
    SetProducer(IXmpMeta, String): PrivateScope, Public, Static, HideBySig
    SetVersion(IXmpMeta, String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.xml.xmp.XmpBasicProperties: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ADVISORY : Public, Static, InitOnly
    System.String BASEURL : Public, Static, InitOnly
    System.String CREATEDATE : Public, Static, InitOnly
    System.String CREATORTOOL : Public, Static, InitOnly
    System.String IDENTIFIER : Public, Static, InitOnly
    System.String METADATADATE : Public, Static, InitOnly
    System.String MODIFYDATE : Public, Static, InitOnly
    System.String NICKNAME : Public, Static, InitOnly
    System.String THUMBNAILS : Public, Static, InitOnly
  Methods:
    SetCreatorTool(IXmpMeta, String): PrivateScope, Public, Static, HideBySig
    SetCreateDate(IXmpMeta, String): PrivateScope, Public, Static, HideBySig
    SetModDate(IXmpMeta, String): PrivateScope, Public, Static, HideBySig
    SetMetaDataDate(IXmpMeta, String): PrivateScope, Public, Static, HideBySig
    SetIdentifiers(IXmpMeta, String[]): PrivateScope, Public, Static, HideBySig
    SetNickname(IXmpMeta, String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.xml.xmp.XmpMMProperties: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String DERIVEDFROM : Public, Static, InitOnly
    System.String DOCUMENTID : Public, Static, InitOnly
    System.String HISTORY : Public, Static, InitOnly
    System.String MANAGEDFROM : Public, Static, InitOnly
    System.String MANAGER : Public, Static, InitOnly
    System.String MANAGETO : Public, Static, InitOnly
    System.String MANAGEUI : Public, Static, InitOnly
    System.String MANAGERVARIANT : Public, Static, InitOnly
    System.String RENDITIONCLASS : Public, Static, InitOnly
    System.String RENDITIONPARAMS : Public, Static, InitOnly
    System.String VERSIONID : Public, Static, InitOnly
    System.String VERSIONS : Public, Static, InitOnly
Class iTextSharp.text.ZapfDingbatsList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.List
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 CharNumber 'get set' : 
  Methods:
    setDingbatColor(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_CharNumber(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CharNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(IElement): PrivateScope, Public, Virtual, HideBySig
    CloneShallow(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.ZapfDingbatsNumberList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.List
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumberType 'get set' : 
  Methods:
    get_NumberType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NumberType(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(IElement): PrivateScope, Public, Virtual, HideBySig
    CloneShallow(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.xmp.impl.Base64: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Byte[]): PrivateScope, Public, Static, HideBySig
    Encode(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    Encode(String): PrivateScope, Public, Static, HideBySig
    Decode(Byte[]): PrivateScope, Public, Static, HideBySig
    Decode(String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.xmp.impl.ByteBuffer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.IO.Stream ByteStream 'get ' : 
    Int32 Length 'get ' : 
    System.String Encoding 'get ' : 
  Methods:
    get_ByteStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Encoding(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ByteAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CharAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Append(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Append(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Append(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Append(ByteBuffer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.xmp.impl.CountOutputStream: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 BytesWritten 'get ' : 
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_BytesWritten(): PrivateScope, Public, HideBySig, SpecialName
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[]): PrivateScope, Public, HideBySig
    Write(Int32): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.xmp.impl.FilterReader: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.IO.TextReader
  Methods:
    Read(): PrivateScope, Public, Virtual, HideBySig
    Read(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.xmp.impl.PushbackReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.xmp.impl.FilterReader
    Void .ctor(System.IO.TextReader, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.TextReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Read(): PrivateScope, Public, Virtual, HideBySig
    Read(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Unread(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Unread(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Unread(Char[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.xmp.impl.FixAsciiControlsReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.xmp.impl.PushbackReader
    Void .ctor(System.IO.TextReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Read(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.xmp.impl.Iso8601Converter: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, IXmpDateTime): PrivateScope, Public, Static, HideBySig
    Render(IXmpDateTime): PrivateScope, Public, Static, HideBySig
Class iTextSharp.xmp.impl.ParseState: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Ch(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Ch(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Skip(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Pos(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GatherInt(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.xmp.impl.Latin1Converter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    Convert(ByteBuffer): PrivateScope, Public, Static, HideBySig
Class iTextSharp.xmp.XmpConst: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String NS_XML = http://www.w3.org/XML/1998/namespace : Public, Static, Literal, HasDefault
    System.String NS_RDF = http://www.w3.org/1999/02/22-rdf-syntax-ns# : Public, Static, Literal, HasDefault
    System.String NS_DC = http://purl.org/dc/elements/1.1/ : Public, Static, Literal, HasDefault
    System.String NS_IPTCCORE = http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/ : Public, Static, Literal, HasDefault
    System.String NS_IPTCEXT = http://iptc.org/std/Iptc4xmpExt/2008-02-29/ : Public, Static, Literal, HasDefault
    System.String NS_DICOM = http://ns.adobe.com/DICOM/ : Public, Static, Literal, HasDefault
    System.String NS_PLUS = http://ns.useplus.org/ldf/xmp/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_X = adobe:ns:meta/ : Public, Static, Literal, HasDefault
    System.String NS_IX = http://ns.adobe.com/iX/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_XMP = http://ns.adobe.com/xap/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_XMP_RIGHTS = http://ns.adobe.com/xap/1.0/rights/ : Public, Static, Literal, HasDefault
    System.String NS_XMP_MM = http://ns.adobe.com/xap/1.0/mm/ : Public, Static, Literal, HasDefault
    System.String NS_XMP_BJ = http://ns.adobe.com/xap/1.0/bj/ : Public, Static, Literal, HasDefault
    System.String NS_XMP_NOTE = http://ns.adobe.com/xmp/note/ : Public, Static, Literal, HasDefault
    System.String NS_PDF = http://ns.adobe.com/pdf/1.3/ : Public, Static, Literal, HasDefault
    System.String NS_PDFX = http://ns.adobe.com/pdfx/1.3/ : Public, Static, Literal, HasDefault
    System.String NS_PDFX_ID = http://www.npes.org/pdfx/ns/id/ : Public, Static, Literal, HasDefault
    System.String NS_PDFA_SCHEMA = http://www.aiim.org/pdfa/ns/schema# : Public, Static, Literal, HasDefault
    System.String NS_PDFA_PROPERTY = http://www.aiim.org/pdfa/ns/property# : Public, Static, Literal, HasDefault
    System.String NS_PDFA_TYPE = http://www.aiim.org/pdfa/ns/type# : Public, Static, Literal, HasDefault
    System.String NS_PDFA_FIELD = http://www.aiim.org/pdfa/ns/field# : Public, Static, Literal, HasDefault
    System.String NS_PDFA_ID = http://www.aiim.org/pdfa/ns/id/ : Public, Static, Literal, HasDefault
    System.String NS_PDFUA_ID = http://www.aiim.org/pdfua/ns/id/ : Public, Static, Literal, HasDefault
    System.String NS_PDFA_EXTENSION = http://www.aiim.org/pdfa/ns/extension/ : Public, Static, Literal, HasDefault
    System.String NS_PHOTOSHOP = http://ns.adobe.com/photoshop/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_PSALBUM = http://ns.adobe.com/album/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_EXIF = http://ns.adobe.com/exif/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_EXIFX = http://cipa.jp/exif/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_EXIF_AUX = http://ns.adobe.com/exif/1.0/aux/ : Public, Static, Literal, HasDefault
    System.String NS_TIFF = http://ns.adobe.com/tiff/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_PNG = http://ns.adobe.com/png/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_JPEG = http://ns.adobe.com/jpeg/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_JP2K = http://ns.adobe.com/jp2k/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_CAMERARAW = http://ns.adobe.com/camera-raw-settings/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_ADOBESTOCKPHOTO = http://ns.adobe.com/StockPhoto/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_CREATOR_ATOM = http://ns.adobe.com/creatorAtom/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_ASF = http://ns.adobe.com/asf/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_WAV = http://ns.adobe.com/xmp/wav/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_BWF = http://ns.adobe.com/bwf/bext/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_RIFFINFO = http://ns.adobe.com/riff/info/ : Public, Static, Literal, HasDefault
    System.String NS_SCRIPT = http://ns.adobe.com/xmp/1.0/Script/ : Public, Static, Literal, HasDefault
    System.String NS_TXMP = http://ns.adobe.com/TransformXMP/ : Public, Static, Literal, HasDefault
    System.String NS_SWF = http://ns.adobe.com/swf/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_DM = http://ns.adobe.com/xmp/1.0/DynamicMedia/ : Public, Static, Literal, HasDefault
    System.String NS_TRANSIENT = http://ns.adobe.com/xmp/transient/1.0/ : Public, Static, Literal, HasDefault
    System.String NS_DC_DEPRECATED = http://purl.org/dc/1.1/ : Public, Static, Literal, HasDefault
    System.String TYPE_IDENTIFIERQUAL = http://ns.adobe.com/xmp/Identifier/qual/1.0/ : Public, Static, Literal, HasDefault
    System.String TYPE_DIMENSIONS = http://ns.adobe.com/xap/1.0/sType/Dimensions# : Public, Static, Literal, HasDefault
    System.String TYPE_TEXT = http://ns.adobe.com/xap/1.0/t/ : Public, Static, Literal, HasDefault
    System.String TYPE_PAGEDFILE = http://ns.adobe.com/xap/1.0/t/pg/ : Public, Static, Literal, HasDefault
    System.String TYPE_GRAPHICS = http://ns.adobe.com/xap/1.0/g/ : Public, Static, Literal, HasDefault
    System.String TYPE_IMAGE = http://ns.adobe.com/xap/1.0/g/img/ : Public, Static, Literal, HasDefault
    System.String TYPE_FONT = http://ns.adobe.com/xap/1.0/sType/Font# : Public, Static, Literal, HasDefault
    System.String TYPE_RESOURCEEVENT = http://ns.adobe.com/xap/1.0/sType/ResourceEvent# : Public, Static, Literal, HasDefault
    System.String TYPE_RESOURCEREF = http://ns.adobe.com/xap/1.0/sType/ResourceRef# : Public, Static, Literal, HasDefault
    System.String TYPE_ST_VERSION = http://ns.adobe.com/xap/1.0/sType/Version# : Public, Static, Literal, HasDefault
    System.String TYPE_ST_JOB = http://ns.adobe.com/xap/1.0/sType/Job# : Public, Static, Literal, HasDefault
    System.String TYPE_MANIFESTITEM = http://ns.adobe.com/xap/1.0/sType/ManifestItem# : Public, Static, Literal, HasDefault
    System.String TRUESTR = True : Public, Static, Literal, HasDefault
    System.String FALSESTR = False : Public, Static, Literal, HasDefault
    Int32 ARRAY_LAST_ITEM = -1 : Public, Static, Literal, HasDefault
    System.String ARRAY_ITEM_NAME = [] : Public, Static, Literal, HasDefault
    System.String X_DEFAULT = x-default : Public, Static, Literal, HasDefault
    System.String XML_LANG = xml:lang : Public, Static, Literal, HasDefault
    System.String RDF_TYPE = rdf:type : Public, Static, Literal, HasDefault
    System.String XMP_PI = xpacket : Public, Static, Literal, HasDefault
    System.String TAG_XMPMETA = xmpmeta : Public, Static, Literal, HasDefault
    System.String TAG_XAPMETA = xapmeta : Public, Static, Literal, HasDefault
Class iTextSharp.xmp.impl.ParameterAsserts: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :iTextSharp.xmp.XmpConst
  Methods:
    AssertArrayName(String): PrivateScope, Public, Static, HideBySig
    AssertPropName(String): PrivateScope, Public, Static, HideBySig
    AssertSchemaNs(String): PrivateScope, Public, Static, HideBySig
    AssertPrefix(String): PrivateScope, Public, Static, HideBySig
    AssertSpecificLang(String): PrivateScope, Public, Static, HideBySig
    AssertStructName(String): PrivateScope, Public, Static, HideBySig
    AssertNotNull(Object): PrivateScope, Public, Static, HideBySig
    AssertImplementation(IXmpMeta): PrivateScope, Public, Static, HideBySig
Class iTextSharp.xmp.impl.ParseRdf: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.xmp.XmpConst
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 RDFTERM_OTHER = 0 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_RDF = 1 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_ID = 2 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_ABOUT = 3 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_PARSE_TYPE = 4 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_RESOURCE = 5 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_NODE_ID = 6 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_DATATYPE = 7 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_DESCRIPTION = 8 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_LI = 9 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_ABOUT_EACH = 10 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_ABOUT_EACH_PREFIX = 11 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_BAG_ID = 12 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_FIRST_CORE = 1 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_LAST_CORE = 7 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_FIRST_SYNTAX = 1 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_LAST_SYNTAX = 9 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_FIRST_OLD = 10 : Public, Static, Literal, HasDefault
    Int32 RDFTERM_LAST_OLD = 12 : Public, Static, Literal, HasDefault
    System.String DEFAULT_PREFIX = _dflt : Public, Static, Literal, HasDefault
  Methods:
    Parse(XmlNode): PrivateScope, Assembly, Static, HideBySig
    RdfRdf(XmpMetaImpl, XmlNode): PrivateScope, Assembly, Static, HideBySig
Class iTextSharp.xmp.impl.QName: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String LocalName 'get ' : 
    System.String Prefix 'get ' : 
  Methods:
    get_LocalName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Prefix(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    HasPrefix(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.xmp.impl.Utils: AutoLayout, AnsiClass, Class, Public
  :iTextSharp.xmp.XmpConst
  Fields:
    Int32 UUID_LENGTH : Public, Static, InitOnly
    Int32 UUID_SEGMENT_COUNT = 4 : Public, Static, Literal, HasDefault
  Methods:
    NormalizeLangValue(String): PrivateScope, Public, Static, HideBySig
    SplitNameAndValue(String): PrivateScope, Assembly, Static, HideBySig
    IsInternalProperty(String, String): PrivateScope, Assembly, Static, HideBySig
    CheckUuidFormat(String): PrivateScope, Assembly, Static, HideBySig
    IsXmlName(String): PrivateScope, Public, Static, HideBySig
    IsXmlNameNs(String): PrivateScope, Public, Static, HideBySig
    IsControlChar(Char): PrivateScope, Assembly, Static, HideBySig
    EscapeXml(String, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    RemoveControlChars(String): PrivateScope, Assembly, Static, HideBySig
Interface iTextSharp.xmp.IXmpDateTime: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IComparable
  Properties:
    Int32 Year 'get set' : 
    Int32 Month 'get set' : 
    Int32 Day  'get set' : 
    Int32 Hour 'get set' : 
    Int32 Minute 'get set' : 
    Int32 Second 'get set' : 
    Int32 NanoSecond 'get set' : 
    System.TimeZone TimeZone 'get set' : 
    iTextSharp.xmp.XmpCalendar Calendar 'get ' : 
    System.String Iso8601String 'get ' : 
  Methods:
    get_Year(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Year(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Month(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Month(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Day(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Day(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Hour(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Hour(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Minute(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Minute(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Second(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Second(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_NanoSecond(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_NanoSecond(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TimeZone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_TimeZone(TimeZone): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Calendar(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Iso8601String(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    HasDate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    HasTime(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    HasTimeZone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.xmp.impl.XmpDateTimeImpl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.xmp.XmpCalendar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTime, System.TimeZone): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.xmp.IXmpDateTime
    System.IComparable
  Properties:
    Int32 Year 'get set' : 
    Int32 Month 'get set' : 
    Int32 Day  'get set' : 
    Int32 Hour 'get set' : 
    Int32 Minute 'get set' : 
    Int32 Second 'get set' : 
    Int32 NanoSecond 'get set' : 
    System.TimeZone TimeZone 'get set' : 
    iTextSharp.xmp.XmpCalendar Calendar 'get ' : 
    System.String Iso8601String 'get ' : 
  Methods:
    get_Year(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Year(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Month(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Month(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Day(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Day(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Hour(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Hour(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Minute(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Minute(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Second(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Second(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NanoSecond(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NanoSecond(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CompareTo(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_TimeZone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TimeZone(TimeZone): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    HasDate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasTime(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasTimeZone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Calendar(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Iso8601String(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Interface iTextSharp.xmp.IXmpIterator: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.Collections.IEnumerator
  Methods:
    SkipSubtree(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SkipSiblings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.xmp.impl.XmpIteratorImpl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.xmp.impl.XmpMetaImpl, System.String, System.String, iTextSharp.xmp.options.IteratorOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.xmp.IXmpIterator
    System.Collections.IEnumerator
  Properties:
    System.Object Current 'get ' : 
  Methods:
    SkipSubtree(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SkipSiblings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.xmp.properties.IXmpProperty: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String Value 'get ' : 
    iTextSharp.xmp.options.PropertyOptions Options 'get ' : 
    System.String Language 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Options(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Language(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface iTextSharp.xmp.properties.IXmpPropertyInfo: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    iTextSharp.xmp.properties.IXmpProperty
  Properties:
    System.String Namespace 'get ' : 
    System.String Path 'get ' : 
  Methods:
    get_Namespace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Path(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface iTextSharp.xmp.IXmpMeta: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.ICloneable
  Properties:
    System.String ObjectName 'get set' : 
    System.String PacketHeader 'get ' : 
  Methods:
    get_ObjectName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ObjectName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PacketHeader(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetProperty(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetArrayItem(String, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CountArrayItems(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStructField(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetQualifier(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetProperty(String, String, Object, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetProperty(String, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetArrayItem(String, String, Int32, String, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetArrayItem(String, String, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    InsertArrayItem(String, String, Int32, String, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    InsertArrayItem(String, String, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AppendArrayItem(String, String, PropertyOptions, String, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AppendArrayItem(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetStructField(String, String, String, String, String, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetStructField(String, String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetQualifier(String, String, String, String, String, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetQualifier(String, String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteProperty(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteArrayItem(String, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteStructField(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteQualifier(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoesPropertyExist(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoesArrayItemExist(String, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoesStructFieldExist(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoesQualifierExist(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetLocalizedText(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetLocalizedText(String, String, String, String, String, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetLocalizedText(String, String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPropertyBoolean(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPropertyInteger(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPropertyLong(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPropertyDouble(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPropertyDate(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPropertyCalendar(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPropertyBase64(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPropertyString(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyBoolean(String, String, Boolean, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyBoolean(String, String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyInteger(String, String, Int32, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyInteger(String, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyLong(String, String, Int64, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyLong(String, String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyDouble(String, String, Double, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyDouble(String, String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyDate(String, String, IXmpDateTime, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyDate(String, String, IXmpDateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyCalendar(String, String, DateTime, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyCalendar(String, String, DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyBase64(String, String, SByte[], PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyBase64(String, String, SByte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Iterator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Iterator(IteratorOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Iterator(String, String, IteratorOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Sort(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Normalize(ParseOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DumpObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.xmp.impl.XmpMetaImpl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.xmp.XmpConst
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.xmp.impl.XmpNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.xmp.IXmpMeta
    System.ICloneable
  Properties:
    iTextSharp.xmp.impl.XmpNode Root 'get ' : 
    System.String ObjectName 'get set' : 
    System.String PacketHeader 'get set' : 
  Methods:
    get_Root(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AppendArrayItem(String, String, PropertyOptions, String, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AppendArrayItem(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CountArrayItems(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteArrayItem(String, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteProperty(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteQualifier(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteStructField(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoesPropertyExist(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoesArrayItemExist(String, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoesStructFieldExist(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoesQualifierExist(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetArrayItem(String, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLocalizedText(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLocalizedText(String, String, String, String, String, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLocalizedText(String, String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetProperty(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPropertyBoolean(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPropertyBoolean(String, String, Boolean, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPropertyBoolean(String, String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPropertyInteger(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPropertyInteger(String, String, Int32, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPropertyInteger(String, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPropertyLong(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPropertyLong(String, String, Int64, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPropertyLong(String, String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPropertyDouble(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPropertyDouble(String, String, Double, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPropertyDouble(String, String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPropertyDate(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPropertyDate(String, String, IXmpDateTime, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPropertyDate(String, String, IXmpDateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPropertyCalendar(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPropertyCalendar(String, String, DateTime, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPropertyCalendar(String, String, DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPropertyBase64(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPropertyString(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPropertyBase64(String, String, SByte[], PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPropertyBase64(String, String, SByte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetQualifier(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStructField(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Iterator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Iterator(IteratorOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Iterator(String, String, IteratorOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetArrayItem(String, String, Int32, String, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetArrayItem(String, String, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InsertArrayItem(String, String, Int32, String, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InsertArrayItem(String, String, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetProperty(String, String, Object, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetProperty(String, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetQualifier(String, String, String, String, String, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetQualifier(String, String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetStructField(String, String, String, String, String, PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetStructField(String, String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ObjectName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ObjectName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PacketHeader(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PacketHeader(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DumpObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Sort(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Normalize(ParseOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetNode(XmpNode, Object, PropertyOptions, Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
Class iTextSharp.xmp.impl.XmpMetaParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    Parse(Object, ParseOptions): PrivateScope, Public, Static, HideBySig
Class iTextSharp.xmp.impl.XmpNode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.String, iTextSharp.xmp.options.PropertyOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, iTextSharp.xmp.options.PropertyOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
    System.ICloneable
  Properties:
    iTextSharp.xmp.impl.XmpNode Parent 'get set' : 
    Int32 ChildrenLength 'get ' : 
    Int32 QualifierLength 'get ' : 
    System.String Name 'get set' : 
    System.String Value 'get set' : 
    iTextSharp.xmp.options.PropertyOptions Options 'get set' : 
    Boolean Implicit 'get set' : 
    Boolean HasAliases 'get set' : 
    Boolean Alias 'get set' : 
    Boolean HasValueChild 'get set' : 
    System.Collections.IList Children 'get ' : 
    System.Collections.IList UnmodifiableChildren 'get ' : 
  Methods:
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Parent(XmpNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ChildrenLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_QualifierLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Value(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Options(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Options(PropertyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Implicit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Implicit(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasAliases(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HasAliases(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Alias(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Alias(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasValueChild(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HasValueChild(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Children(): PrivateScope, Assembly, HideBySig, SpecialName
    get_UnmodifiableChildren(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetChild(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddChild(XmpNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddChild(Int32, XmpNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReplaceChild(Int32, XmpNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveChild(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveChild(XmpNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveChildren(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FindChildByName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetQualifier(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddQualifier(XmpNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveQualifier(XmpNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveQualifiers(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FindQualifierByName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasChildren(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IterateChildren(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasQualifier(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IterateQualifier(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CloneSubtree(XmpNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DumpNode(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Sort(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.xmp.impl.XmpNodeUtils: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.xmp.XmpConst
  Fields:
    Int32 CLT_NO_VALUES = 0 : Assembly, Static, Literal, HasDefault
    Int32 CLT_SPECIFIC_MATCH = 1 : Assembly, Static, Literal, HasDefault
    Int32 CLT_SINGLE_GENERIC = 2 : Assembly, Static, Literal, HasDefault
    Int32 CLT_MULTIPLE_GENERIC = 3 : Assembly, Static, Literal, HasDefault
    Int32 CLT_XDEFAULT = 4 : Assembly, Static, Literal, HasDefault
    Int32 CLT_FIRST_ITEM = 5 : Assembly, Static, Literal, HasDefault
  Methods:
    FindSchemaNode(XmpNode, String, Boolean): PrivateScope, Assembly, Static, HideBySig
    FindSchemaNode(XmpNode, String, String, Boolean): PrivateScope, Assembly, Static, HideBySig
    FindChildNode(XmpNode, String, Boolean): PrivateScope, Assembly, Static, HideBySig
    FindNode(XmpNode, XmpPath, Boolean, PropertyOptions): PrivateScope, Assembly, Static, HideBySig
    DeleteNode(XmpNode): PrivateScope, Assembly, Static, HideBySig
    SetNodeValue(XmpNode, Object): PrivateScope, Assembly, Static, HideBySig
    VerifySetOptions(PropertyOptions, Object): PrivateScope, Assembly, Static, HideBySig
    SerializeNodeValue(Object): PrivateScope, Assembly, Static, HideBySig
    NormalizeLangArray(XmpNode): PrivateScope, Assembly, Static, HideBySig
    DetectAltText(XmpNode): PrivateScope, Assembly, Static, HideBySig
    AppendLangItem(XmpNode, String, String): PrivateScope, Assembly, Static, HideBySig
    ChooseLocalizedText(XmpNode, String, String): PrivateScope, Assembly, Static, HideBySig
    LookupLanguageItem(XmpNode, String): PrivateScope, Assembly, Static, HideBySig
Class iTextSharp.xmp.impl.XmpNormalizer: AutoLayout, AnsiClass, Class, Public
  Methods:
    Process(XmpMetaImpl, ParseOptions): PrivateScope, Assembly, Static, HideBySig
Interface iTextSharp.xmp.IXmpSchemaRegistry: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    RegisterNamespace(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetNamespacePrefix(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetNamespaceUri(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetNamespaces(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPrefixes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteNamespace(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ResolveAlias(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FindAliases(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FindAlias(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAliases(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.xmp.impl.XmpSchemaRegistryImpl: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :iTextSharp.xmp.XmpConst
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.xmp.IXmpSchemaRegistry
  Methods:
    RegisterNamespace(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DeleteNamespace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNamespacePrefix(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNamespaceUri(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResolveAlias(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FindAlias(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FindAliases(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNamespaces(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetPrefixes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetAliases(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.xmp.properties.IXmpAliasInfo: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String Namespace 'get ' : 
    System.String Prefix 'get ' : 
    System.String PropName 'get ' : 
    iTextSharp.xmp.options.AliasOptions AliasForm 'get ' : 
  Methods:
    get_Namespace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Prefix(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PropName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AliasForm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class iTextSharp.xmp.impl.ReadOnlyDictionary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    System.Collections.IDictionary
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Boolean IsReadOnly 'get ' : 
    System.Object Item [System.Object] 'get set' : 
    System.Collections.ICollection Values 'get ' : 
    System.Collections.ICollection Keys 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsSynchronized 'get ' : 
    Int32 Count 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    ReadOnly(IDictionary): PrivateScope, Public, Static, HideBySig
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Item(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Values(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Keys(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CopyTo(Array, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.xmp.impl.XmpSerializerHelper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Serialize(XmpMetaImpl, Stream, SerializeOptions): PrivateScope, Public, Static, HideBySig
    SerializeToString(XmpMetaImpl, SerializeOptions): PrivateScope, Public, Static, HideBySig
    SerializeToBuffer(XmpMetaImpl, SerializeOptions): PrivateScope, Public, Static, HideBySig
Class iTextSharp.xmp.impl.XmpSerializerRdf: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Utilities.Collections.ISet RDF_ATTR_QUALIFIER : Assembly, Static, InitOnly
  Methods:
    Serialize(IXmpMeta, Stream, SerializeOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.xmp.impl.XmpUtilsImpl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.xmp.XmpConst
  Methods:
    CatenateArrayItems(IXmpMeta, String, String, String, String, Boolean): PrivateScope, Public, Static, HideBySig
    SeparateArrayItems(IXmpMeta, String, String, String, PropertyOptions, Boolean): PrivateScope, Public, Static, HideBySig
    RemoveProperties(IXmpMeta, String, String, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    AppendProperties(IXmpMeta, IXmpMeta, Boolean, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
Class iTextSharp.xmp.impl.xpath.XmpPath: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 STRUCT_FIELD_STEP = 1 : Public, Static, Literal, HasDefault
    UInt32 QUALIFIER_STEP = 2 : Public, Static, Literal, HasDefault
    UInt32 ARRAY_INDEX_STEP = 3 : Public, Static, Literal, HasDefault
    UInt32 ARRAY_LAST_STEP = 4 : Public, Static, Literal, HasDefault
    UInt32 QUAL_SELECTOR_STEP = 5 : Public, Static, Literal, HasDefault
    UInt32 FIELD_SELECTOR_STEP = 6 : Public, Static, Literal, HasDefault
    UInt32 SCHEMA_NODE = 2147483648 : Public, Static, Literal, HasDefault
    UInt32 STEP_SCHEMA = 0 : Public, Static, Literal, HasDefault
    UInt32 STEP_ROOT_PROP = 1 : Public, Static, Literal, HasDefault
  Methods:
    Add(XmpPathSegment): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSegment(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.xmp.impl.xpath.XmpPathParser: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    ExpandXPath(String, String): PrivateScope, Public, Static, HideBySig
    SkipPathDelimiter(String, PathPosition): PrivateScope, Assembly, Static, HideBySig
    ParseStructSegment(PathPosition): PrivateScope, Assembly, Static, HideBySig
    ParseIndexSegment(PathPosition): PrivateScope, Assembly, Static, HideBySig
    ParseRootNode(String, PathPosition, XmpPath): PrivateScope, Assembly, Static, HideBySig
    VerifyQualName(String): PrivateScope, Assembly, Static, HideBySig
    VerifySimpleXmlName(String): PrivateScope, Assembly, Static, HideBySig
    VerifyXPathRoot(String, String): PrivateScope, Assembly, Static, HideBySig
Class iTextSharp.xmp.impl.xpath.PathPosition: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 NameEnd : Assembly
    Int32 NameStart : Assembly
    System.String Path : Assembly
    Int32 StepBegin : Assembly
    Int32 StepEnd : Assembly
Class iTextSharp.xmp.impl.xpath.XmpPathSegment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 Kind 'get set' : 
    System.String Name 'get set' : 
    Boolean Alias 'get set' : 
    UInt32 AliasForm 'get set' : 
  Methods:
    get_Kind(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Kind(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Alias(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Alias(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AliasForm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AliasForm(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Interface iTextSharp.xmp.IXmpVersionInfo: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Int32 Major 'get ' : 
    Int32 Minor 'get ' : 
    Int32 Micro 'get ' : 
    Int32 Build 'get ' : 
    Boolean Debug 'get ' : 
    System.String Message 'get ' : 
  Methods:
    get_Major(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Minor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Micro(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Build(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Debug(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Message(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class iTextSharp.xmp.options.XmpOptions: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 Options 'get set' : 
    System.String OptionsString 'get ' : 
  Methods:
    get_Options(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Options(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OptionsString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsExactly(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ContainsAllOptions(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ContainsOneOf(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetOption(UInt32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.xmp.options.AliasOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :iTextSharp.xmp.options.XmpOptions
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 PROP_DIRECT = 0 : Public, Static, Literal, HasDefault
    UInt32 PROP_ARRAY = 512 : Public, Static, Literal, HasDefault
    UInt32 PROP_ARRAY_ORDERED = 1024 : Public, Static, Literal, HasDefault
    UInt32 PROP_ARRAY_ALTERNATE = 2048 : Public, Static, Literal, HasDefault
    UInt32 PROP_ARRAY_ALT_TEXT = 4096 : Public, Static, Literal, HasDefault
  Properties:
    Boolean Simple 'get ' : 
    Boolean Array 'get set' : 
    Boolean ArrayOrdered 'get set' : 
    Boolean ArrayAlternate 'get set' : 
    Boolean ArrayAltText 'get set' : 
  Methods:
    get_Simple(): PrivateScope, Public, HideBySig, SpecialName
    get_Array(): PrivateScope, Public, HideBySig, SpecialName
    set_Array(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ArrayOrdered(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrayOrdered(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ArrayAlternate(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrayAlternate(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ArrayAltText(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrayAltText(Boolean): PrivateScope, Public, HideBySig, SpecialName
    ToPropertyOptions(): PrivateScope, Public, HideBySig
Class iTextSharp.xmp.options.IteratorOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :iTextSharp.xmp.options.XmpOptions
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 JUST_CHILDREN = 256 : Public, Static, Literal, HasDefault
    UInt32 JUST_LEAFNODES = 512 : Public, Static, Literal, HasDefault
    UInt32 JUST_LEAFNAME = 1024 : Public, Static, Literal, HasDefault
    UInt32 OMIT_QUALIFIERS = 4096 : Public, Static, Literal, HasDefault
  Properties:
    Boolean JustChildren 'get set' : 
    Boolean JustLeafname 'get set' : 
    Boolean JustLeafnodes 'get set' : 
    Boolean OmitQualifiers 'get set' : 
  Methods:
    get_JustChildren(): PrivateScope, Public, HideBySig, SpecialName
    set_JustChildren(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_JustLeafname(): PrivateScope, Public, HideBySig, SpecialName
    set_JustLeafname(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_JustLeafnodes(): PrivateScope, Public, HideBySig, SpecialName
    set_JustLeafnodes(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OmitQualifiers(): PrivateScope, Public, HideBySig, SpecialName
    set_OmitQualifiers(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class iTextSharp.xmp.options.ParseOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :iTextSharp.xmp.options.XmpOptions
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 REQUIRE_XMP_META = 1 : Public, Static, Literal, HasDefault
    UInt32 STRICT_ALIASING = 4 : Public, Static, Literal, HasDefault
    UInt32 FIX_CONTROL_CHARS = 8 : Public, Static, Literal, HasDefault
    UInt32 ACCEPT_LATIN_1 = 16 : Public, Static, Literal, HasDefault
    UInt32 OMIT_NORMALIZATION = 32 : Public, Static, Literal, HasDefault
  Properties:
    Boolean RequireXmpMeta 'get set' : 
    Boolean StrictAliasing 'get set' : 
    Boolean FixControlChars 'get set' : 
    Boolean AcceptLatin1 'get set' : 
    Boolean OmitNormalization 'get set' : 
  Methods:
    get_RequireXmpMeta(): PrivateScope, Public, HideBySig, SpecialName
    set_RequireXmpMeta(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_StrictAliasing(): PrivateScope, Public, HideBySig, SpecialName
    set_StrictAliasing(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FixControlChars(): PrivateScope, Public, HideBySig, SpecialName
    set_FixControlChars(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AcceptLatin1(): PrivateScope, Public, HideBySig, SpecialName
    set_AcceptLatin1(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OmitNormalization(): PrivateScope, Public, HideBySig, SpecialName
    set_OmitNormalization(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class iTextSharp.xmp.options.PropertyOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :iTextSharp.xmp.options.XmpOptions
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 NO_OPTIONS = 0 : Public, Static, Literal, HasDefault
    UInt32 URI = 2 : Public, Static, Literal, HasDefault
    UInt32 HAS_QUALIFIERS = 16 : Public, Static, Literal, HasDefault
    UInt32 QUALIFIER = 32 : Public, Static, Literal, HasDefault
    UInt32 HAS_LANGUAGE = 64 : Public, Static, Literal, HasDefault
    UInt32 HAS_TYPE = 128 : Public, Static, Literal, HasDefault
    UInt32 STRUCT = 256 : Public, Static, Literal, HasDefault
    UInt32 ARRAY = 512 : Public, Static, Literal, HasDefault
    UInt32 ARRAY_ORDERED = 1024 : Public, Static, Literal, HasDefault
    UInt32 ARRAY_ALTERNATE = 2048 : Public, Static, Literal, HasDefault
    UInt32 ARRAY_ALT_TEXT = 4096 : Public, Static, Literal, HasDefault
    UInt32 SCHEMA_NODE = 2147483648 : Public, Static, Literal, HasDefault
    UInt32 DELETE_EXISTING = 536870912 : Public, Static, Literal, HasDefault
    Int32 SEPARATE_NODE = 1073741824 : Public, Static, Literal, HasDefault
  Properties:
    Boolean Uri 'get set' : 
    Boolean HasQualifiers 'get set' : 
    Boolean Qualifier 'get set' : 
    Boolean HasLanguage 'get set' : 
    Boolean HasType 'get set' : 
    Boolean Struct 'get set' : 
    Boolean Array 'get set' : 
    Boolean ArrayOrdered 'get set' : 
    Boolean ArrayAlternate 'get set' : 
    Boolean ArrayAltText 'get set' : 
    Boolean SchemaNode 'get set' : 
    Boolean CompositeProperty 'get ' : 
    Boolean Simple 'get ' : 
    Boolean OnlyArrayOptions 'get ' : 
  Methods:
    get_Uri(): PrivateScope, Public, HideBySig, SpecialName
    set_Uri(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasQualifiers(): PrivateScope, Public, HideBySig, SpecialName
    set_HasQualifiers(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Qualifier(): PrivateScope, Public, HideBySig, SpecialName
    set_Qualifier(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasLanguage(): PrivateScope, Public, HideBySig, SpecialName
    set_HasLanguage(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasType(): PrivateScope, Public, HideBySig, SpecialName
    set_HasType(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Struct(): PrivateScope, Public, HideBySig, SpecialName
    set_Struct(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Array(): PrivateScope, Public, HideBySig, SpecialName
    set_Array(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ArrayOrdered(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrayOrdered(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ArrayAlternate(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrayAlternate(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ArrayAltText(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrayAltText(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SchemaNode(): PrivateScope, Public, HideBySig, SpecialName
    set_SchemaNode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CompositeProperty(): PrivateScope, Public, HideBySig, SpecialName
    get_Simple(): PrivateScope, Public, HideBySig, SpecialName
    get_OnlyArrayOptions(): PrivateScope, Public, HideBySig, SpecialName
    EqualArrayTypes(PropertyOptions): PrivateScope, Public, HideBySig
    MergeWith(PropertyOptions): PrivateScope, Public, HideBySig
Class iTextSharp.xmp.options.SerializeOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :iTextSharp.xmp.options.XmpOptions
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 OMIT_PACKET_WRAPPER = 16 : Public, Static, Literal, HasDefault
    UInt32 READONLY_PACKET = 32 : Public, Static, Literal, HasDefault
    UInt32 USE_COMPACT_FORMAT = 64 : Public, Static, Literal, HasDefault
    UInt32 USE_CANONICAL_FORMAT = 128 : Public, Static, Literal, HasDefault
    UInt32 INCLUDE_THUMBNAIL_PAD = 256 : Public, Static, Literal, HasDefault
    UInt32 EXACT_PACKET_LENGTH = 512 : Public, Static, Literal, HasDefault
    UInt32 OMIT_XMPMETA_ELEMENT = 4096 : Public, Static, Literal, HasDefault
    UInt32 SORT = 8192 : Public, Static, Literal, HasDefault
    UInt32 ENCODE_UTF8 = 0 : Public, Static, Literal, HasDefault
    UInt32 ENCODE_UTF16BE = 2 : Public, Static, Literal, HasDefault
    UInt32 ENCODE_UTF16LE = 3 : Public, Static, Literal, HasDefault
  Properties:
    Boolean OmitPacketWrapper 'get set' : 
    Boolean OmitXmpMetaElement 'get set' : 
    Boolean ReadOnlyPacket 'get set' : 
    Boolean UseCompactFormat 'get set' : 
    Boolean UseCanonicalFormat 'get set' : 
    Boolean IncludeThumbnailPad 'get set' : 
    Boolean ExactPacketLength 'get set' : 
    Boolean Sort 'get set' : 
    Boolean EncodeUtf16Be 'get set' : 
    Boolean EncodeUtf16Le 'get set' : 
    Int32 BaseIndent 'get set' : 
    System.String Indent 'get set' : 
    System.String Newline 'get set' : 
    Int32 Padding 'get set' : 
    Boolean OmitVersionAttribute 'get ' : 
    System.String Encoding 'get ' : 
  Methods:
    get_OmitPacketWrapper(): PrivateScope, Public, HideBySig, SpecialName
    set_OmitPacketWrapper(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OmitXmpMetaElement(): PrivateScope, Public, HideBySig, SpecialName
    set_OmitXmpMetaElement(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReadOnlyPacket(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadOnlyPacket(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UseCompactFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_UseCompactFormat(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UseCanonicalFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_UseCanonicalFormat(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeThumbnailPad(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeThumbnailPad(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ExactPacketLength(): PrivateScope, Public, HideBySig, SpecialName
    set_ExactPacketLength(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Sort(): PrivateScope, Public, HideBySig, SpecialName
    set_Sort(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EncodeUtf16Be(): PrivateScope, Public, HideBySig, SpecialName
    set_EncodeUtf16Be(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EncodeUtf16Le(): PrivateScope, Public, HideBySig, SpecialName
    set_EncodeUtf16Le(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_BaseIndent(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseIndent(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Indent(): PrivateScope, Public, HideBySig, SpecialName
    set_Indent(String): PrivateScope, Public, HideBySig, SpecialName
    get_Newline(): PrivateScope, Public, HideBySig, SpecialName
    set_Newline(String): PrivateScope, Public, HideBySig, SpecialName
    get_Padding(): PrivateScope, Public, HideBySig, SpecialName
    set_Padding(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OmitVersionAttribute(): PrivateScope, Public, HideBySig, SpecialName
    get_Encoding(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
Class iTextSharp.xmp.XmpCalendar: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.DateTime, System.TimeZone): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.TimeZone): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.DateTime DateTime 'get set' : 
    System.TimeZone TimeZone 'get set' : 
    Int64 TimeInMillis 'get set' : 
  Methods:
    get_DateTime(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DateTime(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TimeZone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TimeZone(TimeZone): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TimeInMillis(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TimeInMillis(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.xmp.XmpDateTimeFactory: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    iTextSharp.xmp.IXmpDateTime CurrentDateTime 'get ' : 
  Methods:
    get_CurrentDateTime(): PrivateScope, Public, Static, HideBySig, SpecialName
    CreateFromCalendar(XmpCalendar): PrivateScope, Public, Static, HideBySig
    Create(): PrivateScope, Public, Static, HideBySig
    Create(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Create(Int32, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    CreateFromIso8601(String): PrivateScope, Public, Static, HideBySig
    SetLocalTimeZone(IXmpDateTime): PrivateScope, Public, Static, HideBySig
    ConvertToUtcTime(IXmpDateTime): PrivateScope, Public, Static, HideBySig
    ConvertToLocalTime(IXmpDateTime): PrivateScope, Public, Static, HideBySig
Class iTextSharp.xmp.XmpError: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 UNKNOWN = 0 : Public, Static, Literal, HasDefault
    Int32 BADPARAM = 4 : Public, Static, Literal, HasDefault
    Int32 BADVALUE = 5 : Public, Static, Literal, HasDefault
    Int32 INTERNALFAILURE = 9 : Public, Static, Literal, HasDefault
    Int32 BADSCHEMA = 101 : Public, Static, Literal, HasDefault
    Int32 BADXPATH = 102 : Public, Static, Literal, HasDefault
    Int32 BADOPTIONS = 103 : Public, Static, Literal, HasDefault
    Int32 BADINDEX = 104 : Public, Static, Literal, HasDefault
    Int32 BADSERIALIZE = 107 : Public, Static, Literal, HasDefault
    Int32 BADXML = 201 : Public, Static, Literal, HasDefault
    Int32 BADRDF = 202 : Public, Static, Literal, HasDefault
    Int32 BADXMP = 203 : Public, Static, Literal, HasDefault
    Int32 BADSTREAM = 204 : Public, Static, Literal, HasDefault
Class iTextSharp.xmp.XmpException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ErrorCode 'get ' : 
  Methods:
    get_ErrorCode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.xmp.XmpMetaFactory: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    iTextSharp.xmp.IXmpSchemaRegistry SchemaRegistry 'get ' : 
  Methods:
    get_SchemaRegistry(): PrivateScope, Public, Static, HideBySig, SpecialName
    Create(): PrivateScope, Public, Static, HideBySig
    Parse(Stream): PrivateScope, Public, Static, HideBySig
    Parse(Stream, ParseOptions): PrivateScope, Public, Static, HideBySig
    ParseFromString(String): PrivateScope, Public, Static, HideBySig
    ParseFromString(String, ParseOptions): PrivateScope, Public, Static, HideBySig
    ParseFromBuffer(Byte[]): PrivateScope, Public, Static, HideBySig
    ParseFromBuffer(Byte[], ParseOptions): PrivateScope, Public, Static, HideBySig
    Serialize(IXmpMeta, Stream): PrivateScope, Public, Static, HideBySig
    Serialize(IXmpMeta, Stream, SerializeOptions): PrivateScope, Public, Static, HideBySig
    SerializeToBuffer(IXmpMeta, SerializeOptions): PrivateScope, Public, Static, HideBySig
    SerializeToString(IXmpMeta, SerializeOptions): PrivateScope, Public, Static, HideBySig
    Reset(): PrivateScope, Public, Static, HideBySig
    GetVersionInfo(): PrivateScope, Public, Static, HideBySig
Class iTextSharp.xmp.XmpPathFactory: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ComposeArrayItemPath(String, Int32): PrivateScope, Public, Static, HideBySig
    ComposeStructFieldPath(String, String): PrivateScope, Public, Static, HideBySig
    ComposeQualifierPath(String, String): PrivateScope, Public, Static, HideBySig
    ComposeLangSelector(String, String): PrivateScope, Public, Static, HideBySig
    ComposeFieldSelector(String, String, String, String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.xmp.XmpUtils: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    CatenateArrayItems(IXmpMeta, String, String, String, String, Boolean): PrivateScope, Public, Static, HideBySig
    SeparateArrayItems(IXmpMeta, String, String, String, PropertyOptions, Boolean): PrivateScope, Public, Static, HideBySig
    RemoveProperties(IXmpMeta, String, String, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    AppendProperties(IXmpMeta, IXmpMeta, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    AppendProperties(IXmpMeta, IXmpMeta, Boolean, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    ConvertToBoolean(String): PrivateScope, Public, Static, HideBySig
    ConvertFromBoolean(Boolean): PrivateScope, Public, Static, HideBySig
    ConvertToInteger(String): PrivateScope, Public, Static, HideBySig
    ConvertFromInteger(Int32): PrivateScope, Public, Static, HideBySig
    ConvertToLong(String): PrivateScope, Public, Static, HideBySig
    ConvertFromLong(Int64): PrivateScope, Public, Static, HideBySig
    ConvertToDouble(String): PrivateScope, Public, Static, HideBySig
    ConvertFromDouble(Double): PrivateScope, Public, Static, HideBySig
    ConvertToDate(String): PrivateScope, Public, Static, HideBySig
    ConvertFromDate(IXmpDateTime): PrivateScope, Public, Static, HideBySig
    EncodeBase64(Byte[]): PrivateScope, Public, Static, HideBySig
    DecodeBase64(String): PrivateScope, Public, Static, HideBySig
Interface Org.BouncyCastle.Asn1.IAsn1Convertible: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Asn1.Asn1Encodable: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Convertible
  Fields:
    System.String Der = DER : Public, Static, Literal, HasDefault
    System.String Ber = BER : Public, Static, Literal, HasDefault
  Methods:
    GetEncoded(): PrivateScope, Public, HideBySig
    GetEncoded(String): PrivateScope, Public, HideBySig
    GetDerEncoded(): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Asn1.Asn1EncodableVector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Encodable[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    Org.BouncyCastle.Asn1.Asn1Encodable Item [Int32] 'get ' : 
    Int32 Size 'get ' :  (Obsolete)
    Int32 Count 'get ' : 
  Methods:
    FromEnumerable(IEnumerable): PrivateScope, Public, Static, HideBySig
    Add(Asn1Encodable[]): PrivateScope, Public, HideBySig
    AddOptional(Asn1Encodable[]): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    Get(Int32): PrivateScope, Public, HideBySig (Obsolete)
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Asn1.Asn1Generator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    AddObject(Asn1Encodable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetRawOutputStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Asn1.Utilities.FilterStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Asn1InputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Utilities.FilterStream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FindLimit(Stream): PrivateScope, Assembly, Static, HideBySig
    BuildEncodableVector(): PrivateScope, Assembly, HideBySig
    BuildDerEncodableVector(DefiniteLengthInputStream): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    CreateDerSequence(DefiniteLengthInputStream): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    CreateDerSet(DefiniteLengthInputStream): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    ReadObject(): PrivateScope, Public, HideBySig
    ReadTagNumber(Stream, Int32): PrivateScope, Assembly, Static, HideBySig
    ReadLength(Stream, Int32): PrivateScope, Assembly, Static, HideBySig
    GetBuffer(DefiniteLengthInputStream, Byte[][]): PrivateScope, Assembly, Static, HideBySig
    CreatePrimitiveDerObject(Int32, DefiniteLengthInputStream, Byte[][]): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Asn1.Asn1Object: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Methods:
    FromByteArray(Byte[]): PrivateScope, Public, Static, HideBySig
    FromStream(Stream): PrivateScope, Public, Static, HideBySig
    ToAsn1Object(): PrivateScope, Public, Final, Virtual, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    CallAsn1Equals(Asn1Object): PrivateScope, Assembly, HideBySig
    CallAsn1GetHashCode(): PrivateScope, Assembly, HideBySig
Class Org.BouncyCastle.Asn1.Asn1Null: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Object
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Interface Org.BouncyCastle.Asn1.Asn1OctetStringParser: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Convertible
  Methods:
    GetOctetStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Asn1.Asn1OctetString: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Object
    Void .ctor(Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.Asn1OctetStringParser
  Fields:
    Byte[] str : Assembly
  Properties:
    Org.BouncyCastle.Asn1.Asn1OctetStringParser Parser 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetOctetStream(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Parser(): PrivateScope, Public, HideBySig, SpecialName
    GetOctets(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.DerOutputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Utilities.FilterStream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteEncoded(Int32, Byte[]): PrivateScope, Assembly, HideBySig
    WriteEncoded(Int32, Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    WriteTag(Int32, Int32): PrivateScope, Assembly, HideBySig
    WriteEncoded(Int32, Int32, Byte[]): PrivateScope, Assembly, HideBySig
    WriteObject(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    WriteObject(Asn1Encodable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteObject(Asn1Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Asn1.Asn1OutputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerOutputStream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteObject(Object): PrivateScope, Public, Virtual, HideBySig (Obsolete)
Class Org.BouncyCastle.Asn1.Asn1Sequence: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Object
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    Org.BouncyCastle.Asn1.Asn1SequenceParser Parser 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Item [Int32] 'get ' : 
    Int32 Size 'get ' :  (Obsolete)
    Int32 Count 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetObjects(): PrivateScope, Public, HideBySig (Obsolete)
    get_Parser(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetObjectAt(Int32): PrivateScope, Public, HideBySig (Obsolete)
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Interface Org.BouncyCastle.Asn1.Asn1SequenceParser: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Convertible
  Methods:
    ReadObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Asn1.Asn1Set: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Object
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    Org.BouncyCastle.Asn1.Asn1Encodable Item [Int32] 'get ' : 
    Int32 Size 'get ' :  (Obsolete)
    Int32 Count 'get ' : 
    Org.BouncyCastle.Asn1.Asn1SetParser Parser 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetObjects(): PrivateScope, Public, HideBySig (Obsolete)
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetObjectAt(Int32): PrivateScope, Public, HideBySig (Obsolete)
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Parser(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Interface Org.BouncyCastle.Asn1.Asn1SetParser: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Convertible
  Methods:
    ReadObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Asn1.Asn1StreamParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadIndef(Int32): PrivateScope, Assembly, HideBySig
    ReadImplicit(Boolean, Int32): PrivateScope, Assembly, HideBySig
    ReadTaggedObject(Boolean, Int32): PrivateScope, Assembly, HideBySig
    ReadObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadVector(): PrivateScope, Assembly, HideBySig
Interface Org.BouncyCastle.Asn1.Asn1TaggedObjectParser: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Convertible
  Properties:
    Int32 TagNo 'get ' : 
  Methods:
    get_TagNo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetObjectParser(Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Asn1.Asn1TaggedObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Object
  Interfaces:
    Org.BouncyCastle.Asn1.Asn1TaggedObjectParser
  Fields:
    Int32 tagNo : Assembly
    Boolean explicitly : Assembly
    Org.BouncyCastle.Asn1.Asn1Encodable obj : Assembly
  Properties:
    Int32 TagNo 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_TagNo(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsExplicit(): PrivateScope, Public, HideBySig
    IsEmpty(): PrivateScope, Public, HideBySig
    GetObject(): PrivateScope, Public, HideBySig
    GetObjectParser(Int32, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Asn1Tags: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Boolean = 1 : Public, Static, Literal, HasDefault
    Int32 Integer = 2 : Public, Static, Literal, HasDefault
    Int32 BitString = 3 : Public, Static, Literal, HasDefault
    Int32 OctetString = 4 : Public, Static, Literal, HasDefault
    Int32 Null = 5 : Public, Static, Literal, HasDefault
    Int32 ObjectIdentifier = 6 : Public, Static, Literal, HasDefault
    Int32 External = 8 : Public, Static, Literal, HasDefault
    Int32 Enumerated = 10 : Public, Static, Literal, HasDefault
    Int32 Sequence = 16 : Public, Static, Literal, HasDefault
    Int32 SequenceOf = 16 : Public, Static, Literal, HasDefault
    Int32 Set = 17 : Public, Static, Literal, HasDefault
    Int32 SetOf = 17 : Public, Static, Literal, HasDefault
    Int32 NumericString = 18 : Public, Static, Literal, HasDefault
    Int32 PrintableString = 19 : Public, Static, Literal, HasDefault
    Int32 T61String = 20 : Public, Static, Literal, HasDefault
    Int32 VideotexString = 21 : Public, Static, Literal, HasDefault
    Int32 IA5String = 22 : Public, Static, Literal, HasDefault
    Int32 UtcTime = 23 : Public, Static, Literal, HasDefault
    Int32 GeneralizedTime = 24 : Public, Static, Literal, HasDefault
    Int32 GraphicString = 25 : Public, Static, Literal, HasDefault
    Int32 VisibleString = 26 : Public, Static, Literal, HasDefault
    Int32 GeneralString = 27 : Public, Static, Literal, HasDefault
    Int32 UniversalString = 28 : Public, Static, Literal, HasDefault
    Int32 BmpString = 30 : Public, Static, Literal, HasDefault
    Int32 Utf8String = 12 : Public, Static, Literal, HasDefault
    Int32 Constructed = 32 : Public, Static, Literal, HasDefault
    Int32 Application = 64 : Public, Static, Literal, HasDefault
    Int32 Tagged = 128 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha384 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha512 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha224 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1_pkcs5 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1_pkcs12 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256_pkcs5 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256_pkcs12 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1_pkcs12_aes128_cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1_pkcs12_aes192_cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1_pkcs12_aes256_cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256_pkcs12_aes128_cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256_pkcs12_aes192_cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256_pkcs12_aes256_cbc : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.DerApplicationSpecific: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Object
    Void .ctor(Boolean, Int32, Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Int32, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Org.BouncyCastle.Asn1.Asn1EncodableVector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ApplicationTag 'get ' : 
  Methods:
    IsConstructed(): PrivateScope, Public, HideBySig
    GetContents(): PrivateScope, Public, HideBySig
    get_ApplicationTag(): PrivateScope, Public, HideBySig, SpecialName
    GetObject(): PrivateScope, Public, HideBySig
    GetObject(Int32): PrivateScope, Public, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.BerApplicationSpecific: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerApplicationSpecific
    Void .ctor(Int32, Org.BouncyCastle.Asn1.Asn1EncodableVector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface Org.BouncyCastle.Asn1.IAsn1ApplicationSpecificParser: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Convertible
  Methods:
    ReadObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Asn1.BerApplicationSpecificParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Org.BouncyCastle.Asn1.Asn1StreamParser): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1ApplicationSpecificParser
    Org.BouncyCastle.Asn1.IAsn1Convertible
  Methods:
    ReadObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Asn1.BerGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Generator
    Void .ctor(System.IO.Stream, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddObject(Asn1Encodable): PrivateScope, Public, Virtual, HideBySig
    GetRawOutputStream(): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.DerNull: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Null
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
  Fields:
    Org.BouncyCastle.Asn1.DerNull Instance : Public, Static, InitOnly
  Methods:
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.BerNull: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerNull
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
  Fields:
    Org.BouncyCastle.Asn1.BerNull Instance : Public, Static, InitOnly
  Methods:
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.DerOctetString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1OctetString
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Encode(DerOutputStream, Byte[], Int32, Int32): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Asn1.BerOctetString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerOctetString
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerable
  Methods:
    FromSequence(Asn1Sequence): PrivateScope, Public, Static, HideBySig
    GetOctets(): PrivateScope, Public, Virtual, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetObjects(): PrivateScope, Public, HideBySig (Obsolete)
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.BerOctetStringGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.BerGenerator
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetOctetOutputStream(): PrivateScope, Public, HideBySig
    GetOctetOutputStream(Int32): PrivateScope, Public, HideBySig
    GetOctetOutputStream(Byte[]): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Utilities.IO.BaseOutputStream: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.IO.Stream
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Final, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Final, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Asn1.BerOctetStringParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Asn1StreamParser): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.Asn1OctetStringParser
    Org.BouncyCastle.Asn1.IAsn1Convertible
  Methods:
    GetOctetStream(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Asn1.BerOutputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerOutputStream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteObject(Object): PrivateScope, Public, Virtual, HideBySig (Obsolete)
Class Org.BouncyCastle.Asn1.DerSequence: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Sequence
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Encodable[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerSequence Empty : Public, Static, InitOnly
  Methods:
    FromVector(Asn1EncodableVector): PrivateScope, Public, Static, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.BerSequence: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerSequence
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Encodable[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.BerSequence Empty : Public, Static, InitOnly
  Methods:
    FromVector(Asn1EncodableVector): PrivateScope, Public, Static, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.BerSequenceGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.BerGenerator
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Asn1.BerSequenceParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Asn1StreamParser): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.Asn1SequenceParser
    Org.BouncyCastle.Asn1.IAsn1Convertible
  Methods:
    ReadObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Asn1.DerSet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Set
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Encodable[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerSet Empty : Public, Static, InitOnly
  Methods:
    FromVector(Asn1EncodableVector): PrivateScope, Public, Static, HideBySig
    FromVector(Asn1EncodableVector, Boolean): PrivateScope, Assembly, Static, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.BerSet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerSet
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.BerSet Empty : Public, Static, InitOnly
  Methods:
    FromVector(Asn1EncodableVector): PrivateScope, Public, Static, HideBySig
    FromVector(Asn1EncodableVector, Boolean): PrivateScope, Assembly, Static, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.BerSetGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.BerGenerator
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Asn1.BerSetParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Asn1StreamParser): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.Asn1SetParser
    Org.BouncyCastle.Asn1.IAsn1Convertible
  Methods:
    ReadObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Asn1.DerTaggedObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1TaggedObject
    Void .ctor(Int32, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Int32, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.BerTaggedObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerTaggedObject
    Void .ctor(Int32, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Int32, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.BerTaggedObjectParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32, System.IO.Stream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(Boolean, Int32, Org.BouncyCastle.Asn1.Asn1StreamParser): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.Asn1TaggedObjectParser
    Org.BouncyCastle.Asn1.IAsn1Convertible
  Properties:
    Boolean IsConstructed 'get ' : 
    Int32 TagNo 'get ' : 
  Methods:
    get_IsConstructed(): PrivateScope, Public, HideBySig, SpecialName
    get_TagNo(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetObjectParser(Int32, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Asn1.IAsn1String: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Asn1.DerStringBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Object
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1String
  Methods:
    GetString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.DerBitString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerStringBase
    Void .ctor(Byte, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 PadBits 'get ' : 
    Int32 IntValue 'get ' : 
  Methods:
    GetPadBits(Int32): PrivateScope, Assembly, Static, HideBySig
    GetBytes(Int32): PrivateScope, Assembly, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetBytes(): PrivateScope, Public, HideBySig
    get_PadBits(): PrivateScope, Public, HideBySig, SpecialName
    get_IntValue(): PrivateScope, Public, HideBySig, SpecialName
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetString(): PrivateScope, Public, Virtual, HideBySig
    FromAsn1Octets(Byte[]): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.PkiFailureInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerBitString
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerBitString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 BadAlg = 128 : Public, Static, Literal, HasDefault
    Int32 BadMessageCheck = 64 : Public, Static, Literal, HasDefault
    Int32 BadRequest = 32 : Public, Static, Literal, HasDefault
    Int32 BadTime = 16 : Public, Static, Literal, HasDefault
    Int32 BadCertId = 8 : Public, Static, Literal, HasDefault
    Int32 BadDataFormat = 4 : Public, Static, Literal, HasDefault
    Int32 WrongAuthority = 2 : Public, Static, Literal, HasDefault
    Int32 IncorrectData = 1 : Public, Static, Literal, HasDefault
    Int32 MissingTimeStamp = 32768 : Public, Static, Literal, HasDefault
    Int32 BadPop = 16384 : Public, Static, Literal, HasDefault
    Int32 TimeNotAvailable = 512 : Public, Static, Literal, HasDefault
    Int32 UnacceptedPolicy = 256 : Public, Static, Literal, HasDefault
    Int32 UnacceptedExtension = 8388608 : Public, Static, Literal, HasDefault
    Int32 AddInfoNotAvailable = 4194304 : Public, Static, Literal, HasDefault
    Int32 SystemFailure = 1073741824 : Public, Static, Literal, HasDefault
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.PkiFreeText: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerUtf8String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.Asn1Sequence strings : Assembly
  Properties:
    Int32 Size 'get ' :  (Obsolete)
    Int32 Count 'get ' : 
    Org.BouncyCastle.Asn1.DerUtf8String Item [Int32] 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetStringAt(Int32): PrivateScope, Public, HideBySig (Obsolete)
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Struct Org.BouncyCastle.Asn1.Cmp.PkiStatus: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Asn1.Cmp.PkiStatus Granted = 0 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Asn1.Cmp.PkiStatus GrantedWithMods = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Asn1.Cmp.PkiStatus Rejection = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Asn1.Cmp.PkiStatus Waiting = 3 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Asn1.Cmp.PkiStatus RevocationWarning = 4 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Asn1.Cmp.PkiStatus RevocationNotification = 5 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Asn1.Cmp.PkiStatus KeyUpdateWarning = 6 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Asn1.Cmp.PkiStatusEncodable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Fields:
    Org.BouncyCastle.Asn1.Cmp.PkiStatusEncodable granted : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.Cmp.PkiStatusEncodable grantedWithMods : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.Cmp.PkiStatusEncodable rejection : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.Cmp.PkiStatusEncodable waiting : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.Cmp.PkiStatusEncodable revocationWarning : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.Cmp.PkiStatusEncodable revocationNotification : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.Cmp.PkiStatusEncodable keyUpdateWaiting : Public, Static, InitOnly
  Properties:
    Org.BouncyCastle.Math.BigInteger Value 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Org.BouncyCastle.Asn1.Cmp.PkiFreeText): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Org.BouncyCastle.Asn1.Cmp.PkiFreeText, Org.BouncyCastle.Asn1.Cmp.PkiFailureInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger Status 'get ' : 
    Org.BouncyCastle.Asn1.Cmp.PkiFreeText StatusString 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString FailInfo 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    get_StatusString(): PrivateScope, Public, HideBySig, SpecialName
    get_FailInfo(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.Attribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier AttrType 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set AttrValues 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_AttrType(): PrivateScope, Public, HideBySig, SpecialName
    get_AttrValues(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.AttributeTable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.Hashtable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.Attributes): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Cms.Attribute Item [Org.BouncyCastle.Asn1.DerObjectIdentifier] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Item(DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName
    Get(DerObjectIdentifier): PrivateScope, Public, HideBySig (Obsolete)
    GetAll(DerObjectIdentifier): PrivateScope, Public, HideBySig
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    ToDictionary(): PrivateScope, Public, HideBySig
    ToHashtable(): PrivateScope, Public, HideBySig (Obsolete)
    ToAsn1EncodableVector(): PrivateScope, Public, HideBySig
    ToAttributes(): PrivateScope, Public, HideBySig
    Add(DerObjectIdentifier, Asn1Encodable): PrivateScope, Public, HideBySig
    Remove(DerObjectIdentifier): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.Cms.AuthenticatedData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.OriginatorInfo, Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Cms.ContentInfo, Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Asn1.Asn1OctetString, Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.Cms.OriginatorInfo OriginatorInfo 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set RecipientInfos 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier MacAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier DigestAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.Cms.ContentInfo EncapsulatedContentInfo 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set AuthAttrs 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString Mac 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set UnauthAttrs 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginatorInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_RecipientInfos(): PrivateScope, Public, HideBySig, SpecialName
    get_MacAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_DigestAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_EncapsulatedContentInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_AuthAttrs(): PrivateScope, Public, HideBySig, SpecialName
    get_Mac(): PrivateScope, Public, HideBySig, SpecialName
    get_UnauthAttrs(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    CalculateVersion(OriginatorInfo): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Asn1.Cms.AuthenticatedDataParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Asn1SequenceParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    GetOriginatorInfo(): PrivateScope, Public, HideBySig
    GetRecipientInfos(): PrivateScope, Public, HideBySig
    GetMacAlgorithm(): PrivateScope, Public, HideBySig
    GetDigestAlgorithm(): PrivateScope, Public, HideBySig
    GetEnapsulatedContentInfo(): PrivateScope, Public, HideBySig
    GetAuthAttrs(): PrivateScope, Public, HideBySig
    GetMac(): PrivateScope, Public, HideBySig
    GetUnauthAttrs(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.Cms.AuthEnvelopedData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.OriginatorInfo, Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Asn1.Cms.EncryptedContentInfo, Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Asn1.Asn1OctetString, Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.Cms.OriginatorInfo OriginatorInfo 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set RecipientInfos 'get ' : 
    Org.BouncyCastle.Asn1.Cms.EncryptedContentInfo AuthEncryptedContentInfo 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set AuthAttrs 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString Mac 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set UnauthAttrs 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginatorInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_RecipientInfos(): PrivateScope, Public, HideBySig, SpecialName
    get_AuthEncryptedContentInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_AuthAttrs(): PrivateScope, Public, HideBySig, SpecialName
    get_Mac(): PrivateScope, Public, HideBySig, SpecialName
    get_UnauthAttrs(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.AuthEnvelopedDataParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Asn1SequenceParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    GetOriginatorInfo(): PrivateScope, Public, HideBySig
    GetRecipientInfos(): PrivateScope, Public, HideBySig
    GetAuthEncryptedContentInfo(): PrivateScope, Public, HideBySig
    GetAuthAttrs(): PrivateScope, Public, HideBySig
    GetMac(): PrivateScope, Public, HideBySig
    GetUnauthAttrs(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.Cms.CmsAttributes: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier ContentType : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier MessageDigest : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SigningTime : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CounterSignature : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ContentHint : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Cms.CmsObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier Data : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SignedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier EnvelopedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SignedAndEnvelopedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DigestedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier EncryptedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier AuthenticatedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CompressedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier AuthEnvelopedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier timestampedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_ri : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_ri_ocsp_response : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_ri_scvp : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Cms.CompressedData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Cms.ContentInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier CompressionAlgorithmIdentifier 'get ' : 
    Org.BouncyCastle.Asn1.Cms.ContentInfo EncapContentInfo 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_CompressionAlgorithmIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    get_EncapContentInfo(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.CompressedDataParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Asn1SequenceParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier CompressionAlgorithmIdentifier 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_CompressionAlgorithmIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    GetEncapContentInfo(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.Cms.ContentInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier ContentType 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Content 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_ContentType(): PrivateScope, Public, HideBySig, SpecialName
    get_Content(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.ContentInfoParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Asn1SequenceParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier ContentType 'get ' : 
  Methods:
    get_ContentType(): PrivateScope, Public, HideBySig, SpecialName
    GetContent(Int32): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.Cms.Ecc.MQVuserKeyingMaterial: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.OriginatorPublicKey, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Cms.OriginatorPublicKey EphemeralPublicKey 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString AddedUkm 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_EphemeralPublicKey(): PrivateScope, Public, HideBySig, SpecialName
    get_AddedUkm(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.EncryptedContentInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier ContentType 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier ContentEncryptionAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString EncryptedContent 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_ContentType(): PrivateScope, Public, HideBySig, SpecialName
    get_ContentEncryptionAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptedContent(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.EncryptedContentInfoParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Asn1SequenceParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier ContentType 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier ContentEncryptionAlgorithm 'get ' : 
  Methods:
    get_ContentType(): PrivateScope, Public, HideBySig, SpecialName
    get_ContentEncryptionAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    GetEncryptedContent(Int32): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.Cms.EncryptedData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.EncryptedContentInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.EncryptedContentInfo, Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.Cms.EncryptedContentInfo EncryptedContentInfo 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set UnprotectedAttrs 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EncryptedContentInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UnprotectedAttrs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.EnvelopedData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.OriginatorInfo, Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Asn1.Cms.EncryptedContentInfo, Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.OriginatorInfo, Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Asn1.Cms.EncryptedContentInfo, Org.BouncyCastle.Asn1.Cms.Attributes): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.Cms.OriginatorInfo OriginatorInfo 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set RecipientInfos 'get ' : 
    Org.BouncyCastle.Asn1.Cms.EncryptedContentInfo EncryptedContentInfo 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set UnprotectedAttrs 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginatorInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_RecipientInfos(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptedContentInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_UnprotectedAttrs(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    CalculateVersion(OriginatorInfo, Asn1Set, Asn1Set): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Asn1.Cms.EnvelopedDataParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Asn1SequenceParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    GetOriginatorInfo(): PrivateScope, Public, HideBySig
    GetRecipientInfos(): PrivateScope, Public, HideBySig
    GetEncryptedContentInfo(): PrivateScope, Public, HideBySig
    GetUnprotectedAttrs(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.Cms.IssuerAndSerialNumber: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509Name, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509Name, Org.BouncyCastle.Asn1.DerInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.X509Name Name 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger SerialNumber 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_SerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.KekIdentifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Byte[], Org.BouncyCastle.Asn1.DerGeneralizedTime, Org.BouncyCastle.Asn1.Cms.OtherKeyAttribute): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Asn1OctetString KeyIdentifier 'get ' : 
    Org.BouncyCastle.Asn1.DerGeneralizedTime Date 'get ' : 
    Org.BouncyCastle.Asn1.Cms.OtherKeyAttribute Other 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_KeyIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    get_Date(): PrivateScope, Public, HideBySig, SpecialName
    get_Other(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.KekRecipientInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.KekIdentifier, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.Cms.KekIdentifier KekID 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier KeyEncryptionAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString EncryptedKey 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_KekID(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyEncryptionAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptedKey(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Interface Org.BouncyCastle.Asn1.IAsn1Choice: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
Class Org.BouncyCastle.Asn1.Cms.KeyAgreeRecipientIdentifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.IssuerAndSerialNumber): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.RecipientKeyIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Org.BouncyCastle.Asn1.Cms.IssuerAndSerialNumber IssuerAndSerialNumber 'get ' : 
    Org.BouncyCastle.Asn1.Cms.RecipientKeyIdentifier RKeyID 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_IssuerAndSerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_RKeyID(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.KeyAgreeRecipientInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.OriginatorIdentifierOrKey, Org.BouncyCastle.Asn1.Asn1OctetString, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.Cms.OriginatorIdentifierOrKey Originator 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString UserKeyingMaterial 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier KeyEncryptionAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Sequence RecipientEncryptedKeys 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_Originator(): PrivateScope, Public, HideBySig, SpecialName
    get_UserKeyingMaterial(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyEncryptionAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_RecipientEncryptedKeys(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.KeyTransRecipientInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.RecipientIdentifier, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.Cms.RecipientIdentifier RecipientIdentifier 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier KeyEncryptionAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString EncryptedKey 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_RecipientIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyEncryptionAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptedKey(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.OriginatorIdentifierOrKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.IssuerAndSerialNumber): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(Org.BouncyCastle.Asn1.X509.SubjectKeyIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.OriginatorPublicKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Org.BouncyCastle.Asn1.Asn1Encodable ID 'get ' : 
    Org.BouncyCastle.Asn1.Cms.IssuerAndSerialNumber IssuerAndSerialNumber 'get ' : 
    Org.BouncyCastle.Asn1.X509.SubjectKeyIdentifier SubjectKeyIdentifier 'get ' : 
    Org.BouncyCastle.Asn1.Cms.OriginatorPublicKey OriginatorKey 'get ' :  (Obsolete)
    Org.BouncyCastle.Asn1.Cms.OriginatorPublicKey OriginatorPublicKey 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_ID(): PrivateScope, Public, HideBySig, SpecialName
    get_IssuerAndSerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_SubjectKeyIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginatorKey(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginatorPublicKey(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.OriginatorInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Asn1Set Certificates 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set Crls 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Certificates(): PrivateScope, Public, HideBySig, SpecialName
    get_Crls(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.OriginatorPublicKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier Algorithm 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString PublicKey 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKey(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.OtherKeyAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier KeyAttrId 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable KeyAttr 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_KeyAttrId(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyAttr(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.OtherRecipientInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier OriType 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable OriValue 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_OriType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OriValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.OtherRevocationInfoFormat: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier InfoFormat 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Info 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_InfoFormat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Info(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.PasswordRecipientInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier KeyDerivationAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier KeyEncryptionAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString EncryptedKey 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyDerivationAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyEncryptionAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptedKey(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.RecipientEncryptedKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.KeyAgreeRecipientIdentifier, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Cms.KeyAgreeRecipientIdentifier Identifier 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString EncryptedKey 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Identifier(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptedKey(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.RecipientIdentifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.IssuerAndSerialNumber): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Boolean IsTagged 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable ID 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_IsTagged(): PrivateScope, Public, HideBySig, SpecialName
    get_ID(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.RecipientInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.KeyTransRecipientInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.KeyAgreeRecipientInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.KekRecipientInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.PasswordRecipientInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.OtherRecipientInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Fields:
    Org.BouncyCastle.Asn1.Asn1Encodable info : Assembly
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Boolean IsTagged 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Info 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTagged(): PrivateScope, Public, HideBySig, SpecialName
    get_Info(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.RecipientKeyIdentifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1OctetString, Org.BouncyCastle.Asn1.DerGeneralizedTime, Org.BouncyCastle.Asn1.Cms.OtherKeyAttribute): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Org.BouncyCastle.Asn1.DerGeneralizedTime, Org.BouncyCastle.Asn1.Cms.OtherKeyAttribute): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Asn1OctetString SubjectKeyIdentifier 'get ' : 
    Org.BouncyCastle.Asn1.DerGeneralizedTime Date 'get ' : 
    Org.BouncyCastle.Asn1.Cms.OtherKeyAttribute OtherKeyAttribute 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_SubjectKeyIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    get_Date(): PrivateScope, Public, HideBySig, SpecialName
    get_OtherKeyAttribute(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.ScvpReqRes: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.ContentInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.ContentInfo, Org.BouncyCastle.Asn1.Cms.ContentInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Cms.ContentInfo Request 'get ' : 
    Org.BouncyCastle.Asn1.Cms.ContentInfo Response 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Request(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Response(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.SignedData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Asn1.Cms.ContentInfo, Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set DigestAlgorithms 'get ' : 
    Org.BouncyCastle.Asn1.Cms.ContentInfo EncapContentInfo 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set Certificates 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set CRLs 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set SignerInfos 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_DigestAlgorithms(): PrivateScope, Public, HideBySig, SpecialName
    get_EncapContentInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_Certificates(): PrivateScope, Public, HideBySig, SpecialName
    get_CRLs(): PrivateScope, Public, HideBySig, SpecialName
    get_SignerInfos(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.SignedDataParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Asn1SequenceParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    GetDigestAlgorithms(): PrivateScope, Public, HideBySig
    GetEncapContentInfo(): PrivateScope, Public, HideBySig
    GetCertificates(): PrivateScope, Public, HideBySig
    GetCrls(): PrivateScope, Public, HideBySig
    GetSignerInfos(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.Cms.SignerIdentifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.IssuerAndSerialNumber): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Boolean IsTagged 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable ID 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_IsTagged(): PrivateScope, Public, HideBySig, SpecialName
    get_ID(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.SignerInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.SignerIdentifier, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1OctetString, Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.SignerIdentifier, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Cms.Attributes, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1OctetString, Org.BouncyCastle.Asn1.Cms.Attributes): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.Cms.SignerIdentifier SignerID 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set AuthenticatedAttributes 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier DigestAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString EncryptedDigest 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier DigestEncryptionAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set UnauthenticatedAttributes 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_SignerID(): PrivateScope, Public, HideBySig, SpecialName
    get_AuthenticatedAttributes(): PrivateScope, Public, HideBySig, SpecialName
    get_DigestAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptedDigest(): PrivateScope, Public, HideBySig, SpecialName
    get_DigestEncryptionAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_UnauthenticatedAttributes(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.Time: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    System.String TimeString 'get ' : 
    System.DateTime Date 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_TimeString(): PrivateScope, Public, HideBySig, SpecialName
    get_Date(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Utilities.IO.BaseInputStream: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.IO.Stream
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Final, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Final, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Final, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.ConstructedOctetStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Org.BouncyCastle.Utilities.IO.BaseInputStream
    Void .ctor(Org.BouncyCastle.Asn1.Asn1StreamParser): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.CryptoPro.CryptoProObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3411 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3411Hmac : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR28147Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ID_Gost28147_89_CryptoPro_A_ParamSet : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3410x94 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3410x2001 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3411x94WithGostR3410x94 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3411x94WithGostR3410x2001 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3411x94CryptoProParamSet : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3410x94CryptoProA : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3410x94CryptoProB : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3410x94CryptoProC : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3410x94CryptoProD : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3410x94CryptoProXchA : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3410x94CryptoProXchB : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3410x94CryptoProXchC : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3410x2001CryptoProA : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3410x2001CryptoProB : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3410x2001CryptoProC : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3410x2001CryptoProXchA : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostR3410x2001CryptoProXchB : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostElSgDH3410Default : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GostElSgDH3410x1 : Public, Static, InitOnly
    System.String GostID = 1.2.643.2.2 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Asn1.CryptoPro.ECGost3410NamedCurves: AutoLayout, AnsiClass, Class, Public, Sealed
  Fields:
    System.Collections.IDictionary objIds : Assembly, Static, InitOnly
    System.Collections.IDictionary parameters : Assembly, Static, InitOnly
    System.Collections.IDictionary names : Assembly, Static, InitOnly
  Properties:
    System.Collections.IEnumerable Names 'get ' : 
  Methods:
    GetByOid(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    get_Names(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetByName(String): PrivateScope, Public, Static, HideBySig
    GetName(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    GetOid(String): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Asn1.CryptoPro.ECGost3410ParamSetParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Int32, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerInteger p : Assembly, InitOnly
    Org.BouncyCastle.Asn1.DerInteger q : Assembly, InitOnly
    Org.BouncyCastle.Asn1.DerInteger a : Assembly, InitOnly
    Org.BouncyCastle.Asn1.DerInteger b : Assembly, InitOnly
    Org.BouncyCastle.Asn1.DerInteger x : Assembly, InitOnly
    Org.BouncyCastle.Asn1.DerInteger y : Assembly, InitOnly
  Properties:
    Org.BouncyCastle.Math.BigInteger P 'get ' : 
    Org.BouncyCastle.Math.BigInteger Q 'get ' : 
    Org.BouncyCastle.Math.BigInteger A 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_P(): PrivateScope, Public, HideBySig, SpecialName
    get_Q(): PrivateScope, Public, HideBySig, SpecialName
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.CryptoPro.Gost28147Parameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.CryptoPro.Gost3410NamedParameters: AutoLayout, AnsiClass, Class, Public, Sealed
  Properties:
    System.Collections.IEnumerable Names 'get ' : 
  Methods:
    GetByOid(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    get_Names(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetByName(String): PrivateScope, Public, Static, HideBySig
    GetOid(String): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Asn1.CryptoPro.Gost3410ParamSetParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Int32, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 KeySize 'get ' : 
    Org.BouncyCastle.Math.BigInteger P 'get ' : 
    Org.BouncyCastle.Math.BigInteger Q 'get ' : 
    Org.BouncyCastle.Math.BigInteger A 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_KeySize(): PrivateScope, Public, HideBySig, SpecialName
    get_P(): PrivateScope, Public, HideBySig, SpecialName
    get_Q(): PrivateScope, Public, HideBySig, SpecialName
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.CryptoPro.Gost3410PublicKeyAlgParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier PublicKeyParamSet 'get ' : 
    Org.BouncyCastle.Asn1.DerObjectIdentifier DigestParamSet 'get ' : 
    Org.BouncyCastle.Asn1.DerObjectIdentifier EncryptionParamSet 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_PublicKeyParamSet(): PrivateScope, Public, HideBySig, SpecialName
    get_DigestParamSet(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptionParamSet(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.LimitedInputStream: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :Org.BouncyCastle.Utilities.IO.BaseInputStream
    Void .ctor(System.IO.Stream, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetRemaining(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.DefiniteLengthInputStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Org.BouncyCastle.Asn1.LimitedInputStream
    Void .ctor(System.IO.Stream, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Remaining 'get ' : 
  Methods:
    get_Remaining(): PrivateScope, Assembly, HideBySig, SpecialName
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadAllIntoByteArray(Byte[]): PrivateScope, Assembly, HideBySig
    ToArray(): PrivateScope, Assembly, HideBySig
Class Org.BouncyCastle.Asn1.DerBmpString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerStringBase
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetString(): PrivateScope, Public, Virtual, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.DerBoolean: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Object
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerBoolean False : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerBoolean True : Public, Static, InitOnly
  Properties:
    Boolean IsTrue 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_IsTrue(): PrivateScope, Public, HideBySig, SpecialName
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.DerEnumerated: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Object
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger Value 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.DerExternal: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Object
    Void .ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.Asn1Object, Org.BouncyCastle.Asn1.DerTaggedObject): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.Asn1Object, Int32, Org.BouncyCastle.Asn1.Asn1Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Asn1Object DataValueDescriptor 'get set' : 
    Org.BouncyCastle.Asn1.DerObjectIdentifier DirectReference 'get set' : 
    Int32 Encoding 'get set' : 
    Org.BouncyCastle.Asn1.Asn1Object ExternalContent 'get set' : 
    Org.BouncyCastle.Asn1.DerInteger IndirectReference 'get set' : 
  Methods:
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_DataValueDescriptor(): PrivateScope, Public, HideBySig, SpecialName
    set_DataValueDescriptor(Asn1Object): PrivateScope, Public, HideBySig, SpecialName
    get_DirectReference(): PrivateScope, Public, HideBySig, SpecialName
    set_DirectReference(DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName
    get_Encoding(): PrivateScope, Public, HideBySig, SpecialName
    set_Encoding(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ExternalContent(): PrivateScope, Public, HideBySig, SpecialName
    set_ExternalContent(Asn1Object): PrivateScope, Public, HideBySig, SpecialName
    get_IndirectReference(): PrivateScope, Public, HideBySig, SpecialName
    set_IndirectReference(DerInteger): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Asn1.DerExternalParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1StreamParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadObject(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.DerGeneralizedTime: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Object
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String TimeString 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_TimeString(): PrivateScope, Public, HideBySig, SpecialName
    GetTime(): PrivateScope, Public, HideBySig
    ToDateTime(): PrivateScope, Public, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.DerGeneralString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerStringBase
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetString(): PrivateScope, Public, Virtual, HideBySig
    GetOctets(): PrivateScope, Public, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.DerGenerator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Generator
  Methods:
    WriteDerEncoded(Stream, Int32, Byte[]): PrivateScope, Assembly, Static, HideBySig
    WriteDerEncoded(Int32, Byte[]): PrivateScope, Assembly, HideBySig
    WriteDerEncoded(Stream, Int32, Stream): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Asn1.DerIA5String: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerStringBase
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetString(): PrivateScope, Public, Virtual, HideBySig
    GetOctets(): PrivateScope, Public, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    IsIA5String(String): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Asn1.DerInteger: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Object
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger Value 'get ' : 
    Org.BouncyCastle.Math.BigInteger PositiveValue 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_PositiveValue(): PrivateScope, Public, HideBySig, SpecialName
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.DerNumericString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerStringBase
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetString(): PrivateScope, Public, Virtual, HideBySig
    GetOctets(): PrivateScope, Public, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    IsNumericString(String): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Asn1.DerObjectIdentifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Object
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Id 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    Branch(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    On(DerObjectIdentifier): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBody(): PrivateScope, Assembly, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ToString(): PrivateScope, Public, Virtual, HideBySig
    FromOctetString(Byte[]): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Asn1.DerOctetStringParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.DefiniteLengthInputStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.Asn1OctetStringParser
    Org.BouncyCastle.Asn1.IAsn1Convertible
  Methods:
    GetOctetStream(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Asn1.DerPrintableString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerStringBase
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetString(): PrivateScope, Public, Virtual, HideBySig
    GetOctets(): PrivateScope, Public, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    IsPrintableString(String): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Asn1.DerSequenceGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerGenerator
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddObject(Asn1Encodable): PrivateScope, Public, Virtual, HideBySig
    GetRawOutputStream(): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.DerSequenceParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Asn1StreamParser): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.Asn1SequenceParser
    Org.BouncyCastle.Asn1.IAsn1Convertible
  Methods:
    ReadObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Asn1.DerSetGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerGenerator
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddObject(Asn1Encodable): PrivateScope, Public, Virtual, HideBySig
    GetRawOutputStream(): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.DerSetParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Asn1StreamParser): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.Asn1SetParser
    Org.BouncyCastle.Asn1.IAsn1Convertible
  Methods:
    ReadObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Asn1.DerT61String: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerStringBase
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetString(): PrivateScope, Public, Virtual, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetOctets(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.DerUniversalString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerStringBase
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetString(): PrivateScope, Public, Virtual, HideBySig
    GetOctets(): PrivateScope, Public, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.DerUnknownTag: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Object
    Void .ctor(Int32, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Int32, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsConstructed 'get ' : 
    Int32 Tag  'get ' : 
  Methods:
    get_IsConstructed(): PrivateScope, Public, HideBySig, SpecialName
    get_Tag(): PrivateScope, Public, HideBySig, SpecialName
    GetData(): PrivateScope, Public, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.DerUtcTime: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Object
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String TimeString 'get ' : 
    System.String AdjustedTime 'get ' :  (Obsolete)
    System.String AdjustedTimeString 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    ToDateTime(): PrivateScope, Public, HideBySig
    ToAdjustedDateTime(): PrivateScope, Public, HideBySig
    get_TimeString(): PrivateScope, Public, HideBySig, SpecialName
    get_AdjustedTime(): PrivateScope, Public, HideBySig, SpecialName
    get_AdjustedTimeString(): PrivateScope, Public, HideBySig, SpecialName
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.DerUtf8String: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerStringBase
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetString(): PrivateScope, Public, Virtual, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.DerVisibleString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerStringBase
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetString(): PrivateScope, Public, Virtual, HideBySig
    GetOctets(): PrivateScope, Public, HideBySig
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.Eac.EacObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier bsi_de : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_PK : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_PK_DH : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_PK_ECDH : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_CA : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_CA_DH : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_CA_DH_3DES_CBC_CBC : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_CA_ECDH : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_CA_ECDH_3DES_CBC_CBC : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_TA : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_TA_RSA : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_TA_RSA_v1_5_SHA_1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_TA_RSA_v1_5_SHA_256 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_TA_RSA_PSS_SHA_1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_TA_RSA_PSS_SHA_256 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_TA_ECDSA : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_TA_ECDSA_SHA_1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_TA_ECDSA_SHA_224 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_TA_ECDSA_SHA_256 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_TA_ECDSA_SHA_384 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_TA_ECDSA_SHA_512 : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Esf.CertificateValues: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509CertificateStructure[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetCertificates(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.CommitmentTypeIdentifier: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier ProofOfOrigin : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ProofOfReceipt : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ProofOfDelivery : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ProofOfSender : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ProofOfApproval : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ProofOfCreation : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Esf.CommitmentTypeIndication: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier CommitmentTypeID 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Sequence CommitmentTypeQualifier 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_CommitmentTypeID(): PrivateScope, Public, HideBySig, SpecialName
    get_CommitmentTypeQualifier(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.CommitmentTypeQualifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier CommitmentTypeIdentifier 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Object Qualifier 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_CommitmentTypeIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    get_Qualifier(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.CompleteCertificateRefs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Esf.OtherCertID[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetOtherCertIDs(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.CompleteRevocationRefs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Esf.CrlOcspRef[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetCrlOcspRefs(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.CrlIdentifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509Name, System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509Name, System.DateTime, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.X509Name CrlIssuer 'get ' : 
    System.DateTime CrlIssuedTime 'get ' : 
    Org.BouncyCastle.Math.BigInteger CrlNumber 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_CrlIssuer(): PrivateScope, Public, HideBySig, SpecialName
    get_CrlIssuedTime(): PrivateScope, Public, HideBySig, SpecialName
    get_CrlNumber(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.CrlListID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Esf.CrlValidatedID[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetCrls(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.CrlOcspRef: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Esf.CrlListID, Org.BouncyCastle.Asn1.Esf.OcspListID, Org.BouncyCastle.Asn1.Esf.OtherRevRefs): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Esf.CrlListID CrlIDs 'get ' : 
    Org.BouncyCastle.Asn1.Esf.OcspListID OcspIDs 'get ' : 
    Org.BouncyCastle.Asn1.Esf.OtherRevRefs OtherRev 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_CrlIDs(): PrivateScope, Public, HideBySig, SpecialName
    get_OcspIDs(): PrivateScope, Public, HideBySig, SpecialName
    get_OtherRev(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.CrlValidatedID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Esf.OtherHash): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Esf.OtherHash, Org.BouncyCastle.Asn1.Esf.CrlIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Esf.OtherHash CrlHash 'get ' : 
    Org.BouncyCastle.Asn1.Esf.CrlIdentifier CrlIdentifier 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_CrlHash(): PrivateScope, Public, HideBySig, SpecialName
    get_CrlIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.EsfAttributes: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier SigPolicyId : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CommitmentType : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SignerLocation : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SignerAttr : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier OtherSigCert : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ContentTimestamp : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CertificateRefs : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier RevocationRefs : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CertValues : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier RevocationValues : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier EscTimeStamp : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CertCrlTimestamp : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ArchiveTimestamp : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ArchiveTimestampV2 : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Esf.OcspIdentifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.ResponderID, System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Ocsp.ResponderID OcspResponderID 'get ' : 
    System.DateTime ProducedAt 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_OcspResponderID(): PrivateScope, Public, HideBySig, SpecialName
    get_ProducedAt(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.OcspListID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Esf.OcspResponsesID[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetOcspResponses(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.OcspResponsesID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Esf.OcspIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Esf.OcspIdentifier, Org.BouncyCastle.Asn1.Esf.OtherHash): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Esf.OcspIdentifier OcspIdentifier 'get ' : 
    Org.BouncyCastle.Asn1.Esf.OtherHash OcspRepHash 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_OcspIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    get_OcspRepHash(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.OtherCertID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Esf.OtherHash): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Esf.OtherHash, Org.BouncyCastle.Asn1.X509.IssuerSerial): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Esf.OtherHash OtherCertHash 'get ' : 
    Org.BouncyCastle.Asn1.X509.IssuerSerial IssuerSerial 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_OtherCertHash(): PrivateScope, Public, HideBySig, SpecialName
    get_IssuerSerial(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.OtherHash: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Esf.OtherHashAlgAndValue): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier HashAlgorithm 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    GetHashValue(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.OtherHashAlgAndValue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier HashAlgorithm 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    GetHashValue(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.OtherRevRefs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier OtherRevRefType 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Object OtherRevRefsObject 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_OtherRevRefType(): PrivateScope, Public, HideBySig, SpecialName
    get_OtherRevRefsObject(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.OtherRevVals: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier OtherRevValType 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Object OtherRevValsObject 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_OtherRevValType(): PrivateScope, Public, HideBySig, SpecialName
    get_OtherRevValsObject(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.OtherSigningCertificate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Esf.OtherCertID[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Esf.OtherCertID[], Org.BouncyCastle.Asn1.X509.PolicyInformation[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IEnumerable, System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetCerts(): PrivateScope, Public, HideBySig
    GetPolicies(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.RevocationValues: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.CertificateList[], Org.BouncyCastle.Asn1.Ocsp.BasicOcspResponse[], Org.BouncyCastle.Asn1.Esf.OtherRevVals): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IEnumerable, System.Collections.IEnumerable, Org.BouncyCastle.Asn1.Esf.OtherRevVals): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Esf.OtherRevVals OtherRevVals 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetCrlVals(): PrivateScope, Public, HideBySig
    GetOcspVals(): PrivateScope, Public, HideBySig
    get_OtherRevVals(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.SignaturePolicyId: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Esf.OtherHashAlgAndValue): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Esf.OtherHashAlgAndValue, Org.BouncyCastle.Asn1.Esf.SigPolicyQualifierInfo[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Esf.OtherHashAlgAndValue, System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier SigPolicyIdentifier 'get ' : 
    Org.BouncyCastle.Asn1.Esf.OtherHashAlgAndValue SigPolicyHash 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_SigPolicyIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    get_SigPolicyHash(): PrivateScope, Public, HideBySig, SpecialName
    GetSigPolicyQualifiers(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.SignaturePolicyIdentifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Esf.SignaturePolicyId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Org.BouncyCastle.Asn1.Esf.SignaturePolicyId SignaturePolicyId 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_SignaturePolicyId(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.SignerAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.AttributeCertificate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Asn1Sequence ClaimedAttributes 'get ' : 
    Org.BouncyCastle.Asn1.X509.AttributeCertificate CertifiedAttributes 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_ClaimedAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CertifiedAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.SignerLocation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerUtf8String, Org.BouncyCastle.Asn1.DerUtf8String, Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerUtf8String CountryName 'get ' : 
    Org.BouncyCastle.Asn1.DerUtf8String LocalityName 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Sequence PostalAddress 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_CountryName(): PrivateScope, Public, HideBySig, SpecialName
    get_LocalityName(): PrivateScope, Public, HideBySig, SpecialName
    get_PostalAddress(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Esf.SigPolicyQualifierInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier SigPolicyQualifierId 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Object SigQualifier 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_SigPolicyQualifierId(): PrivateScope, Public, HideBySig, SpecialName
    get_SigQualifier(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ess.ContentHints: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.DerUtf8String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier ContentType 'get ' : 
    Org.BouncyCastle.Asn1.DerUtf8String ContentDescription 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_ContentType(): PrivateScope, Public, HideBySig, SpecialName
    get_ContentDescription(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ess.ContentIdentifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Asn1OctetString Value 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ess.EssCertID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Org.BouncyCastle.Asn1.X509.IssuerSerial): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.IssuerSerial IssuerSerial 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetCertHash(): PrivateScope, Public, HideBySig
    get_IssuerSerial(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ess.EssCertIDv2: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Org.BouncyCastle.Asn1.X509.IssuerSerial): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Byte[], Org.BouncyCastle.Asn1.X509.IssuerSerial): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier HashAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.X509.IssuerSerial IssuerSerial 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    GetCertHash(): PrivateScope, Public, HideBySig
    get_IssuerSerial(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ess.OtherCertID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Byte[], Org.BouncyCastle.Asn1.X509.IssuerSerial): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier AlgorithmHash 'get ' : 
    Org.BouncyCastle.Asn1.X509.IssuerSerial IssuerSerial 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_AlgorithmHash(): PrivateScope, Public, HideBySig, SpecialName
    GetCertHash(): PrivateScope, Public, HideBySig
    get_IssuerSerial(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ess.OtherSigningCertificate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Ess.OtherCertID): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetCerts(): PrivateScope, Public, HideBySig
    GetPolicies(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ess.SigningCertificate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Ess.EssCertID): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetCerts(): PrivateScope, Public, HideBySig
    GetPolicies(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ess.SigningCertificateV2: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Ess.EssCertIDv2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Ess.EssCertIDv2[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Ess.EssCertIDv2[], Org.BouncyCastle.Asn1.X509.PolicyInformation[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetCerts(): PrivateScope, Public, HideBySig
    GetPolicies(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Gnu.GnuObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier Gnu : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GnuPG : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Notation : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PkaAddress : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GnuRadar : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DigestAlgorithm : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Tiger192 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier EncryptionAlgorithm : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Serpent : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Serpent128Ecb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Serpent128Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Serpent128Ofb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Serpent128Cfb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Serpent192Ecb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Serpent192Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Serpent192Ofb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Serpent192Cfb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Serpent256Ecb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Serpent256Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Serpent256Ofb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Serpent256Cfb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Crc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Crc32 : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Iana.IanaObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier IsakmpOakley : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier HmacMD5 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier HmacSha1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier HmacTiger : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier HmacRipeMD160 : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Icao.DataGroupHash: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Int32, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 DataGroupNumber 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString DataGroupHashValue 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_DataGroupNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_DataGroupHashValue(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Icao.IcaoObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIcao : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIcaoMrtd : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIcaoMrtdSecurity : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIcaoLdsSecurityObject : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIcaoCscaMasterList : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIcaoCscaMasterListSigningKey : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIcaoDocumentTypeList : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIcaoAAProtocolObject : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIcaoExtensions : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIcaoExtensionsNamechangekeyrollover : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Icao.LdsSecurityObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Icao.DataGroupHash[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Icao.DataGroupHash[], Org.BouncyCastle.Asn1.Icao.LdsVersionInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 UBDataGroups = 16 : Public, Static, Literal, HasDefault
  Properties:
    Org.BouncyCastle.Math.BigInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier DigestAlgorithmIdentifier 'get ' : 
    Org.BouncyCastle.Asn1.Icao.LdsVersionInfo VersionInfo 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_DigestAlgorithmIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    GetDatagroupHash(): PrivateScope, Public, HideBySig
    get_VersionInfo(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.IndefiniteLengthInputStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Org.BouncyCastle.Asn1.LimitedInputStream
    Void .ctor(System.IO.Stream, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetEofOn00(Boolean): PrivateScope, Assembly, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMtt : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttCP : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttCPAccredited : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttAT : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATDateOfCertGen : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATProcuration : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATAdmission : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATMonetaryLimit : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATDeclarationOfMajority : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATIccsn : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATPKReference : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATRestriction : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATRetrieveIfAllowed : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATRequestedCertificate : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATNamingAuthorities : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATCertInDirSince : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATCertHash : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATNameAtBirth : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATAdditionalInformation : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATLiabilityLimitationFlag : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.IsisMtt.Ocsp.CertHash: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier HashAlgorithm 'get ' : 
    Byte[] CertificateHash 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_CertificateHash(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.IsisMtt.Ocsp.RequestedCertificate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509CertificateStructure): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Choice, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Choice Type 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    GetCertificateBytes(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Struct Org.BouncyCastle.Asn1.IsisMtt.Ocsp.RequestedCertificate+Choice: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Choice Certificate = -1 : Public, Static, Literal, HasDefault
    Choice PublicKeyCertificate = 0 : Public, Static, Literal, HasDefault
    Choice AttributeCertificate = 1 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Asn1.IsisMtt.X509.AdditionalInformationSyntax: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X500.DirectoryString Information 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Information(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.IsisMtt.X509.Admissions: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralName, Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority, Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.GeneralName AdmissionAuthority 'get ' : 
    Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority NamingAuthority 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_AdmissionAuthority(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NamingAuthority(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetProfessionInfos(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.IsisMtt.X509.AdmissionSyntax: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralName, Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.GeneralName AdmissionAuthority 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    get_AdmissionAuthority(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetContentsOfAdmissions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Asn1.IsisMtt.X509.DeclarationOfMajority: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerGeneralizedTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Choice Type 'get ' : 
    Int32 NotYoungerThan 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Sequence FullAgeAtCountry 'get ' : 
    Org.BouncyCastle.Asn1.DerGeneralizedTime DateOfBirth 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_NotYoungerThan(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FullAgeAtCountry(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DateOfBirth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct Org.BouncyCastle.Asn1.IsisMtt.X509.DeclarationOfMajority+Choice: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Choice NotYoungerThan = 0 : Public, Static, Literal, HasDefault
    Choice FullAgeAtCountry = 1 : Public, Static, Literal, HasDefault
    Choice DateOfBirth = 2 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Asn1.IsisMtt.X509.MonetaryLimit: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(System.String, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Currency 'get ' : 
    Org.BouncyCastle.Math.BigInteger Amount 'get ' : 
    Org.BouncyCastle.Math.BigInteger Exponent 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Currency(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Amount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Exponent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, System.String, Org.BouncyCastle.Asn1.X500.DirectoryString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdIsisMttATNamingAuthoritiesRechtWirtschaftSteuern : Public, Static, InitOnly
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier NamingAuthorityID 'get ' : 
    Org.BouncyCastle.Asn1.X500.DirectoryString NamingAuthorityText 'get ' : 
    System.String NamingAuthorityUrl 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_NamingAuthorityID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NamingAuthorityText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NamingAuthorityUrl(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.IsisMtt.X509.ProcurationSyntax: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(System.String, Org.BouncyCastle.Asn1.X500.DirectoryString, Org.BouncyCastle.Asn1.X509.IssuerSerial): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Org.BouncyCastle.Asn1.X500.DirectoryString, Org.BouncyCastle.Asn1.X509.GeneralName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Country 'get ' : 
    Org.BouncyCastle.Asn1.X500.DirectoryString TypeOfSubstitution 'get ' : 
    Org.BouncyCastle.Asn1.X509.GeneralName ThirdPerson 'get ' : 
    Org.BouncyCastle.Asn1.X509.IssuerSerial CertRef 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Country(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TypeOfSubstitution(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ThirdPerson(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CertRef(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority, Org.BouncyCastle.Asn1.X500.DirectoryString[], Org.BouncyCastle.Asn1.DerObjectIdentifier[], System.String, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier Rechtsanwltin : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Rechtsanwalt : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Rechtsbeistand : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Steuerberaterin : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Steuerberater : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Steuerbevollmchtigte : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Steuerbevollmchtigter : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Notarin : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Notar : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Notarvertreterin : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Notarvertreter : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Notariatsverwalterin : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Notariatsverwalter : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Wirtschaftsprferin : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Wirtschaftsprfer : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier VereidigteBuchprferin : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier VereidigterBuchprfer : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Patentanwltin : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Patentanwalt : Public, Static, InitOnly
  Properties:
    Org.BouncyCastle.Asn1.Asn1OctetString AddProfessionInfo 'get ' : 
    Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority NamingAuthority 'get ' : 
    System.String RegistrationNumber 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    get_AddProfessionInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NamingAuthority(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetProfessionItems(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetProfessionOids(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_RegistrationNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Org.BouncyCastle.Asn1.IsisMtt.X509.Restriction: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X500.DirectoryString RestrictionString 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_RestrictionString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Kisa.KisaObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSeedCbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdNpkiAppCmsSeedWrap : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.LazyAsn1InputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1InputStream
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateDerSequence(DefiniteLengthInputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateDerSet(DefiniteLengthInputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.LazyDerSequence: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerSequence
    Void .ctor(Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Asn1Encodable Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig
    get_Count(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.LazyDerSet: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerSet
    Void .ctor(Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Asn1Encodable Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig
    get_Count(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Encode(DerOutputStream): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Asn1.Microsoft.MicrosoftObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier Microsoft : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier MicrosoftCertTemplateV1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier MicrosoftCAVersion : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier MicrosoftPrevCACertHash : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier MicrosoftCertTemplateV2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier MicrosoftAppPolicies : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Misc.Cast5CbcParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 KeyLength 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetIV(): PrivateScope, Public, HideBySig
    get_KeyLength(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Misc.IdeaCbcPar: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.Asn1OctetString iv : Assembly
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetIV(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Misc.MiscObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier Netscape : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier NetscapeCertType : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier NetscapeBaseUrl : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier NetscapeRevocationUrl : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier NetscapeCARevocationUrl : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier NetscapeRenewalUrl : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier NetscapeCAPolicyUrl : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier NetscapeSslServerName : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier NetscapeCertComment : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier VerisignCzagExtension : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier VerisignDnbDunsNumber : Public, Static, InitOnly
    System.String Novell : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier NovellSecurityAttribs : Public, Static, InitOnly
    System.String Entrust : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier EntrustVersionExtension : Public, Static, InitOnly
    System.String Verisign = 2.16.840.1.113733.1 : Assembly, Static, Literal, HasDefault
Class Org.BouncyCastle.Asn1.Misc.NetscapeCertType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerBitString
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerBitString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 SslClient = 128 : Public, Static, Literal, HasDefault
    Int32 SslServer = 64 : Public, Static, Literal, HasDefault
    Int32 Smime = 32 : Public, Static, Literal, HasDefault
    Int32 ObjectSigning = 16 : Public, Static, Literal, HasDefault
    Int32 Reserved = 8 : Public, Static, Literal, HasDefault
    Int32 SslCA = 4 : Public, Static, Literal, HasDefault
    Int32 SmimeCA = 2 : Public, Static, Literal, HasDefault
    Int32 ObjectSigningCA = 1 : Public, Static, Literal, HasDefault
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Misc.NetscapeRevocationUrl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerIA5String
    Void .ctor(Org.BouncyCastle.Asn1.DerIA5String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Misc.VerisignCzagExtension: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerIA5String
    Void .ctor(Org.BouncyCastle.Asn1.DerIA5String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Mozilla.PublicKeyAndChallenge: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo SubjectPublicKeyInfo 'get ' : 
    Org.BouncyCastle.Asn1.DerIA5String Challenge 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    get_SubjectPublicKeyInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_Challenge(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Asn1.Nist.NistNamedCurves: AutoLayout, AnsiClass, Class, Public, Sealed
  Properties:
    System.Collections.IEnumerable Names 'get ' : 
  Methods:
    GetByName(String): PrivateScope, Public, Static, HideBySig
    GetByOid(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    GetOid(String): PrivateScope, Public, Static, HideBySig
    GetName(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    get_Names(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Org.BouncyCastle.Asn1.Nist.NistObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier NistAlgorithm : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier HashAlgs : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSha256 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSha384 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSha512 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSha224 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSha512_224 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSha512_256 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Aes : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes128Ecb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes128Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes128Ofb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes128Cfb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes128Wrap : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes128Gcm : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes128Ccm : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes192Ecb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes192Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes192Ofb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes192Cfb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes192Wrap : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes192Gcm : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes192Ccm : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes256Ecb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes256Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes256Ofb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes256Cfb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes256Wrap : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes256Gcm : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAes256Ccm : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdDsaWithSha2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DsaWithSha224 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DsaWithSha256 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DsaWithSha384 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DsaWithSha512 : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Ntt.NttObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCamellia128Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCamellia192Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCamellia256Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCamellia128Wrap : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCamellia192Wrap : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCamellia256Wrap : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Ocsp.BasicOcspResponse: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.ResponseData, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.DerBitString, Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Ocsp.ResponseData TbsResponseData 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier SignatureAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString Signature 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Sequence Certs 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetTbsResponseData(): PrivateScope, Public, HideBySig (Obsolete)
    get_TbsResponseData(): PrivateScope, Public, HideBySig, SpecialName
    GetSignatureAlgorithm(): PrivateScope, Public, HideBySig (Obsolete)
    get_SignatureAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    GetSignature(): PrivateScope, Public, HideBySig (Obsolete)
    get_Signature(): PrivateScope, Public, HideBySig, SpecialName
    GetCerts(): PrivateScope, Public, HideBySig (Obsolete)
    get_Certs(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ocsp.CertID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1OctetString, Org.BouncyCastle.Asn1.Asn1OctetString, Org.BouncyCastle.Asn1.DerInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier HashAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString IssuerNameHash 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString IssuerKeyHash 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger SerialNumber 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_IssuerNameHash(): PrivateScope, Public, HideBySig, SpecialName
    get_IssuerKeyHash(): PrivateScope, Public, HideBySig, SpecialName
    get_SerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ocsp.CertStatus: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.RevokedInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1TaggedObject): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Int32 TagNo 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Status 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_TagNo(): PrivateScope, Public, HideBySig, SpecialName
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ocsp.CrlID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerIA5String CrlUrl 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger CrlNum 'get ' : 
    Org.BouncyCastle.Asn1.DerGeneralizedTime CrlTime 'get ' : 
  Methods:
    get_CrlUrl(): PrivateScope, Public, HideBySig, SpecialName
    get_CrlNum(): PrivateScope, Public, HideBySig, SpecialName
    get_CrlTime(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ocsp.OcspObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier PkixOcsp : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PkixOcspBasic : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PkixOcspNonce : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PkixOcspCrl : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PkixOcspResponse : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PkixOcspNocheck : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PkixOcspArchiveCutoff : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PkixOcspServiceLocator : Public, Static, InitOnly
    System.String PkixOcspId = 1.3.6.1.5.5.7.48.1 : Assembly, Static, Literal, HasDefault
Class Org.BouncyCastle.Asn1.Ocsp.OcspRequest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.TbsRequest, Org.BouncyCastle.Asn1.Ocsp.Signature): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Ocsp.TbsRequest TbsRequest 'get ' : 
    Org.BouncyCastle.Asn1.Ocsp.Signature OptionalSignature 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_TbsRequest(): PrivateScope, Public, HideBySig, SpecialName
    get_OptionalSignature(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ocsp.OcspResponse: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.OcspResponseStatus, Org.BouncyCastle.Asn1.Ocsp.ResponseBytes): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Ocsp.OcspResponseStatus ResponseStatus 'get ' : 
    Org.BouncyCastle.Asn1.Ocsp.ResponseBytes ResponseBytes 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_ResponseStatus(): PrivateScope, Public, HideBySig, SpecialName
    get_ResponseBytes(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ocsp.OcspResponseStatus: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerEnumerated
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerEnumerated): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Successful = 0 : Public, Static, Literal, HasDefault
    Int32 MalformedRequest = 1 : Public, Static, Literal, HasDefault
    Int32 InternalError = 2 : Public, Static, Literal, HasDefault
    Int32 TryLater = 3 : Public, Static, Literal, HasDefault
    Int32 SignatureRequired = 5 : Public, Static, Literal, HasDefault
    Int32 Unauthorized = 6 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Asn1.Ocsp.Request: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.CertID, Org.BouncyCastle.Asn1.X509.X509Extensions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Ocsp.CertID ReqCert 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions SingleRequestExtensions 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_ReqCert(): PrivateScope, Public, HideBySig, SpecialName
    get_SingleRequestExtensions(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ocsp.ResponderID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509Name): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Org.BouncyCastle.Asn1.X509.X509Name Name 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetKeyHash(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ocsp.ResponseBytes: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier ResponseType 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString Response 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_ResponseType(): PrivateScope, Public, HideBySig, SpecialName
    get_Response(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ocsp.ResponseData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.Ocsp.ResponderID, Org.BouncyCastle.Asn1.DerGeneralizedTime, Org.BouncyCastle.Asn1.Asn1Sequence, Org.BouncyCastle.Asn1.X509.X509Extensions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.ResponderID, Org.BouncyCastle.Asn1.DerGeneralizedTime, Org.BouncyCastle.Asn1.Asn1Sequence, Org.BouncyCastle.Asn1.X509.X509Extensions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.Ocsp.ResponderID ResponderID 'get ' : 
    Org.BouncyCastle.Asn1.DerGeneralizedTime ProducedAt 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Sequence Responses 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions ResponseExtensions 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_ResponderID(): PrivateScope, Public, HideBySig, SpecialName
    get_ProducedAt(): PrivateScope, Public, HideBySig, SpecialName
    get_Responses(): PrivateScope, Public, HideBySig, SpecialName
    get_ResponseExtensions(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ocsp.RevokedInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerGeneralizedTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerGeneralizedTime, Org.BouncyCastle.Asn1.X509.CrlReason): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerGeneralizedTime RevocationTime 'get ' : 
    Org.BouncyCastle.Asn1.X509.CrlReason RevocationReason 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_RevocationTime(): PrivateScope, Public, HideBySig, SpecialName
    get_RevocationReason(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ocsp.ServiceLocator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509Name): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509Name, Org.BouncyCastle.Asn1.Asn1Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.X509Name Issuer 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Object Locator 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Issuer(): PrivateScope, Public, HideBySig, SpecialName
    get_Locator(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ocsp.Signature: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.DerBitString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.DerBitString, Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier signatureAlgorithm : Assembly
    Org.BouncyCastle.Asn1.DerBitString signatureValue : Assembly
    Org.BouncyCastle.Asn1.Asn1Sequence certs : Assembly
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier SignatureAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString SignatureValue 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Sequence Certs 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_SignatureAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_SignatureValue(): PrivateScope, Public, HideBySig, SpecialName
    get_Certs(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ocsp.SingleResponse: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.CertID, Org.BouncyCastle.Asn1.Ocsp.CertStatus, Org.BouncyCastle.Asn1.DerGeneralizedTime, Org.BouncyCastle.Asn1.DerGeneralizedTime, Org.BouncyCastle.Asn1.X509.X509Extensions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Ocsp.CertID CertId 'get ' : 
    Org.BouncyCastle.Asn1.Ocsp.CertStatus CertStatus 'get ' : 
    Org.BouncyCastle.Asn1.DerGeneralizedTime ThisUpdate 'get ' : 
    Org.BouncyCastle.Asn1.DerGeneralizedTime NextUpdate 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions SingleExtensions 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_CertId(): PrivateScope, Public, HideBySig, SpecialName
    get_CertStatus(): PrivateScope, Public, HideBySig, SpecialName
    get_ThisUpdate(): PrivateScope, Public, HideBySig, SpecialName
    get_NextUpdate(): PrivateScope, Public, HideBySig, SpecialName
    get_SingleExtensions(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Ocsp.TbsRequest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralName, Org.BouncyCastle.Asn1.Asn1Sequence, Org.BouncyCastle.Asn1.X509.X509Extensions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.X509.GeneralName RequestorName 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Sequence RequestList 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions RequestExtensions 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_RequestorName(): PrivateScope, Public, HideBySig, SpecialName
    get_RequestList(): PrivateScope, Public, HideBySig, SpecialName
    get_RequestExtensions(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.OidTokenizer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasMoreTokens 'get ' : 
  Methods:
    get_HasMoreTokens(): PrivateScope, Public, HideBySig, SpecialName
    NextToken(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.Oiw.ElGamalParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerInteger p : Assembly
    Org.BouncyCastle.Asn1.DerInteger g : Assembly
  Properties:
    Org.BouncyCastle.Math.BigInteger P 'get ' : 
    Org.BouncyCastle.Math.BigInteger G 'get ' : 
  Methods:
    get_P(): PrivateScope, Public, HideBySig, SpecialName
    get_G(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Oiw.OiwObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier MD4WithRsa : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier MD5WithRsa : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier MD4WithRsaEncryption : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DesEcb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DesCbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DesOfb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DesCfb : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DesEde : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSha1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DsaWithSha1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Sha1WithRsa : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ElGamalAlgorithm : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Pkcs.AttributePkcs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier AttrType 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set AttrValues 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_AttrType(): PrivateScope, Public, HideBySig, SpecialName
    get_AttrValues(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.AuthenticatedSafe: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Pkcs.ContentInfo[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetContentInfo(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.CertBag: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier CertID 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Object CertValue 'get ' : 
  Methods:
    get_CertID(): PrivateScope, Public, HideBySig, SpecialName
    get_CertValue(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.CertificationRequest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Pkcs.CertificationRequestInfo, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.DerBitString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier SignatureAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString Signature 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetCertificationRequestInfo(): PrivateScope, Public, HideBySig
    get_SignatureAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_Signature(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.CertificationRequestInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509Name, Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo, Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerInteger version : Assembly
    Org.BouncyCastle.Asn1.X509.X509Name subject : Assembly
    Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo subjectPKInfo : Assembly
    Org.BouncyCastle.Asn1.Asn1Set attributes : Assembly
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Name Subject 'get ' : 
    Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo SubjectPublicKeyInfo 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set Attributes 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_Subject(): PrivateScope, Public, HideBySig, SpecialName
    get_SubjectPublicKeyInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.ContentInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier ContentType 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Content 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_ContentType(): PrivateScope, Public, HideBySig, SpecialName
    get_Content(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.DHParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerInteger p : Assembly
    Org.BouncyCastle.Asn1.DerInteger g : Assembly
    Org.BouncyCastle.Asn1.DerInteger l : Assembly
  Properties:
    Org.BouncyCastle.Math.BigInteger P 'get ' : 
    Org.BouncyCastle.Math.BigInteger G 'get ' : 
    Org.BouncyCastle.Math.BigInteger L 'get ' : 
  Methods:
    get_P(): PrivateScope, Public, HideBySig, SpecialName
    get_G(): PrivateScope, Public, HideBySig, SpecialName
    get_L(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.EncryptedData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier ContentType 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier EncryptionAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString Content 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_ContentType(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptionAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_Content(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.EncryptedPrivateKeyInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier EncryptionAlgorithm 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_EncryptionAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    GetEncryptedData(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier ObjectID 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Parameters 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_ObjectID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.EncryptionScheme: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Asn1Object Asn1Object 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Asn1Object(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.IssuerAndSerialNumber: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509Name, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509Name, Org.BouncyCastle.Asn1.DerInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.X509Name Name 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger CertificateSerialNumber 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_CertificateSerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.KeyDerivationFunc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Asn1.Pkcs.MacData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.DigestInfo, Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.X509.DigestInfo digInfo : Assembly
    Byte[] salt : Assembly
    Org.BouncyCastle.Math.BigInteger iterationCount : Assembly
  Properties:
    Org.BouncyCastle.Asn1.X509.DigestInfo Mac 'get ' : 
    Org.BouncyCastle.Math.BigInteger IterationCount 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Mac(): PrivateScope, Public, HideBySig, SpecialName
    GetSalt(): PrivateScope, Public, HideBySig
    get_IterationCount(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.PbeParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger IterationCount 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetSalt(): PrivateScope, Public, HideBySig
    get_IterationCount(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.PbeS2Parameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Pkcs.KeyDerivationFunc, Org.BouncyCastle.Asn1.Pkcs.EncryptionScheme): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
  Properties:
    Org.BouncyCastle.Asn1.Pkcs.KeyDerivationFunc KeyDerivationFunc 'get ' : 
    Org.BouncyCastle.Asn1.Pkcs.EncryptionScheme EncryptionScheme 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_KeyDerivationFunc(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptionScheme(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.Pbkdf2Params: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger IterationCount 'get ' : 
    Org.BouncyCastle.Math.BigInteger KeyLength 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetSalt(): PrivateScope, Public, HideBySig
    get_IterationCount(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyLength(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.Pfx: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Pkcs.ContentInfo, Org.BouncyCastle.Asn1.Pkcs.MacData): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Pkcs.ContentInfo AuthSafe 'get ' : 
    Org.BouncyCastle.Asn1.Pkcs.MacData MacData 'get ' : 
  Methods:
    get_AuthSafe(): PrivateScope, Public, HideBySig, SpecialName
    get_MacData(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.Pkcs12PbeParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger Iterations 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Iterations(): PrivateScope, Public, HideBySig, SpecialName
    GetIV(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.PkcsObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier RsaEncryption : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier MD2WithRsaEncryption : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier MD4WithRsaEncryption : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier MD5WithRsaEncryption : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Sha1WithRsaEncryption : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SrsaOaepEncryptionSet : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdRsaesOaep : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdMgf1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdPSpecified : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdRsassaPss : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Sha256WithRsaEncryption : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Sha384WithRsaEncryption : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Sha512WithRsaEncryption : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Sha224WithRsaEncryption : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DhKeyAgreement : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PbeWithMD2AndDesCbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PbeWithMD2AndRC2Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PbeWithMD5AndDesCbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PbeWithMD5AndRC2Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PbeWithSha1AndDesCbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PbeWithSha1AndRC2Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdPbeS2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdPbkdf2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DesEde3Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier RC2Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier MD2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier MD4 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier MD5 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdHmacWithSha1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdHmacWithSha224 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdHmacWithSha256 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdHmacWithSha384 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdHmacWithSha512 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Data : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SignedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier EnvelopedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SignedAndEnvelopedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DigestedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier EncryptedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Pkcs9AtEmailAddress : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Pkcs9AtUnstructuredName : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Pkcs9AtContentType : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Pkcs9AtMessageDigest : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Pkcs9AtSigningTime : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Pkcs9AtCounterSignature : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Pkcs9AtChallengePassword : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Pkcs9AtUnstructuredAddress : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Pkcs9AtExtendedCertificateAttributes : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Pkcs9AtSigningDescription : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Pkcs9AtExtensionRequest : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Pkcs9AtSmimeCapabilities : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Pkcs9AtFriendlyName : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Pkcs9AtLocalKeyID : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier X509CertType : Public, Static, InitOnly (Obsolete)
    Org.BouncyCastle.Asn1.DerObjectIdentifier X509Certificate : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SdsiCertificate : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier X509Crl : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAlgPwriKek : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PreferSignedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CannotDecryptAny : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SmimeCapabilitiesVersions : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAReceiptRequest : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCTAuthData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCTTstInfo : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCTCompressedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCTAuthEnvelopedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCTTimestampedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCtiEtsProofOfOrigin : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCtiEtsProofOfReceipt : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCtiEtsProofOfDelivery : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCtiEtsProofOfSender : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCtiEtsProofOfApproval : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdCtiEtsProofOfCreation : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAContentHint : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAMsgSigDigest : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAContentReference : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAEncrypKeyPref : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAASigningCertificate : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAASigningCertificateV2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAContentIdentifier : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAASignatureTimeStampToken : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAEtsSigPolicyID : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAEtsCommitmentType : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAEtsSignerLocation : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAEtsSignerAttr : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAEtsOtherSigCert : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAEtsContentTimestamp : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAEtsCertificateRefs : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAEtsRevocationRefs : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAEtsCertValues : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAEtsRevocationValues : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAEtsEscTimeStamp : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAEtsCertCrlTimestamp : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAEtsArchiveTimestamp : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAASigPolicyID : Public, Static, InitOnly (Obsolete)
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAACommitmentType : Public, Static, InitOnly (Obsolete)
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAASignerLocation : Public, Static, InitOnly (Obsolete)
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAAOtherSigCert : Public, Static, InitOnly (Obsolete)
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSpqEtsUri : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSpqEtsUNotice : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier KeyBag : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Pkcs8ShroudedKeyBag : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CertBag : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CrlBag : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecretBag : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SafeContentsBag : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PbeWithShaAnd128BitRC4 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PbeWithShaAnd40BitRC4 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PbeWithShaAnd3KeyTripleDesCbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PbeWithShaAnd2KeyTripleDesCbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PbeWithShaAnd128BitRC2Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PbewithShaAnd40BitRC2Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAlgCms3DesWrap : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAlgCmsRC2Wrap : Public, Static, InitOnly
    System.String Pkcs1 = 1.2.840.113549.1.1 : Public, Static, Literal, HasDefault
    System.String Pkcs3 = 1.2.840.113549.1.3 : Public, Static, Literal, HasDefault
    System.String Pkcs5 = 1.2.840.113549.1.5 : Public, Static, Literal, HasDefault
    System.String EncryptionAlgorithm = 1.2.840.113549.3 : Public, Static, Literal, HasDefault
    System.String DigestAlgorithm = 1.2.840.113549.2 : Public, Static, Literal, HasDefault
    System.String Pkcs7 = 1.2.840.113549.1.7 : Public, Static, Literal, HasDefault
    System.String Pkcs9 = 1.2.840.113549.1.9 : Public, Static, Literal, HasDefault
    System.String CertTypes = 1.2.840.113549.1.9.22 : Public, Static, Literal, HasDefault
    System.String CrlTypes = 1.2.840.113549.1.9.23 : Public, Static, Literal, HasDefault
    System.String IdCT = 1.2.840.113549.1.9.16.1 : Public, Static, Literal, HasDefault
    System.String IdCti = 1.2.840.113549.1.9.16.6 : Public, Static, Literal, HasDefault
    System.String IdAA = 1.2.840.113549.1.9.16.2 : Public, Static, Literal, HasDefault
    System.String IdSpq = 1.2.840.113549.1.9.16.5 : Public, Static, Literal, HasDefault
    System.String Pkcs12 = 1.2.840.113549.1.12 : Public, Static, Literal, HasDefault
    System.String BagTypes = 1.2.840.113549.1.12.10.1 : Public, Static, Literal, HasDefault
    System.String Pkcs12PbeIds = 1.2.840.113549.1.12.1 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Asn1.Pkcs.PrivateKeyInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1Object, Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier AlgorithmID 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Object PrivateKey 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set Attributes 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_AlgorithmID(): PrivateScope, Public, HideBySig, SpecialName
    get_PrivateKey(): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.RC2CbcParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerInteger version : Assembly
    Org.BouncyCastle.Asn1.Asn1OctetString iv : Assembly
  Properties:
    Org.BouncyCastle.Math.BigInteger RC2ParameterVersion 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_RC2ParameterVersion(): PrivateScope, Public, HideBySig, SpecialName
    GetIV(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.RsaesOaepParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier DefaultHashAlgorithm : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier DefaultMaskGenFunction : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier DefaultPSourceAlgorithm : Public, Static, InitOnly
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier HashAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier MaskGenAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier PSourceAlgorithm 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_MaskGenAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_PSourceAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.RsaPrivateKeyStructure: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger Modulus 'get ' : 
    Org.BouncyCastle.Math.BigInteger PublicExponent 'get ' : 
    Org.BouncyCastle.Math.BigInteger PrivateExponent 'get ' : 
    Org.BouncyCastle.Math.BigInteger Prime1 'get ' : 
    Org.BouncyCastle.Math.BigInteger Prime2 'get ' : 
    Org.BouncyCastle.Math.BigInteger Exponent1 'get ' : 
    Org.BouncyCastle.Math.BigInteger Exponent2 'get ' : 
    Org.BouncyCastle.Math.BigInteger Coefficient 'get ' : 
  Methods:
    get_Modulus(): PrivateScope, Public, HideBySig, SpecialName
    get_PublicExponent(): PrivateScope, Public, HideBySig, SpecialName
    get_PrivateExponent(): PrivateScope, Public, HideBySig, SpecialName
    get_Prime1(): PrivateScope, Public, HideBySig, SpecialName
    get_Prime2(): PrivateScope, Public, HideBySig, SpecialName
    get_Exponent1(): PrivateScope, Public, HideBySig, SpecialName
    get_Exponent2(): PrivateScope, Public, HideBySig, SpecialName
    get_Coefficient(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.RsassaPssParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.DerInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier DefaultHashAlgorithm : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier DefaultMaskGenFunction : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerInteger DefaultSaltLength : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerInteger DefaultTrailerField : Public, Static, InitOnly
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier HashAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier MaskGenAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger SaltLength 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger TrailerField 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_MaskGenAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_SaltLength(): PrivateScope, Public, HideBySig, SpecialName
    get_TrailerField(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.SafeBag: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Object, Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier BagID 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Object BagValue 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set BagAttributes 'get ' : 
  Methods:
    get_BagID(): PrivateScope, Public, HideBySig, SpecialName
    get_BagValue(): PrivateScope, Public, HideBySig, SpecialName
    get_BagAttributes(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.SignedData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Asn1.Pkcs.ContentInfo, Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set DigestAlgorithms 'get ' : 
    Org.BouncyCastle.Asn1.Pkcs.ContentInfo ContentInfo 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set Certificates 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set Crls 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set SignerInfos 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_DigestAlgorithms(): PrivateScope, Public, HideBySig, SpecialName
    get_ContentInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_Certificates(): PrivateScope, Public, HideBySig, SpecialName
    get_Crls(): PrivateScope, Public, HideBySig, SpecialName
    get_SignerInfos(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Pkcs.SignerInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.Pkcs.IssuerAndSerialNumber, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1OctetString, Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.Pkcs.IssuerAndSerialNumber IssuerAndSerialNumber 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set AuthenticatedAttributes 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier DigestAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString EncryptedDigest 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier DigestEncryptionAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set UnauthenticatedAttributes 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_IssuerAndSerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_AuthenticatedAttributes(): PrivateScope, Public, HideBySig, SpecialName
    get_DigestAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptedDigest(): PrivateScope, Public, HideBySig, SpecialName
    get_DigestEncryptionAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_UnauthenticatedAttributes(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Sec.ECPrivateKeyStructure: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Asn1.DerBitString, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetKey(): PrivateScope, Public, HideBySig
    GetPublicKey(): PrivateScope, Public, HideBySig
    GetParameters(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves: AutoLayout, AnsiClass, Class, Public, Sealed
  Properties:
    System.Collections.IEnumerable Names 'get ' : 
  Methods:
    GetByName(String): PrivateScope, Public, Static, HideBySig
    GetByOid(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    GetOid(String): PrivateScope, Public, Static, HideBySig
    GetName(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    get_Names(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Org.BouncyCastle.Asn1.X9.X9ECParametersHolder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Org.BouncyCastle.Asn1.X9.X9ECParameters Parameters 'get ' : 
  Methods:
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp112r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp112r2Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp128r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp128r2Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp160k1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp160r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp160r2Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp192k1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp192r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp224k1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp224r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp256k1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp256r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp384r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp521r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect113r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect113r2Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect131r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect131r2Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect163k1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect163r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect163r2Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect193r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect193r2Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect233k1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect233r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect239k1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect283k1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect283r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect409k1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect409r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect571k1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect571r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.Sec.SecObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier EllipticCurve : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT163k1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT163r1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT239k1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT113r1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT113r2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecP112r1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecP112r2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecP160r1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecP160k1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecP256k1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT163r2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT283k1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT283r1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT131r1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT131r2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT193r1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT193r2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT233k1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT233r1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecP128r1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecP128r2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecP160r2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecP192k1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecP224k1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecP224r1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecP384r1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecP521r1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT409k1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT409r1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT571k1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecT571r1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecP192r1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SecP256r1 : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Smime.SmimeAttributes: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier SmimeCapabilities : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier EncrypKeyPref : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Smime.SmimeCapabilities: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier PreferSignedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CannotDecryptAny : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SmimeCapabilitesVersions : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DesCbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DesEde3Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier RC2Cbc : Public, Static, InitOnly
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetCapabilities(DerObjectIdentifier): PrivateScope, Public, HideBySig (Obsolete)
    GetCapabilitiesForOid(DerObjectIdentifier): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.AttributeX509: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier AttrType 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Set AttrValues 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_AttrType(): PrivateScope, Public, HideBySig, SpecialName
    GetAttributeValues(): PrivateScope, Public, HideBySig
    get_AttrValues(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Smime.SmimeCapabilitiesAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X509.AttributeX509
    Void .ctor(Org.BouncyCastle.Asn1.Smime.SmimeCapabilityVector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Asn1.Smime.SmimeCapability: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier PreferSignedData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CannotDecryptAny : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SmimeCapabilitiesVersions : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DesCbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DesEde3Cbc : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier RC2Cbc : Public, Static, InitOnly
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier CapabilityID 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Object Parameters 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_CapabilityID(): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Smime.SmimeCapabilityVector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddCapability(DerObjectIdentifier): PrivateScope, Public, HideBySig
    AddCapability(DerObjectIdentifier, Int32): PrivateScope, Public, HideBySig
    AddCapability(DerObjectIdentifier, Asn1Encodable): PrivateScope, Public, HideBySig
    ToAsn1EncodableVector(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.Smime.SmimeEncryptionKeyPreferenceAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X509.AttributeX509
    Void .ctor(Org.BouncyCastle.Asn1.Cms.IssuerAndSerialNumber): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.RecipientKeyIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.IEnumerable Names 'get ' : 
  Methods:
    GetByName(String): PrivateScope, Public, Static, HideBySig
    GetByOid(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    GetOid(String): PrivateScope, Public, Static, HideBySig
    GetName(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    get_Names(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetOid(Int16, Boolean): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP160r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP160t1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP192r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP192t1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP224r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP224t1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP256r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP256t1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP320r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP320t1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP384r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP384t1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP512r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP512t1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier TeleTrusTAlgorithm : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier RipeMD160 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier RipeMD128 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier RipeMD256 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier TeleTrusTRsaSignatureAlgorithm : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier RsaSignatureWithRipeMD160 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier RsaSignatureWithRipeMD128 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier RsaSignatureWithRipeMD256 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ECSign : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ECSignWithSha1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ECSignWithRipeMD160 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier EccBrainpool : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier EllipticCurve : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier VersionOne : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BrainpoolP160R1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BrainpoolP160T1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BrainpoolP192R1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BrainpoolP192T1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BrainpoolP224R1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BrainpoolP224T1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BrainpoolP256R1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BrainpoolP256T1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BrainpoolP320R1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BrainpoolP320T1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BrainpoolP384R1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BrainpoolP384T1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BrainpoolP512R1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BrainpoolP512T1 : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Tsp.Accuracy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.DerInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Seconds 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger Millis 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger Micros 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Seconds(): PrivateScope, Public, HideBySig, SpecialName
    get_Millis(): PrivateScope, Public, HideBySig, SpecialName
    get_Micros(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Tsp.MessageImprint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier HashAlgorithm 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    GetHashedMessage(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Tsp.TimeStampReq: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Tsp.MessageImprint, Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.DerBoolean, Org.BouncyCastle.Asn1.X509.X509Extensions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.Tsp.MessageImprint MessageImprint 'get ' : 
    Org.BouncyCastle.Asn1.DerObjectIdentifier ReqPolicy 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger Nonce 'get ' : 
    Org.BouncyCastle.Asn1.DerBoolean CertReq 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions Extensions 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_MessageImprint(): PrivateScope, Public, HideBySig, SpecialName
    get_ReqPolicy(): PrivateScope, Public, HideBySig, SpecialName
    get_Nonce(): PrivateScope, Public, HideBySig, SpecialName
    get_CertReq(): PrivateScope, Public, HideBySig, SpecialName
    get_Extensions(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Tsp.TimeStampResp: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo, Org.BouncyCastle.Asn1.Cms.ContentInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo Status 'get ' : 
    Org.BouncyCastle.Asn1.Cms.ContentInfo TimeStampToken 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    get_TimeStampToken(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Tsp.TstInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Tsp.MessageImprint, Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.DerGeneralizedTime, Org.BouncyCastle.Asn1.Tsp.Accuracy, Org.BouncyCastle.Asn1.DerBoolean, Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.X509.GeneralName, Org.BouncyCastle.Asn1.X509.X509Extensions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.Tsp.MessageImprint MessageImprint 'get ' : 
    Org.BouncyCastle.Asn1.DerObjectIdentifier Policy 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger SerialNumber 'get ' : 
    Org.BouncyCastle.Asn1.Tsp.Accuracy Accuracy 'get ' : 
    Org.BouncyCastle.Asn1.DerGeneralizedTime GenTime 'get ' : 
    Org.BouncyCastle.Asn1.DerBoolean Ordering 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger Nonce 'get ' : 
    Org.BouncyCastle.Asn1.X509.GeneralName Tsa 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions Extensions 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_MessageImprint(): PrivateScope, Public, HideBySig, SpecialName
    get_Policy(): PrivateScope, Public, HideBySig, SpecialName
    get_SerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_Accuracy(): PrivateScope, Public, HideBySig, SpecialName
    get_GenTime(): PrivateScope, Public, HideBySig, SpecialName
    get_Ordering(): PrivateScope, Public, HideBySig, SpecialName
    get_Nonce(): PrivateScope, Public, HideBySig, SpecialName
    get_Tsa(): PrivateScope, Public, HideBySig, SpecialName
    get_Extensions(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Utilities.Asn1Dump: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    DumpAsString(Object): PrivateScope, Public, Static, HideBySig (Obsolete)
    DumpAsString(Asn1Encodable): PrivateScope, Public, Static, HideBySig
    DumpAsString(Asn1Encodable, Boolean): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Asn1.Utilities.Dump: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    Main(String[]): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Asn1.X500.DirectoryString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
    Org.BouncyCastle.Asn1.IAsn1String
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetString(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.AccessDescription: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.X509.GeneralName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdADCAIssuers : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdADOcsp : Public, Static, InitOnly
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier AccessMethod 'get ' : 
    Org.BouncyCastle.Asn1.X509.GeneralName AccessLocation 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_AccessMethod(): PrivateScope, Public, HideBySig, SpecialName
    get_AccessLocation(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.AttCertIssuer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralNames): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.V2Form): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Fields:
    Org.BouncyCastle.Asn1.Asn1Encodable obj : Assembly, InitOnly
    Org.BouncyCastle.Asn1.Asn1Object choiceObj : Assembly, InitOnly
  Properties:
    Org.BouncyCastle.Asn1.Asn1Encodable Issuer 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_Issuer(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.AttCertValidityPeriod: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerGeneralizedTime, Org.BouncyCastle.Asn1.DerGeneralizedTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerGeneralizedTime NotBeforeTime 'get ' : 
    Org.BouncyCastle.Asn1.DerGeneralizedTime NotAfterTime 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_NotBeforeTime(): PrivateScope, Public, HideBySig, SpecialName
    get_NotAfterTime(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.AttributeCertificate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.AttributeCertificateInfo, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.DerBitString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.AttributeCertificateInfo ACInfo 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier SignatureAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString SignatureValue 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_ACInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_SignatureAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_SignatureValue(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.AttributeCertificateInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Fields:
    Org.BouncyCastle.Asn1.DerInteger version : Assembly, InitOnly
    Org.BouncyCastle.Asn1.X509.Holder holder : Assembly, InitOnly
    Org.BouncyCastle.Asn1.X509.AttCertIssuer issuer : Assembly, InitOnly
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier signature : Assembly, InitOnly
    Org.BouncyCastle.Asn1.DerInteger serialNumber : Assembly, InitOnly
    Org.BouncyCastle.Asn1.X509.AttCertValidityPeriod attrCertValidityPeriod : Assembly, InitOnly
    Org.BouncyCastle.Asn1.Asn1Sequence attributes : Assembly, InitOnly
    Org.BouncyCastle.Asn1.DerBitString issuerUniqueID : Assembly, InitOnly
    Org.BouncyCastle.Asn1.X509.X509Extensions extensions : Assembly, InitOnly
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Version 'get ' : 
    Org.BouncyCastle.Asn1.X509.Holder Holder 'get ' : 
    Org.BouncyCastle.Asn1.X509.AttCertIssuer Issuer 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier Signature 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger SerialNumber 'get ' : 
    Org.BouncyCastle.Asn1.X509.AttCertValidityPeriod AttrCertValidityPeriod 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Sequence Attributes 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString IssuerUniqueID 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions Extensions 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_Holder(): PrivateScope, Public, HideBySig, SpecialName
    get_Issuer(): PrivateScope, Public, HideBySig, SpecialName
    get_Signature(): PrivateScope, Public, HideBySig, SpecialName
    get_SerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_AttrCertValidityPeriod(): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    get_IssuerUniqueID(): PrivateScope, Public, HideBySig, SpecialName
    get_Extensions(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.AttributeTable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Hashtable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Get(DerObjectIdentifier): PrivateScope, Public, HideBySig
    ToHashtable(): PrivateScope, Public, HideBySig (Obsolete)
    ToDictionary(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.X509.AuthorityInformationAccess: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.X509.GeneralName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(Org.BouncyCastle.Asn1.X509.AccessDescription): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetAccessDescriptions(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.AuthorityKeyIdentifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo, Org.BouncyCastle.Asn1.X509.GeneralNames, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralNames, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Org.BouncyCastle.Asn1.X509.GeneralNames, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.Asn1OctetString keyidentifier : Assembly, InitOnly
    Org.BouncyCastle.Asn1.X509.GeneralNames certissuer : Assembly, InitOnly
    Org.BouncyCastle.Asn1.DerInteger certserno : Assembly, InitOnly
  Properties:
    Org.BouncyCastle.Asn1.X509.GeneralNames AuthorityCertIssuer 'get ' : 
    Org.BouncyCastle.Math.BigInteger AuthorityCertSerialNumber 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetKeyIdentifier(): PrivateScope, Public, HideBySig
    get_AuthorityCertIssuer(): PrivateScope, Public, HideBySig, SpecialName
    get_AuthorityCertSerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.BasicConstraints: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger PathLenConstraint 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    IsCA(): PrivateScope, Public, HideBySig
    get_PathLenConstraint(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.CertificateList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Properties:
    Org.BouncyCastle.Asn1.X509.TbsCertificateList TbsCertList 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier SignatureAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString Signature 'get ' : 
    Int32 Version 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Name Issuer 'get ' : 
    Org.BouncyCastle.Asn1.X509.Time ThisUpdate 'get ' : 
    Org.BouncyCastle.Asn1.X509.Time NextUpdate 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_TbsCertList(): PrivateScope, Public, HideBySig, SpecialName
    GetRevokedCertificates(): PrivateScope, Public, HideBySig
    GetRevokedCertificateEnumeration(): PrivateScope, Public, HideBySig
    get_SignatureAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_Signature(): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_Issuer(): PrivateScope, Public, HideBySig, SpecialName
    get_ThisUpdate(): PrivateScope, Public, HideBySig, SpecialName
    get_NextUpdate(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.CertificatePair: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509CertificateStructure, Org.BouncyCastle.Asn1.X509.X509CertificateStructure): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.X509CertificateStructure Forward 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509CertificateStructure Reverse 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    get_Forward(): PrivateScope, Public, HideBySig, SpecialName
    get_Reverse(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Asn1.X509.CertificatePolicies: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.PolicyInformation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.PolicyInformation[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetPolicyInformation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.CertPolicyID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerObjectIdentifier
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Asn1.X509.CrlDistPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.DistributionPoint[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.Asn1Sequence seq : Assembly, InitOnly
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetDistributionPoints(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.CrlNumber: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerInteger
    Void .ctor(Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger Number 'get ' : 
  Methods:
    get_Number(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.CrlReason: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerEnumerated
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerEnumerated): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Unspecified = 0 : Public, Static, Literal, HasDefault
    Int32 KeyCompromise = 1 : Public, Static, Literal, HasDefault
    Int32 CACompromise = 2 : Public, Static, Literal, HasDefault
    Int32 AffiliationChanged = 3 : Public, Static, Literal, HasDefault
    Int32 Superseded = 4 : Public, Static, Literal, HasDefault
    Int32 CessationOfOperation = 5 : Public, Static, Literal, HasDefault
    Int32 CertificateHold = 6 : Public, Static, Literal, HasDefault
    Int32 RemoveFromCrl = 8 : Public, Static, Literal, HasDefault
    Int32 PrivilegeWithdrawn = 9 : Public, Static, Literal, HasDefault
    Int32 AACompromise = 10 : Public, Static, Literal, HasDefault
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.DigestInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier AlgorithmID 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_AlgorithmID(): PrivateScope, Public, HideBySig, SpecialName
    GetDigest(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.DisplayText: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.IAsn1String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Fields:
    Int32 contentType : Assembly, InitOnly
    Org.BouncyCastle.Asn1.IAsn1String contents : Assembly, InitOnly
    Int32 ContentTypeIA5String = 0 : Public, Static, Literal, HasDefault
    Int32 ContentTypeBmpString = 1 : Public, Static, Literal, HasDefault
    Int32 ContentTypeUtf8String = 2 : Public, Static, Literal, HasDefault
    Int32 ContentTypeVisibleString = 3 : Public, Static, Literal, HasDefault
    Int32 DisplayTextMaximumSize = 200 : Public, Static, Literal, HasDefault
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    GetString(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.X509.DistributionPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.DistributionPointName, Org.BouncyCastle.Asn1.X509.ReasonFlags, Org.BouncyCastle.Asn1.X509.GeneralNames): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.X509.DistributionPointName distributionPoint : Assembly, InitOnly
    Org.BouncyCastle.Asn1.X509.ReasonFlags reasons : Assembly, InitOnly
    Org.BouncyCastle.Asn1.X509.GeneralNames cRLIssuer : Assembly, InitOnly
  Properties:
    Org.BouncyCastle.Asn1.X509.DistributionPointName DistributionPointName 'get ' : 
    Org.BouncyCastle.Asn1.X509.ReasonFlags Reasons 'get ' : 
    Org.BouncyCastle.Asn1.X509.GeneralNames CrlIssuer 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_DistributionPointName(): PrivateScope, Public, HideBySig, SpecialName
    get_Reasons(): PrivateScope, Public, HideBySig, SpecialName
    get_CrlIssuer(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.DistributionPointName: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Int32, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralNames): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1TaggedObject): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Fields:
    Org.BouncyCastle.Asn1.Asn1Encodable name : Assembly, InitOnly
    Int32 type : Assembly, InitOnly
    Int32 FullName = 0 : Public, Static, Literal, HasDefault
    Int32 NameRelativeToCrlIssuer = 1 : Public, Static, Literal, HasDefault
  Properties:
    Int32 PointType 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Name 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_PointType(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.DsaParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerInteger p : Assembly, InitOnly
    Org.BouncyCastle.Asn1.DerInteger q : Assembly, InitOnly
    Org.BouncyCastle.Asn1.DerInteger g : Assembly, InitOnly
  Properties:
    Org.BouncyCastle.Math.BigInteger P 'get ' : 
    Org.BouncyCastle.Math.BigInteger Q 'get ' : 
    Org.BouncyCastle.Math.BigInteger G 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_P(): PrivateScope, Public, HideBySig, SpecialName
    get_Q(): PrivateScope, Public, HideBySig, SpecialName
    get_G(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.ExtendedKeyUsage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.KeyPurposeID[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.ArrayList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.IDictionary usageTable : Assembly, InitOnly
    Org.BouncyCastle.Asn1.Asn1Sequence seq : Assembly, InitOnly
  Properties:
    Int32 Count 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    HasKeyPurposeId(KeyPurposeID): PrivateScope, Public, HideBySig
    GetUsages(): PrivateScope, Public, HideBySig (Obsolete)
    GetAllUsages(): PrivateScope, Public, HideBySig
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.GeneralName: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509Name): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Object, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Fields:
    Org.BouncyCastle.Asn1.Asn1Encodable obj : Assembly, InitOnly
    Int32 tag : Assembly, InitOnly
    Int32 OtherName = 0 : Public, Static, Literal, HasDefault
    Int32 Rfc822Name = 1 : Public, Static, Literal, HasDefault
    Int32 DnsName = 2 : Public, Static, Literal, HasDefault
    Int32 X400Address = 3 : Public, Static, Literal, HasDefault
    Int32 DirectoryName = 4 : Public, Static, Literal, HasDefault
    Int32 EdiPartyName = 5 : Public, Static, Literal, HasDefault
    Int32 UniformResourceIdentifier = 6 : Public, Static, Literal, HasDefault
    Int32 IPAddress = 7 : Public, Static, Literal, HasDefault
    Int32 RegisteredID = 8 : Public, Static, Literal, HasDefault
  Properties:
    Int32 TagNo 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Name 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_TagNo(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.GeneralNames: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralName[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetNames(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.GeneralSubtree: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralName, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.GeneralName Base 'get ' : 
    Org.BouncyCastle.Math.BigInteger Minimum 'get ' : 
    Org.BouncyCastle.Math.BigInteger Maximum 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Base(): PrivateScope, Public, HideBySig, SpecialName
    get_Minimum(): PrivateScope, Public, HideBySig, SpecialName
    get_Maximum(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.Holder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1TaggedObject): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.IssuerSerial): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.IssuerSerial, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralNames): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralNames, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.ObjectDigestInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.X509.IssuerSerial baseCertificateID : Assembly, InitOnly
    Org.BouncyCastle.Asn1.X509.GeneralNames entityName : Assembly, InitOnly
    Org.BouncyCastle.Asn1.X509.ObjectDigestInfo objectDigestInfo : Assembly, InitOnly
  Properties:
    Int32 Version 'get ' : 
    Org.BouncyCastle.Asn1.X509.IssuerSerial BaseCertificateID 'get ' : 
    Org.BouncyCastle.Asn1.X509.GeneralNames EntityName 'get ' : 
    Org.BouncyCastle.Asn1.X509.ObjectDigestInfo ObjectDigestInfo 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_BaseCertificateID(): PrivateScope, Public, HideBySig, SpecialName
    get_EntityName(): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectDigestInfo(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.IetfAttrSyntax: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.X509.GeneralNames policyAuthority : Assembly, InitOnly
    Org.BouncyCastle.Asn1.Asn1EncodableVector values : Assembly, InitOnly
    Int32 valueChoice : Assembly
    Int32 ValueOctets = 1 : Public, Static, Literal, HasDefault
    Int32 ValueOid = 2 : Public, Static, Literal, HasDefault
    Int32 ValueUtf8 = 3 : Public, Static, Literal, HasDefault
  Properties:
    Org.BouncyCastle.Asn1.X509.GeneralNames PolicyAuthority 'get ' : 
    Int32 ValueType 'get ' : 
  Methods:
    get_PolicyAuthority(): PrivateScope, Public, HideBySig, SpecialName
    get_ValueType(): PrivateScope, Public, HideBySig, SpecialName
    GetValues(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.IssuerSerial: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralNames, Org.BouncyCastle.Asn1.DerInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.X509.GeneralNames issuer : Assembly, InitOnly
    Org.BouncyCastle.Asn1.DerInteger serial : Assembly, InitOnly
    Org.BouncyCastle.Asn1.DerBitString issuerUid : Assembly, InitOnly
  Properties:
    Org.BouncyCastle.Asn1.X509.GeneralNames Issuer 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger Serial 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString IssuerUid 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_Issuer(): PrivateScope, Public, HideBySig, SpecialName
    get_Serial(): PrivateScope, Public, HideBySig, SpecialName
    get_IssuerUid(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.IssuingDistributionPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.DistributionPointName, Boolean, Boolean, Org.BouncyCastle.Asn1.X509.ReasonFlags, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean OnlyContainsUserCerts 'get ' : 
    Boolean OnlyContainsCACerts 'get ' : 
    Boolean IsIndirectCrl 'get ' : 
    Boolean OnlyContainsAttributeCerts 'get ' : 
    Org.BouncyCastle.Asn1.X509.DistributionPointName DistributionPoint 'get ' : 
    Org.BouncyCastle.Asn1.X509.ReasonFlags OnlySomeReasons 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_OnlyContainsUserCerts(): PrivateScope, Public, HideBySig, SpecialName
    get_OnlyContainsCACerts(): PrivateScope, Public, HideBySig, SpecialName
    get_IsIndirectCrl(): PrivateScope, Public, HideBySig, SpecialName
    get_OnlyContainsAttributeCerts(): PrivateScope, Public, HideBySig, SpecialName
    get_DistributionPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_OnlySomeReasons(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.KeyPurposeID: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerObjectIdentifier
  Fields:
    Org.BouncyCastle.Asn1.X509.KeyPurposeID AnyExtendedKeyUsage : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.X509.KeyPurposeID IdKPServerAuth : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.X509.KeyPurposeID IdKPClientAuth : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.X509.KeyPurposeID IdKPCodeSigning : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.X509.KeyPurposeID IdKPEmailProtection : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.X509.KeyPurposeID IdKPIpsecEndSystem : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.X509.KeyPurposeID IdKPIpsecTunnel : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.X509.KeyPurposeID IdKPIpsecUser : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.X509.KeyPurposeID IdKPTimeStamping : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.X509.KeyPurposeID IdKPOcspSigning : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.X509.KeyPurposeID IdKPSmartCardLogon : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.X509.KeyUsage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerBitString
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 DigitalSignature = 128 : Public, Static, Literal, HasDefault
    Int32 NonRepudiation = 64 : Public, Static, Literal, HasDefault
    Int32 KeyEncipherment = 32 : Public, Static, Literal, HasDefault
    Int32 DataEncipherment = 16 : Public, Static, Literal, HasDefault
    Int32 KeyAgreement = 8 : Public, Static, Literal, HasDefault
    Int32 KeyCertSign = 4 : Public, Static, Literal, HasDefault
    Int32 CrlSign = 2 : Public, Static, Literal, HasDefault
    Int32 EncipherOnly = 1 : Public, Static, Literal, HasDefault
    Int32 DecipherOnly = 32768 : Public, Static, Literal, HasDefault
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.NameConstraints: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.ArrayList, System.Collections.ArrayList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IList, System.Collections.IList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Asn1Sequence PermittedSubtrees 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Sequence ExcludedSubtrees 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_PermittedSubtrees(): PrivateScope, Public, HideBySig, SpecialName
    get_ExcludedSubtrees(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.NoticeReference: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(System.String, System.Collections.ArrayList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.String, System.Collections.IList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.String, Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.X509.DisplayText organization : Assembly, InitOnly
    Org.BouncyCastle.Asn1.Asn1Sequence noticeNumbers : Assembly, InitOnly
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.ObjectDigestInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Int32, System.String, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerEnumerated digestedObjectType : Assembly, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier otherObjectTypeID : Assembly, InitOnly
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier digestAlgorithm : Assembly, InitOnly
    Org.BouncyCastle.Asn1.DerBitString objectDigest : Assembly, InitOnly
    Int32 PublicKey = 0 : Public, Static, Literal, HasDefault
    Int32 PublicKeyCert = 1 : Public, Static, Literal, HasDefault
    Int32 OtherObjectDigest = 2 : Public, Static, Literal, HasDefault
  Properties:
    Org.BouncyCastle.Asn1.DerEnumerated DigestedObjectType 'get ' : 
    Org.BouncyCastle.Asn1.DerObjectIdentifier OtherObjectTypeID 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier DigestAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString ObjectDigest 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_DigestedObjectType(): PrivateScope, Public, HideBySig, SpecialName
    get_OtherObjectTypeID(): PrivateScope, Public, HideBySig, SpecialName
    get_DigestAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectDigest(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.PolicyInformation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier PolicyIdentifier 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Sequence PolicyQualifiers 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_PolicyIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    get_PolicyQualifiers(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.PolicyMappings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Hashtable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.PolicyQualifierID: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerObjectIdentifier
  Fields:
    Org.BouncyCastle.Asn1.X509.PolicyQualifierID IdQtCps : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.X509.PolicyQualifierID IdQtUnotice : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.X509.PolicyQualifierInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier policyQualifierId : Assembly, InitOnly
    Org.BouncyCastle.Asn1.Asn1Encodable qualifier : Assembly, InitOnly
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier PolicyQualifierId 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Qualifier 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_PolicyQualifierId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Qualifier(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.PrivateKeyUsagePeriod: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Properties:
    Org.BouncyCastle.Asn1.DerGeneralizedTime NotBefore 'get ' : 
    Org.BouncyCastle.Asn1.DerGeneralizedTime NotAfter 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_NotBefore(): PrivateScope, Public, HideBySig, SpecialName
    get_NotAfter(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.Qualified.BiometricData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.Qualified.TypeOfBiometricData, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1OctetString, Org.BouncyCastle.Asn1.DerIA5String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.Qualified.TypeOfBiometricData, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.Qualified.TypeOfBiometricData TypeOfBiometricData 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier HashAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString BiometricDataHash 'get ' : 
    Org.BouncyCastle.Asn1.DerIA5String SourceDataUri 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_TypeOfBiometricData(): PrivateScope, Public, HideBySig, SpecialName
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_BiometricDataHash(): PrivateScope, Public, HideBySig, SpecialName
    get_SourceDataUri(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.Qualified.EtsiQCObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdEtsiQcs : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdEtsiQcsQcCompliance : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdEtsiQcsLimitValue : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdEtsiQcsRetentionPeriod : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdEtsiQcsQcSscd : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.X509.Qualified.Iso4217CurrencyCode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Fields:
    Org.BouncyCastle.Asn1.Asn1Encodable obj : Assembly
    Int32 AlphabeticMaxSize = 3 : Assembly, Static, Literal, HasDefault
    Int32 NumericMinSize = 1 : Assembly, Static, Literal, HasDefault
    Int32 NumericMaxSize = 999 : Assembly, Static, Literal, HasDefault
  Properties:
    Boolean IsAlphabetic 'get ' : 
    System.String Alphabetic 'get ' : 
    Int32 Numeric 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_IsAlphabetic(): PrivateScope, Public, HideBySig, SpecialName
    get_Alphabetic(): PrivateScope, Public, HideBySig, SpecialName
    get_Numeric(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.Qualified.MonetaryValue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.Qualified.Iso4217CurrencyCode, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.X509.Qualified.Iso4217CurrencyCode currency : Assembly
    Org.BouncyCastle.Asn1.DerInteger amount : Assembly
    Org.BouncyCastle.Asn1.DerInteger exponent : Assembly
  Properties:
    Org.BouncyCastle.Asn1.X509.Qualified.Iso4217CurrencyCode Currency 'get ' : 
    Org.BouncyCastle.Math.BigInteger Amount 'get ' : 
    Org.BouncyCastle.Math.BigInteger Exponent 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Currency(): PrivateScope, Public, HideBySig, SpecialName
    get_Amount(): PrivateScope, Public, HideBySig, SpecialName
    get_Exponent(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.Qualified.QCStatement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier StatementId 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable StatementInfo 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_StatementId(): PrivateScope, Public, HideBySig, SpecialName
    get_StatementInfo(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.Qualified.Rfc3739QCObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdQcs : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdQcsPkixQCSyntaxV1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdQcsPkixQCSyntaxV2 : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.X509.Qualified.SemanticsInformation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.X509.GeneralName[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralName[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier SemanticsIdentifier 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_SemanticsIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    GetNameRegistrationAuthorities(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.Qualified.TypeOfBiometricData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Fields:
    Org.BouncyCastle.Asn1.Asn1Encodable obj : Assembly
    Int32 Picture = 0 : Public, Static, Literal, HasDefault
    Int32 HandwrittenSignature = 1 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsPredefined 'get ' : 
    Int32 PredefinedBiometricType 'get ' : 
    Org.BouncyCastle.Asn1.DerObjectIdentifier BiometricDataOid 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_IsPredefined(): PrivateScope, Public, HideBySig, SpecialName
    get_PredefinedBiometricType(): PrivateScope, Public, HideBySig, SpecialName
    get_BiometricDataOid(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.ReasonFlags: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerBitString
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerBitString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Unused = 128 : Public, Static, Literal, HasDefault
    Int32 KeyCompromise = 64 : Public, Static, Literal, HasDefault
    Int32 CACompromise = 32 : Public, Static, Literal, HasDefault
    Int32 AffiliationChanged = 16 : Public, Static, Literal, HasDefault
    Int32 Superseded = 8 : Public, Static, Literal, HasDefault
    Int32 CessationOfOperation = 4 : Public, Static, Literal, HasDefault
    Int32 CertificateHold = 2 : Public, Static, Literal, HasDefault
    Int32 PrivilegeWithdrawn = 1 : Public, Static, Literal, HasDefault
    Int32 AACompromise = 32768 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Asn1.X509.RoleSyntax: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralNames, Org.BouncyCastle.Asn1.X509.GeneralName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.GeneralNames RoleAuthority 'get ' : 
    Org.BouncyCastle.Asn1.X509.GeneralName RoleName 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_RoleAuthority(): PrivateScope, Public, HideBySig, SpecialName
    get_RoleName(): PrivateScope, Public, HideBySig, SpecialName
    GetRoleNameAsString(): PrivateScope, Public, HideBySig
    GetRoleAuthorityAsString(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.RsaPublicKeyStructure: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger Modulus 'get ' : 
    Org.BouncyCastle.Math.BigInteger PublicExponent 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Modulus(): PrivateScope, Public, HideBySig, SpecialName
    get_PublicExponent(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.SigI.NameOrPseudonym: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X500.DirectoryString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X500.DirectoryString, Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Org.BouncyCastle.Asn1.X500.DirectoryString Pseudonym 'get ' : 
    Org.BouncyCastle.Asn1.X500.DirectoryString Surname 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Pseudonym(): PrivateScope, Public, HideBySig, SpecialName
    get_Surname(): PrivateScope, Public, HideBySig, SpecialName
    GetGivenName(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.SigI.PersonalData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.SigI.NameOrPseudonym, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Asn1.DerGeneralizedTime, Org.BouncyCastle.Asn1.X500.DirectoryString, System.String, Org.BouncyCastle.Asn1.X500.DirectoryString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.SigI.NameOrPseudonym NameOrPseudonym 'get ' : 
    Org.BouncyCastle.Math.BigInteger NameDistinguisher 'get ' : 
    Org.BouncyCastle.Asn1.DerGeneralizedTime DateOfBirth 'get ' : 
    Org.BouncyCastle.Asn1.X500.DirectoryString PlaceOfBirth 'get ' : 
    System.String Gender 'get ' : 
    Org.BouncyCastle.Asn1.X500.DirectoryString PostalAddress 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_NameOrPseudonym(): PrivateScope, Public, HideBySig, SpecialName
    get_NameDistinguisher(): PrivateScope, Public, HideBySig, SpecialName
    get_DateOfBirth(): PrivateScope, Public, HideBySig, SpecialName
    get_PlaceOfBirth(): PrivateScope, Public, HideBySig, SpecialName
    get_Gender(): PrivateScope, Public, HideBySig, SpecialName
    get_PostalAddress(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.SigI.SigIObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSigI : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSigIKP : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSigICP : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSigION : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSigIKPDirectoryService : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSigIONPersonalData : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSigICPSigConform : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.X509.SubjectDirectoryAttributes: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(System.Collections.ArrayList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.Collections.IList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.IEnumerable Attributes 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Asn1.X509.SubjectKeyIdentifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetKeyIdentifier(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    CreateSha1KeyIdentifier(SubjectPublicKeyInfo): PrivateScope, Public, Static, HideBySig
    CreateTruncatedSha1KeyIdentifier(SubjectPublicKeyInfo): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier AlgorithmID 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString PublicKeyData 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_AlgorithmID(): PrivateScope, Public, HideBySig, SpecialName
    GetPublicKey(): PrivateScope, Public, HideBySig
    get_PublicKeyData(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.Target: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Choice, Org.BouncyCastle.Asn1.X509.GeneralName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Org.BouncyCastle.Asn1.X509.GeneralName TargetGroup 'get ' : 
    Org.BouncyCastle.Asn1.X509.GeneralName TargetName 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_TargetGroup(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TargetName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Struct Org.BouncyCastle.Asn1.X509.Target+Choice: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Choice Name = 0 : Public, Static, Literal, HasDefault
    Choice Group = 1 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Asn1.X509.TargetInformation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.Targets): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.Target[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetTargetsObjects(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.Targets: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.Target[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetTargets(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.TbsCertificateStructure: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.Asn1Sequence seq : Assembly
    Org.BouncyCastle.Asn1.DerInteger version : Assembly
    Org.BouncyCastle.Asn1.DerInteger serialNumber : Assembly
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier signature : Assembly
    Org.BouncyCastle.Asn1.X509.X509Name issuer : Assembly
    Org.BouncyCastle.Asn1.X509.Time startDate : Assembly
    Org.BouncyCastle.Asn1.X509.Time endDate : Assembly
    Org.BouncyCastle.Asn1.X509.X509Name subject : Assembly
    Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo subjectPublicKeyInfo : Assembly
    Org.BouncyCastle.Asn1.DerBitString issuerUniqueID : Assembly
    Org.BouncyCastle.Asn1.DerBitString subjectUniqueID : Assembly
    Org.BouncyCastle.Asn1.X509.X509Extensions extensions : Assembly
  Properties:
    Int32 Version 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger VersionNumber 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger SerialNumber 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier Signature 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Name Issuer 'get ' : 
    Org.BouncyCastle.Asn1.X509.Time StartDate 'get ' : 
    Org.BouncyCastle.Asn1.X509.Time EndDate 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Name Subject 'get ' : 
    Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo SubjectPublicKeyInfo 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString IssuerUniqueID 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString SubjectUniqueID 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions Extensions 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_VersionNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_SerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_Signature(): PrivateScope, Public, HideBySig, SpecialName
    get_Issuer(): PrivateScope, Public, HideBySig, SpecialName
    get_StartDate(): PrivateScope, Public, HideBySig, SpecialName
    get_EndDate(): PrivateScope, Public, HideBySig, SpecialName
    get_Subject(): PrivateScope, Public, HideBySig, SpecialName
    get_SubjectPublicKeyInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_IssuerUniqueID(): PrivateScope, Public, HideBySig, SpecialName
    get_SubjectUniqueID(): PrivateScope, Public, HideBySig, SpecialName
    get_Extensions(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.CrlEntry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.Asn1Sequence seq : Assembly
    Org.BouncyCastle.Asn1.DerInteger userCertificate : Assembly
    Org.BouncyCastle.Asn1.X509.Time revocationDate : Assembly
    Org.BouncyCastle.Asn1.X509.X509Extensions crlEntryExtensions : Assembly
  Properties:
    Org.BouncyCastle.Asn1.DerInteger UserCertificate 'get ' : 
    Org.BouncyCastle.Asn1.X509.Time RevocationDate 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions Extensions 'get ' : 
  Methods:
    get_UserCertificate(): PrivateScope, Public, HideBySig, SpecialName
    get_RevocationDate(): PrivateScope, Public, HideBySig, SpecialName
    get_Extensions(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.TbsCertificateList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.Asn1Sequence seq : Assembly
    Org.BouncyCastle.Asn1.DerInteger version : Assembly
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier signature : Assembly
    Org.BouncyCastle.Asn1.X509.X509Name issuer : Assembly
    Org.BouncyCastle.Asn1.X509.Time thisUpdate : Assembly
    Org.BouncyCastle.Asn1.X509.Time nextUpdate : Assembly
    Org.BouncyCastle.Asn1.Asn1Sequence revokedCertificates : Assembly
    Org.BouncyCastle.Asn1.X509.X509Extensions crlExtensions : Assembly
  Properties:
    Int32 Version 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger VersionNumber 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier Signature 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Name Issuer 'get ' : 
    Org.BouncyCastle.Asn1.X509.Time ThisUpdate 'get ' : 
    Org.BouncyCastle.Asn1.X509.Time NextUpdate 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions Extensions 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_VersionNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_Signature(): PrivateScope, Public, HideBySig, SpecialName
    get_Issuer(): PrivateScope, Public, HideBySig, SpecialName
    get_ThisUpdate(): PrivateScope, Public, HideBySig, SpecialName
    get_NextUpdate(): PrivateScope, Public, HideBySig, SpecialName
    GetRevokedCertificates(): PrivateScope, Public, HideBySig
    GetRevokedCertificateEnumeration(): PrivateScope, Public, HideBySig
    get_Extensions(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.Time: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Fields:
    Org.BouncyCastle.Asn1.Asn1Object time : Assembly
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetTime(): PrivateScope, Public, HideBySig
    ToDateTime(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.UserNotice: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.NoticeReference, Org.BouncyCastle.Asn1.X509.DisplayText): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.NoticeReference, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.X509.NoticeReference noticeRef : Assembly
    Org.BouncyCastle.Asn1.X509.DisplayText explicitText : Assembly
  Methods:
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.V1TbsCertificateGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerTaggedObject version : Assembly
    Org.BouncyCastle.Asn1.DerInteger serialNumber : Assembly
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier signature : Assembly
    Org.BouncyCastle.Asn1.X509.X509Name issuer : Assembly
    Org.BouncyCastle.Asn1.X509.Time startDate : Assembly
    Org.BouncyCastle.Asn1.X509.Time endDate : Assembly
    Org.BouncyCastle.Asn1.X509.X509Name subject : Assembly
    Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo subjectPublicKeyInfo : Assembly
  Methods:
    SetSerialNumber(DerInteger): PrivateScope, Public, HideBySig
    SetSignature(AlgorithmIdentifier): PrivateScope, Public, HideBySig
    SetIssuer(X509Name): PrivateScope, Public, HideBySig
    SetStartDate(Time): PrivateScope, Public, HideBySig
    SetStartDate(DerUtcTime): PrivateScope, Public, HideBySig
    SetEndDate(Time): PrivateScope, Public, HideBySig
    SetEndDate(DerUtcTime): PrivateScope, Public, HideBySig
    SetSubject(X509Name): PrivateScope, Public, HideBySig
    SetSubjectPublicKeyInfo(SubjectPublicKeyInfo): PrivateScope, Public, HideBySig
    GenerateTbsCertificate(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.X509.V2AttributeCertificateInfoGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerInteger version : Assembly
    Org.BouncyCastle.Asn1.X509.Holder holder : Assembly
    Org.BouncyCastle.Asn1.X509.AttCertIssuer issuer : Assembly
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier signature : Assembly
    Org.BouncyCastle.Asn1.DerInteger serialNumber : Assembly
    Org.BouncyCastle.Asn1.Asn1EncodableVector attributes : Assembly
    Org.BouncyCastle.Asn1.DerBitString issuerUniqueID : Assembly
    Org.BouncyCastle.Asn1.X509.X509Extensions extensions : Assembly
    Org.BouncyCastle.Asn1.DerGeneralizedTime startDate : Assembly
    Org.BouncyCastle.Asn1.DerGeneralizedTime endDate : Assembly
  Methods:
    SetHolder(Holder): PrivateScope, Public, HideBySig
    AddAttribute(String, Asn1Encodable): PrivateScope, Public, HideBySig
    AddAttribute(AttributeX509): PrivateScope, Public, HideBySig
    SetSerialNumber(DerInteger): PrivateScope, Public, HideBySig
    SetSignature(AlgorithmIdentifier): PrivateScope, Public, HideBySig
    SetIssuer(AttCertIssuer): PrivateScope, Public, HideBySig
    SetStartDate(DerGeneralizedTime): PrivateScope, Public, HideBySig
    SetEndDate(DerGeneralizedTime): PrivateScope, Public, HideBySig
    SetIssuerUniqueID(DerBitString): PrivateScope, Public, HideBySig
    SetExtensions(X509Extensions): PrivateScope, Public, HideBySig
    GenerateAttributeCertificateInfo(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.X509.V2Form: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralNames): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralNames, Org.BouncyCastle.Asn1.X509.IssuerSerial): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralNames, Org.BouncyCastle.Asn1.X509.ObjectDigestInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralNames, Org.BouncyCastle.Asn1.X509.IssuerSerial, Org.BouncyCastle.Asn1.X509.ObjectDigestInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.X509.GeneralNames issuerName : Assembly
    Org.BouncyCastle.Asn1.X509.IssuerSerial baseCertificateID : Assembly
    Org.BouncyCastle.Asn1.X509.ObjectDigestInfo objectDigestInfo : Assembly
  Properties:
    Org.BouncyCastle.Asn1.X509.GeneralNames IssuerName 'get ' : 
    Org.BouncyCastle.Asn1.X509.IssuerSerial BaseCertificateID 'get ' : 
    Org.BouncyCastle.Asn1.X509.ObjectDigestInfo ObjectDigestInfo 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_IssuerName(): PrivateScope, Public, HideBySig, SpecialName
    get_BaseCertificateID(): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectDigestInfo(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.V2TbsCertListGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetSignature(AlgorithmIdentifier): PrivateScope, Public, HideBySig
    SetIssuer(X509Name): PrivateScope, Public, HideBySig
    SetThisUpdate(DerUtcTime): PrivateScope, Public, HideBySig
    SetNextUpdate(DerUtcTime): PrivateScope, Public, HideBySig
    SetThisUpdate(Time): PrivateScope, Public, HideBySig
    SetNextUpdate(Time): PrivateScope, Public, HideBySig
    AddCrlEntry(Asn1Sequence): PrivateScope, Public, HideBySig
    AddCrlEntry(DerInteger, DerUtcTime, Int32): PrivateScope, Public, HideBySig
    AddCrlEntry(DerInteger, Time, Int32): PrivateScope, Public, HideBySig
    AddCrlEntry(DerInteger, Time, Int32, DerGeneralizedTime): PrivateScope, Public, HideBySig
    AddCrlEntry(DerInteger, Time, X509Extensions): PrivateScope, Public, HideBySig
    SetExtensions(X509Extensions): PrivateScope, Public, HideBySig
    GenerateTbsCertList(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.X509.V3TbsCertificateGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerTaggedObject version : Assembly
    Org.BouncyCastle.Asn1.DerInteger serialNumber : Assembly
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier signature : Assembly
    Org.BouncyCastle.Asn1.X509.X509Name issuer : Assembly
    Org.BouncyCastle.Asn1.X509.Time startDate : Assembly
    Org.BouncyCastle.Asn1.X509.Time endDate : Assembly
    Org.BouncyCastle.Asn1.X509.X509Name subject : Assembly
    Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo subjectPublicKeyInfo : Assembly
    Org.BouncyCastle.Asn1.X509.X509Extensions extensions : Assembly
  Methods:
    SetSerialNumber(DerInteger): PrivateScope, Public, HideBySig
    SetSignature(AlgorithmIdentifier): PrivateScope, Public, HideBySig
    SetIssuer(X509Name): PrivateScope, Public, HideBySig
    SetStartDate(DerUtcTime): PrivateScope, Public, HideBySig
    SetStartDate(Time): PrivateScope, Public, HideBySig
    SetEndDate(DerUtcTime): PrivateScope, Public, HideBySig
    SetEndDate(Time): PrivateScope, Public, HideBySig
    SetSubject(X509Name): PrivateScope, Public, HideBySig
    SetIssuerUniqueID(DerBitString): PrivateScope, Public, HideBySig
    SetSubjectUniqueID(DerBitString): PrivateScope, Public, HideBySig
    SetSubjectPublicKeyInfo(SubjectPublicKeyInfo): PrivateScope, Public, HideBySig
    SetExtensions(X509Extensions): PrivateScope, Public, HideBySig
    GenerateTbsCertificate(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.X509.X509Attributes: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier RoleSyntax : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.X509.X509CertificateStructure: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.TbsCertificateStructure, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.DerBitString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.TbsCertificateStructure TbsCertificate 'get ' : 
    Int32 Version 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger SerialNumber 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Name Issuer 'get ' : 
    Org.BouncyCastle.Asn1.X509.Time StartDate 'get ' : 
    Org.BouncyCastle.Asn1.X509.Time EndDate 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Name Subject 'get ' : 
    Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo SubjectPublicKeyInfo 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier SignatureAlgorithm 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString Signature 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_TbsCertificate(): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_SerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_Issuer(): PrivateScope, Public, HideBySig, SpecialName
    get_StartDate(): PrivateScope, Public, HideBySig, SpecialName
    get_EndDate(): PrivateScope, Public, HideBySig, SpecialName
    get_Subject(): PrivateScope, Public, HideBySig, SpecialName
    get_SubjectPublicKeyInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_SignatureAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_Signature(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.X509NameEntryConverter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    GetConvertedValue(DerObjectIdentifier, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Asn1.X509.X509DefaultEntryConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X509.X509NameEntryConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetConvertedValue(DerObjectIdentifier, String): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.X509Extension: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.DerBoolean, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean critical : Assembly
    Org.BouncyCastle.Asn1.Asn1OctetString value : Assembly
  Properties:
    Boolean IsCritical 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString Value 'get ' : 
  Methods:
    get_IsCritical(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    GetParsedValue(): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    ConvertValueToObject(X509Extension): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Asn1.X509.X509Extensions: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IList, System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IList, System.Collections.IList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Hashtable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.Collections.ArrayList, System.Collections.Hashtable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.Collections.ArrayList, System.Collections.ArrayList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier SubjectDirectoryAttributes : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SubjectKeyIdentifier : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier KeyUsage : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PrivateKeyUsagePeriod : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SubjectAlternativeName : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IssuerAlternativeName : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BasicConstraints : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CrlNumber : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ReasonCode : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier InstructionCode : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier InvalidityDate : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DeltaCrlIndicator : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IssuingDistributionPoint : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CertificateIssuer : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier NameConstraints : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CrlDistributionPoints : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CertificatePolicies : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PolicyMappings : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier AuthorityKeyIdentifier : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PolicyConstraints : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ExtendedKeyUsage : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier FreshestCrl : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier InhibitAnyPolicy : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier AuthorityInfoAccess : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SubjectInfoAccess : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier LogoType : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BiometricInfo : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier QCStatements : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier AuditIdentity : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier NoRevAvail : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier TargetInformation : Public, Static, InitOnly
  Properties:
    System.Collections.IEnumerable ExtensionOids 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    Oids(): PrivateScope, Public, HideBySig (Obsolete)
    get_ExtensionOids(): PrivateScope, Public, HideBySig, SpecialName
    GetExtension(DerObjectIdentifier): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    Equivalent(X509Extensions): PrivateScope, Public, HideBySig
    GetExtensionOids(): PrivateScope, Public, HideBySig
    GetNonCriticalExtensionOids(): PrivateScope, Public, HideBySig
    GetCriticalExtensionOids(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.X509.X509ExtensionsGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    Reset(): PrivateScope, Public, HideBySig
    AddExtension(DerObjectIdentifier, Boolean, Asn1Encodable): PrivateScope, Public, HideBySig
    AddExtension(DerObjectIdentifier, Boolean, Byte[]): PrivateScope, Public, HideBySig
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    Generate(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.X509.X509Name: AutoLayout, AnsiClass, Class, Public
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(System.Collections.ArrayList, System.Collections.Hashtable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.Collections.IList, System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.ArrayList, System.Collections.Hashtable, Org.BouncyCastle.Asn1.X509.X509NameEntryConverter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.Collections.IList, System.Collections.IDictionary, Org.BouncyCastle.Asn1.X509.X509NameEntryConverter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.ArrayList, System.Collections.ArrayList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.Collections.IList, System.Collections.IList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.ArrayList, System.Collections.ArrayList, Org.BouncyCastle.Asn1.X509.X509NameEntryConverter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.Collections.IList, System.Collections.IList, Org.BouncyCastle.Asn1.X509.X509NameEntryConverter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Org.BouncyCastle.Asn1.X509.X509NameEntryConverter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.String, Org.BouncyCastle.Asn1.X509.X509NameEntryConverter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.Collections.Hashtable, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(Boolean, System.Collections.IDictionary, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.Collections.IDictionary, System.String, Org.BouncyCastle.Asn1.X509.X509NameEntryConverter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier C : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier O : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier OU : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier T : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CN : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Street : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier SerialNumber : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier L : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ST : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Surname : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GivenName : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Initials : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Generation : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier UniqueIdentifier : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier BusinessCategory : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PostalCode : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DnQualifier : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Pseudonym : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DateOfBirth : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PlaceOfBirth : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Gender : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CountryOfCitizenship : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CountryOfResidence : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier NameAtBirth : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PostalAddress : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DmdName : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier TelephoneNumber : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Name : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier EmailAddress : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier UnstructuredName : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier UnstructuredAddress : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier E : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DC : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier UID : Public, Static, InitOnly
    System.Collections.Hashtable DefaultSymbols : Public, Static, InitOnly
    System.Collections.Hashtable RFC2253Symbols : Public, Static, InitOnly
    System.Collections.Hashtable RFC1779Symbols : Public, Static, InitOnly
    System.Collections.Hashtable DefaultLookup : Public, Static, InitOnly
  Properties:
    Boolean DefaultReverse 'get set' : 
  Methods:
    get_DefaultReverse(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_DefaultReverse(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetOids(): PrivateScope, Public, HideBySig (Obsolete)
    GetOidList(): PrivateScope, Public, HideBySig
    GetValues(): PrivateScope, Public, HideBySig (Obsolete)
    GetValueList(): PrivateScope, Public, HideBySig
    GetValues(DerObjectIdentifier): PrivateScope, Public, HideBySig
    GetValueList(DerObjectIdentifier): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    Equivalent(X509Name, Boolean): PrivateScope, Public, HideBySig
    Equivalent(X509Name): PrivateScope, Public, HideBySig
    ToString(Boolean, Hashtable): PrivateScope, Public, HideBySig (Obsolete)
    ToString(Boolean, IDictionary): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X509.X509NameTokenizer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Char): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    HasMoreTokens(): PrivateScope, Public, HideBySig
    NextToken(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Asn1.X509.X509ObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier CommonName : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CountryName : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier LocalityName : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier StateOrProvinceName : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Organization : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier OrganizationalUnitName : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_at_telephoneNumber : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_at_name : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdSha1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier RipeMD160 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier RipeMD160WithRsaEncryption : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdEARsa : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdPkix : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdPE : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdAD : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdADCAIssuers : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdADOcsp : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier OcspAccessMethod : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CrlAccessMethod : Public, Static, InitOnly
    System.String ID = 2.5.4 : Assembly, Static, Literal, HasDefault
Class Org.BouncyCastle.Asn1.X9.DHDomainParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.X9.DHValidationParms): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger P 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger G 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger Q 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger J 'get ' : 
    Org.BouncyCastle.Asn1.X9.DHValidationParms ValidationParms 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_P(): PrivateScope, Public, HideBySig, SpecialName
    get_G(): PrivateScope, Public, HideBySig, SpecialName
    get_Q(): PrivateScope, Public, HideBySig, SpecialName
    get_J(): PrivateScope, Public, HideBySig, SpecialName
    get_ValidationParms(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X9.DHPublicKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Y 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X9.DHValidationParms: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerBitString, Org.BouncyCastle.Asn1.DerInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerBitString Seed 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger PgenCounter 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Seed(): PrivateScope, Public, HideBySig, SpecialName
    get_PgenCounter(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X9.KeySpecificInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier Algorithm 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString Counter 'get ' : 
  Methods:
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_Counter(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X9.OtherInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X9.KeySpecificInfo, Org.BouncyCastle.Asn1.Asn1OctetString, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X9.KeySpecificInfo KeyInfo 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString PartyAInfo 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString SuppPubInfo 'get ' : 
  Methods:
    get_KeyInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_PartyAInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_SuppPubInfo(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves: AutoLayout, AnsiClass, Class, Public, Sealed
  Properties:
    System.Collections.IEnumerable Names 'get ' : 
  Methods:
    GetByName(String): PrivateScope, Public, Static, HideBySig
    GetByOid(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    GetOid(String): PrivateScope, Public, Static, HideBySig
    GetName(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    get_Names(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+Prime192v1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+Prime192v2Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+Prime192v3Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+Prime239v1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+Prime239v2Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+Prime239v3Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+Prime256v1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2pnb163v1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2pnb163v2Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2pnb163v3Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2pnb176w1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2tnb191v1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2tnb191v2Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2tnb191v3Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2pnb208w1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2tnb239v1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2tnb239v2Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2tnb239v3Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2pnb272w1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2pnb304w1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2tnb359v1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2pnb368w1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2tnb431r1Holder: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
  Fields:
    Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance : Assembly, Static, InitOnly
Class Org.BouncyCastle.Asn1.X9.X962Parameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X9.X9ECParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Boolean IsNamedCurve 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Object Parameters 'get ' : 
  Methods:
    get_IsNamedCurve(): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X9.X9Curve: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Math.EC.ECCurve): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.EC.ECCurve, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X9.X9FieldID, Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.EC.ECCurve Curve 'get ' : 
  Methods:
    get_Curve(): PrivateScope, Public, HideBySig, SpecialName
    GetSeed(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X9.X9ECParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.EC.ECCurve, Org.BouncyCastle.Math.EC.ECPoint, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.EC.ECCurve, Org.BouncyCastle.Math.EC.ECPoint, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.EC.ECCurve, Org.BouncyCastle.Math.EC.ECPoint, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.EC.ECCurve Curve 'get ' : 
    Org.BouncyCastle.Math.EC.ECPoint G 'get ' : 
    Org.BouncyCastle.Math.BigInteger N 'get ' : 
    Org.BouncyCastle.Math.BigInteger H 'get ' : 
  Methods:
    get_Curve(): PrivateScope, Public, HideBySig, SpecialName
    get_G(): PrivateScope, Public, HideBySig, SpecialName
    get_N(): PrivateScope, Public, HideBySig, SpecialName
    get_H(): PrivateScope, Public, HideBySig, SpecialName
    GetSeed(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X9.X9ECPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Math.EC.ECPoint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.EC.ECCurve, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.EC.ECPoint Point 'get ' : 
  Methods:
    get_Point(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X9.X9FieldElement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Math.EC.ECFieldElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.EC.ECFieldElement Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X9.X9FieldID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier Identifier 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Object Parameters 'get ' : 
  Methods:
    get_Identifier(): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.X9.X9IntegerConverter: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    GetByteLength(ECFieldElement): PrivateScope, Public, Static, HideBySig
    GetByteLength(ECCurve): PrivateScope, Public, Static, HideBySig
    IntegerToBytes(BigInteger, Int32): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Asn1.X9.X9ObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier ansi_X9_62 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdFieldType : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PrimeField : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CharacteristicTwoField : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier GNBasis : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier TPBasis : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PPBasis : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_ecSigType : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_publicKeyType : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdECPublicKey : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha224 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha256 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha384 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha512 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier EllipticCurve : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier CTwoCurve : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb163v1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb163v2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb163v3 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb176w1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb191v1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb191v2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb191v3 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Onb191v4 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Onb191v5 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb208w1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb239v1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb239v2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb239v3 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Onb239v4 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Onb239v5 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb272w1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb304w1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb359v1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb368w1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb431r1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier PrimeCurve : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Prime192v1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Prime192v2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Prime192v3 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Prime239v1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Prime239v2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Prime239v3 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Prime256v1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdDsa : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier IdDsaWithSha1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier X9x63Scheme : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DHSinglePassStdDHSha1KdfScheme : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DHSinglePassCofactorDHSha1KdfScheme : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier MqvSinglePassSha1KdfScheme : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ansi_x9_42 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DHPublicNumber : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier X9x42Schemes : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DHStatic : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DHEphem : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DHOneFlow : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DHHybrid1 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DHHybrid2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier DHHybridOneFlow : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Mqv2 : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier Mqv1 : Public, Static, InitOnly
    System.String AnsiX962 = 1.2.840.10045 : Assembly, Static, Literal, HasDefault
    System.String IdECSigType = 1.2.840.10045.4 : Public, Static, Literal, HasDefault (Obsolete)
    System.String IdPublicKeyType = 1.2.840.10045.2 : Public, Static, Literal, HasDefault (Obsolete)
Class Org.BouncyCastle.Bcpg.ArmoredInputStream: AutoLayout, AnsiClass, Class, Public
  :Org.BouncyCastle.Utilities.IO.BaseInputStream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsClearText(): PrivateScope, Public, HideBySig
    IsEndOfStream(): PrivateScope, Public, HideBySig
    GetArmorHeaderLine(): PrivateScope, Public, HideBySig
    GetArmorHeaders(): PrivateScope, Public, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.ArmoredOutputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Utilities.IO.BaseOutputStream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetHeader(String, String): PrivateScope, Public, HideBySig
    ResetHeaders(): PrivateScope, Public, HideBySig
    BeginClearText(HashAlgorithmTag): PrivateScope, Public, HideBySig
    EndClearText(): PrivateScope, Public, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.UserAttributeSubpacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Bcpg.UserAttributeSubpacketTag, Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Bcpg.UserAttributeSubpacketTag SubpacketType 'get ' : 
  Methods:
    get_SubpacketType(): PrivateScope, Public, HideBySig, SpecialName
    GetData(): PrivateScope, Public, HideBySig
    Encode(Stream): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.Attr.ImageAttrib: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.UserAttributeSubpacket
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Format, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Version 'get ' : 
    Int32 Encoding 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_Encoding(): PrivateScope, Public, HideBySig, SpecialName
    GetImageData(): PrivateScope, Public, HideBySig
Struct Org.BouncyCastle.Bcpg.Attr.ImageAttrib+Format: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Format Jpeg = 1 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Bcpg.BcpgInputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Utilities.IO.BaseInputStream
  Methods:
    Wrap(Stream): PrivateScope, Assembly, Static, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadAll(): PrivateScope, Public, HideBySig
    ReadFully(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    ReadFully(Byte[]): PrivateScope, Public, HideBySig
    NextPacketTag(): PrivateScope, Public, HideBySig
    ReadPacket(): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.BcpgObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    GetEncoded(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Bcpg.BcpgOutputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Utilities.IO.BaseOutputStream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Org.BouncyCastle.Bcpg.PacketTag): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Org.BouncyCastle.Bcpg.PacketTag, Int64, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Org.BouncyCastle.Bcpg.PacketTag, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Org.BouncyCastle.Bcpg.PacketTag, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Wrap(Stream): PrivateScope, Assembly, Static, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteShort(Int16): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    WriteInt(Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    WriteLong(Int64): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    WritePacket(ContainedPacket): PrivateScope, Public, HideBySig
    WritePacket(PacketTag, Byte[], Boolean): PrivateScope, Assembly, HideBySig
    WriteObject(BcpgObject): PrivateScope, Public, HideBySig
    WriteObjects(BcpgObject[]): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Finish(): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.Packet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Bcpg.InputStreamPacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.Packet
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInputStream(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.CompressedDataPacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.InputStreamPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Bcpg.CompressionAlgorithmTag Algorithm 'get ' : 
  Methods:
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
Struct Org.BouncyCastle.Bcpg.CompressionAlgorithmTag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Bcpg.CompressionAlgorithmTag Uncompressed = 0 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.CompressionAlgorithmTag Zip = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.CompressionAlgorithmTag ZLib = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.CompressionAlgorithmTag BZip2 = 3 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Bcpg.ContainedPacket: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.Packet
  Methods:
    GetEncoded(): PrivateScope, Public, HideBySig
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Bcpg.Crc24: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Value 'get ' : 
  Methods:
    Update(Int32): PrivateScope, Public, HideBySig
    GetValue(): PrivateScope, Public, HideBySig (Obsolete)
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    Reset(): PrivateScope, Public, HideBySig
Interface Org.BouncyCastle.Bcpg.IBcpgKey: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String Format 'get ' : 
  Methods:
    get_Format(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Org.BouncyCastle.Bcpg.DsaPublicBcpgKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.BcpgObject
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Bcpg.IBcpgKey
  Properties:
    System.String Format 'get ' : 
    Org.BouncyCastle.Math.BigInteger G 'get ' : 
    Org.BouncyCastle.Math.BigInteger P 'get ' : 
    Org.BouncyCastle.Math.BigInteger Q 'get ' : 
    Org.BouncyCastle.Math.BigInteger Y 'get ' : 
  Methods:
    get_Format(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEncoded(): PrivateScope, Public, Virtual, HideBySig
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
    get_G(): PrivateScope, Public, HideBySig, SpecialName
    get_P(): PrivateScope, Public, HideBySig, SpecialName
    get_Q(): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Bcpg.DsaSecretBcpgKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.BcpgObject
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Bcpg.IBcpgKey
  Fields:
    Org.BouncyCastle.Bcpg.MPInteger x : Assembly
  Properties:
    System.String Format 'get ' : 
    Org.BouncyCastle.Math.BigInteger X 'get ' : 
  Methods:
    get_Format(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEncoded(): PrivateScope, Public, Virtual, HideBySig
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
    get_X(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Bcpg.ElGamalPublicBcpgKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.BcpgObject
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Bcpg.IBcpgKey
  Fields:
    Org.BouncyCastle.Bcpg.MPInteger p : Assembly
    Org.BouncyCastle.Bcpg.MPInteger g : Assembly
    Org.BouncyCastle.Bcpg.MPInteger y : Assembly
  Properties:
    System.String Format 'get ' : 
    Org.BouncyCastle.Math.BigInteger P 'get ' : 
    Org.BouncyCastle.Math.BigInteger G 'get ' : 
    Org.BouncyCastle.Math.BigInteger Y 'get ' : 
  Methods:
    get_Format(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEncoded(): PrivateScope, Public, Virtual, HideBySig
    get_P(): PrivateScope, Public, HideBySig, SpecialName
    get_G(): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.ElGamalSecretBcpgKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.BcpgObject
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Bcpg.IBcpgKey
  Fields:
    Org.BouncyCastle.Bcpg.MPInteger x : Assembly
  Properties:
    System.String Format 'get ' : 
    Org.BouncyCastle.Math.BigInteger X 'get ' : 
  Methods:
    get_Format(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    GetEncoded(): PrivateScope, Public, Virtual, HideBySig
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.ExperimentalPacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.ContainedPacket
    Void .ctor(Org.BouncyCastle.Bcpg.PacketTag, Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Bcpg.PacketTag Tag 'get ' : 
  Methods:
    get_Tag(): PrivateScope, Public, HideBySig, SpecialName
    GetContents(): PrivateScope, Public, HideBySig
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Struct Org.BouncyCastle.Bcpg.HashAlgorithmTag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Bcpg.HashAlgorithmTag MD5 = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.HashAlgorithmTag Sha1 = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.HashAlgorithmTag RipeMD160 = 3 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.HashAlgorithmTag DoubleSha = 4 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.HashAlgorithmTag MD2 = 5 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.HashAlgorithmTag Tiger192 = 6 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.HashAlgorithmTag Haval5pass160 = 7 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.HashAlgorithmTag Sha256 = 8 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.HashAlgorithmTag Sha384 = 9 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.HashAlgorithmTag Sha512 = 10 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.HashAlgorithmTag Sha224 = 11 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Bcpg.LiteralDataPacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.InputStreamPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Format 'get ' : 
    Int64 ModificationTime 'get ' : 
    System.String FileName 'get ' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    get_ModificationTime(): PrivateScope, Public, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    GetRawFileName(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.MarkerPacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.ContainedPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.ModDetectionCodePacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.ContainedPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetDigest(): PrivateScope, Public, HideBySig
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.MPInteger: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.BcpgObject
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
    Encode(BcpgOutputStream, BigInteger): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Bcpg.OnePassSignaturePacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.ContainedPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Org.BouncyCastle.Bcpg.HashAlgorithmTag, Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag, Int64, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 SignatureType 'get ' : 
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag KeyAlgorithm 'get ' : 
    Org.BouncyCastle.Bcpg.HashAlgorithmTag HashAlgorithm 'get ' : 
    Int64 KeyId 'get ' : 
  Methods:
    get_SignatureType(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyId(): PrivateScope, Public, HideBySig, SpecialName
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.OutputStreamPacket: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgOutputStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Open(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Org.BouncyCastle.Bcpg.PacketTag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Bcpg.PacketTag Reserved = 0 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag PublicKeyEncryptedSession = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag Signature = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag SymmetricKeyEncryptedSessionKey = 3 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag OnePassSignature = 4 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag SecretKey = 5 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag PublicKey = 6 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag SecretSubkey = 7 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag CompressedData = 8 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag SymmetricKeyEncrypted = 9 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag Marker = 10 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag LiteralData = 11 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag Trust = 12 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag UserId = 13 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag PublicSubkey = 14 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag UserAttribute = 17 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag SymmetricEncryptedIntegrityProtected = 18 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag ModificationDetectionCode = 19 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag Experimental1 = 60 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag Experimental2 = 61 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag Experimental3 = 62 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PacketTag Experimental4 = 63 : Public, Static, Literal, HasDefault
Struct Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag RsaGeneral = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag RsaEncrypt = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag RsaSign = 3 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag ElGamalEncrypt = 16 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag Dsa = 17 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag EC = 18 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag ECDsa = 19 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag ElGamalGeneral = 20 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag DiffieHellman = 21 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag Experimental_1 = 100 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag Experimental_2 = 101 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag Experimental_3 = 102 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag Experimental_4 = 103 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag Experimental_5 = 104 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag Experimental_6 = 105 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag Experimental_7 = 106 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag Experimental_8 = 107 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag Experimental_9 = 108 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag Experimental_10 = 109 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag Experimental_11 = 110 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Bcpg.PublicKeyEncSessionPacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.ContainedPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64, Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag, Org.BouncyCastle.Math.BigInteger[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Version 'get ' : 
    Int64 KeyId 'get ' : 
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag Algorithm 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyId(): PrivateScope, Public, HideBySig, SpecialName
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    GetEncSessionKey(): PrivateScope, Public, HideBySig
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.PublicKeyPacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.ContainedPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag, System.DateTime, Org.BouncyCastle.Bcpg.IBcpgKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Version 'get ' : 
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag Algorithm 'get ' : 
    Int32 ValidDays 'get ' : 
    Org.BouncyCastle.Bcpg.IBcpgKey Key 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_ValidDays(): PrivateScope, Public, HideBySig, SpecialName
    GetTime(): PrivateScope, Public, HideBySig
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    GetEncodedContents(): PrivateScope, Public, HideBySig
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.PublicSubkeyPacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.PublicKeyPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag, System.DateTime, Org.BouncyCastle.Bcpg.IBcpgKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.RsaPublicBcpgKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.BcpgObject
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Bcpg.IBcpgKey
  Properties:
    Org.BouncyCastle.Math.BigInteger PublicExponent 'get ' : 
    Org.BouncyCastle.Math.BigInteger Modulus 'get ' : 
    System.String Format 'get ' : 
  Methods:
    get_PublicExponent(): PrivateScope, Public, HideBySig, SpecialName
    get_Modulus(): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEncoded(): PrivateScope, Public, Virtual, HideBySig
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.RsaSecretBcpgKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.BcpgObject
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Bcpg.IBcpgKey
  Properties:
    Org.BouncyCastle.Math.BigInteger Modulus 'get ' : 
    Org.BouncyCastle.Math.BigInteger PrivateExponent 'get ' : 
    Org.BouncyCastle.Math.BigInteger PrimeP 'get ' : 
    Org.BouncyCastle.Math.BigInteger PrimeQ 'get ' : 
    Org.BouncyCastle.Math.BigInteger PrimeExponentP 'get ' : 
    Org.BouncyCastle.Math.BigInteger PrimeExponentQ 'get ' : 
    Org.BouncyCastle.Math.BigInteger CrtCoefficient 'get ' : 
    System.String Format 'get ' : 
  Methods:
    get_Modulus(): PrivateScope, Public, HideBySig, SpecialName
    get_PrivateExponent(): PrivateScope, Public, HideBySig, SpecialName
    get_PrimeP(): PrivateScope, Public, HideBySig, SpecialName
    get_PrimeQ(): PrivateScope, Public, HideBySig, SpecialName
    get_PrimeExponentP(): PrivateScope, Public, HideBySig, SpecialName
    get_PrimeExponentQ(): PrivateScope, Public, HideBySig, SpecialName
    get_CrtCoefficient(): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEncoded(): PrivateScope, Public, Virtual, HideBySig
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.S2k: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.BcpgObject
    Void .ctor(System.IO.Stream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.HashAlgorithmTag): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.HashAlgorithmTag, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.HashAlgorithmTag, Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 type : Assembly
    Org.BouncyCastle.Bcpg.HashAlgorithmTag algorithm : Assembly
    Byte[] iv : Assembly
    Int32 itCount : Assembly
    Int32 protectionMode : Assembly
    Int32 Simple = 0 : Public, Static, Literal, HasDefault
    Int32 Salted = 1 : Public, Static, Literal, HasDefault
    Int32 SaltedAndIterated = 3 : Public, Static, Literal, HasDefault
    Int32 GnuDummyS2K = 101 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Type 'get ' : 
    Org.BouncyCastle.Bcpg.HashAlgorithmTag HashAlgorithm 'get ' : 
    Int64 IterationCount 'get ' : 
    Int32 ProtectionMode 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    GetIV(): PrivateScope, Public, HideBySig
    GetIterationCount(): PrivateScope, Public, HideBySig (Obsolete)
    get_IterationCount(): PrivateScope, Public, HideBySig, SpecialName
    get_ProtectionMode(): PrivateScope, Public, HideBySig, SpecialName
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.SecretKeyPacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.ContainedPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.PublicKeyPacket, Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Org.BouncyCastle.Bcpg.S2k, Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.PublicKeyPacket, Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Int32, Org.BouncyCastle.Bcpg.S2k, Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 UsageNone = 0 : Public, Static, Literal, HasDefault
    Int32 UsageChecksum = 255 : Public, Static, Literal, HasDefault
    Int32 UsageSha1 = 254 : Public, Static, Literal, HasDefault
  Properties:
    Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag EncAlgorithm 'get ' : 
    Int32 S2kUsage 'get ' : 
    Org.BouncyCastle.Bcpg.S2k S2k 'get ' : 
    Org.BouncyCastle.Bcpg.PublicKeyPacket PublicKeyPacket 'get ' : 
  Methods:
    get_EncAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_S2kUsage(): PrivateScope, Public, HideBySig, SpecialName
    GetIV(): PrivateScope, Public, HideBySig
    get_S2k(): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKeyPacket(): PrivateScope, Public, HideBySig, SpecialName
    GetSecretKeyData(): PrivateScope, Public, HideBySig
    GetEncodedContents(): PrivateScope, Public, HideBySig
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.SecretSubkeyPacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.SecretKeyPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.PublicKeyPacket, Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Org.BouncyCastle.Bcpg.S2k, Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.PublicKeyPacket, Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Int32, Org.BouncyCastle.Bcpg.S2k, Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.SignaturePacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.ContainedPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int64, Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag, Org.BouncyCastle.Bcpg.HashAlgorithmTag, Org.BouncyCastle.Bcpg.SignatureSubpacket[], Org.BouncyCastle.Bcpg.SignatureSubpacket[], Byte[], Org.BouncyCastle.Bcpg.MPInteger[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int64, Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag, Org.BouncyCastle.Bcpg.HashAlgorithmTag, Int64, Byte[], Org.BouncyCastle.Bcpg.MPInteger[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int64, Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag, Org.BouncyCastle.Bcpg.HashAlgorithmTag, Org.BouncyCastle.Bcpg.SignatureSubpacket[], Org.BouncyCastle.Bcpg.SignatureSubpacket[], Byte[], Org.BouncyCastle.Bcpg.MPInteger[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Version 'get ' : 
    Int32 SignatureType 'get ' : 
    Int64 KeyId 'get ' : 
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag KeyAlgorithm 'get ' : 
    Org.BouncyCastle.Bcpg.HashAlgorithmTag HashAlgorithm 'get ' : 
    Int64 CreationTime 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_SignatureType(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyId(): PrivateScope, Public, HideBySig, SpecialName
    GetSignatureTrailer(): PrivateScope, Public, HideBySig
    get_KeyAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    GetSignature(): PrivateScope, Public, HideBySig
    GetSignatureBytes(): PrivateScope, Public, HideBySig
    GetHashedSubPackets(): PrivateScope, Public, HideBySig
    GetUnhashedSubPackets(): PrivateScope, Public, HideBySig
    get_CreationTime(): PrivateScope, Public, HideBySig, SpecialName
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.SignatureSubpacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Fields:
    Byte[] data : Assembly, InitOnly
  Properties:
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag SubpacketType 'get ' : 
  Methods:
    get_SubpacketType(): PrivateScope, Public, HideBySig, SpecialName
    IsCritical(): PrivateScope, Public, HideBySig
    GetData(): PrivateScope, Public, HideBySig
    Encode(Stream): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.SignatureSubpacketsParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadPacket(): PrivateScope, Public, HideBySig
Struct Org.BouncyCastle.Bcpg.SignatureSubpacketTag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag CreationTime = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag ExpireTime = 3 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag Exportable = 4 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag TrustSig = 5 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag RegExp = 6 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag Revocable = 7 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag KeyExpireTime = 9 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag Placeholder = 10 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag PreferredSymmetricAlgorithms = 11 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag RevocationKey = 12 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag IssuerKeyId = 16 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag NotationData = 20 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag PreferredHashAlgorithms = 21 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag PreferredCompressionAlgorithms = 22 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag KeyServerPreferences = 23 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag PreferredKeyServer = 24 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag PrimaryUserId = 25 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag PolicyUrl = 26 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag KeyFlags = 27 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag SignerUserId = 28 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag RevocationReason = 29 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag Features = 30 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag SignatureTarget = 31 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SignatureSubpacketTag EmbeddedSignature = 32 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Bcpg.Sig.EmbeddedSignature: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.SignatureSubpacket
    Void .ctor(Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Bcpg.Sig.Exportable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.SignatureSubpacket
    Void .ctor(Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsExportable(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.Sig.IssuerKeyId: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.SignatureSubpacket
    Void .ctor(Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 KeyId 'get ' : 
  Methods:
    get_KeyId(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Bcpg.Sig.KeyExpirationTime: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.SignatureSubpacket
    Void .ctor(Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 Time 'get ' : 
  Methods:
    get_Time(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Bcpg.Sig.KeyFlags: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.SignatureSubpacket
    Void .ctor(Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 CertifyOther = 1 : Public, Static, Literal, HasDefault
    Int32 SignData = 2 : Public, Static, Literal, HasDefault
    Int32 EncryptComms = 4 : Public, Static, Literal, HasDefault
    Int32 EncryptStorage = 8 : Public, Static, Literal, HasDefault
    Int32 Split = 16 : Public, Static, Literal, HasDefault
    Int32 Authentication = 32 : Public, Static, Literal, HasDefault
    Int32 Shared = 128 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Flags 'get ' : 
  Methods:
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Bcpg.Sig.NotationData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.SignatureSubpacket
    Void .ctor(Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 HeaderFlagLength = 4 : Public, Static, Literal, HasDefault
    Int32 HeaderNameLength = 2 : Public, Static, Literal, HasDefault
    Int32 HeaderValueLength = 2 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsHumanReadable 'get ' : 
  Methods:
    get_IsHumanReadable(): PrivateScope, Public, HideBySig, SpecialName
    GetNotationName(): PrivateScope, Public, HideBySig
    GetNotationValue(): PrivateScope, Public, HideBySig
    GetNotationValueBytes(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.Sig.PreferredAlgorithms: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.SignatureSubpacket
    Void .ctor(Org.BouncyCastle.Bcpg.SignatureSubpacketTag, Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.SignatureSubpacketTag, Boolean, Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetPreferences(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.Sig.PrimaryUserId: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.SignatureSubpacket
    Void .ctor(Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsPrimaryUserId(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.Sig.Revocable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.SignatureSubpacket
    Void .ctor(Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsRevocable(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.Sig.SignatureCreationTime: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.SignatureSubpacket
    Void .ctor(Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetTime(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.Sig.SignatureExpirationTime: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.SignatureSubpacket
    Void .ctor(Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 Time 'get ' : 
  Methods:
    get_Time(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Bcpg.Sig.SignerUserId: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.SignatureSubpacket
    Void .ctor(Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetId(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.Sig.TrustSignature: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.SignatureSubpacket
    Void .ctor(Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Depth 'get ' : 
    Int32 TrustAmount 'get ' : 
  Methods:
    get_Depth(): PrivateScope, Public, HideBySig, SpecialName
    get_TrustAmount(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Bcpg.SymmetricEncDataPacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.InputStreamPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Bcpg.SymmetricEncIntegrityPacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.InputStreamPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 version : Assembly, InitOnly
Struct Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag Null = 0 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag Idea = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag TripleDes = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag Cast5 = 3 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag Blowfish = 4 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag Safer = 5 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag Des = 6 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag Aes128 = 7 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag Aes192 = 8 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag Aes256 = 9 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag Twofish = 10 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Bcpg.SymmetricKeyEncSessionPacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.ContainedPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Org.BouncyCastle.Bcpg.S2k, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag EncAlgorithm 'get ' : 
    Org.BouncyCastle.Bcpg.S2k S2k 'get ' : 
    Int32 Version 'get ' : 
  Methods:
    get_EncAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_S2k(): PrivateScope, Public, HideBySig, SpecialName
    GetSecKeyData(): PrivateScope, Public, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.TrustPacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.ContainedPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetLevelAndTrustAmount(): PrivateScope, Public, HideBySig
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.UserAttributePacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.ContainedPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.UserAttributeSubpacket[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetSubpackets(): PrivateScope, Public, HideBySig
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.UserAttributeSubpacketsParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadPacket(): PrivateScope, Public, HideBySig
Struct Org.BouncyCastle.Bcpg.UserAttributeSubpacketTag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Bcpg.UserAttributeSubpacketTag ImageAttribute = 1 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Bcpg.UserIdPacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.ContainedPacket
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetId(): PrivateScope, Public, HideBySig
    Encode(BcpgOutputStream): PrivateScope, Public, Virtual, HideBySig
Interface Org.BouncyCastle.Cms.IDigestCalculator: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetDigest(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Cms.BaseDigestCalculator: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Cms.IDigestCalculator
  Methods:
    GetDigest(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Cms.CmsException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Cms.CmsAttributeTableGenerationException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Cms.CmsException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Org.BouncyCastle.Cms.CmsAttributeTableParameter: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Cms.CmsAttributeTableParameter ContentType = 0 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Cms.CmsAttributeTableParameter Digest = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Cms.CmsAttributeTableParameter Signature = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Cms.CmsAttributeTableParameter DigestAlgorithmIdentifier = 3 : Public, Static, Literal, HasDefault
Interface Org.BouncyCastle.Cms.CmsAttributeTableGenerator: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetAttributes(IDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Cms.CmsAuthenticatedData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.ContentInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Cms.RecipientInformationStore recipientInfoStore : Assembly
    Org.BouncyCastle.Asn1.Cms.ContentInfo contentInfo : Assembly
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier MacAlgorithmID 'get ' : 
    System.String MacAlgOid 'get ' : 
    Org.BouncyCastle.Asn1.Cms.ContentInfo ContentInfo 'get ' : 
  Methods:
    GetMac(): PrivateScope, Public, HideBySig
    get_MacAlgorithmID(): PrivateScope, Public, HideBySig, SpecialName
    get_MacAlgOid(): PrivateScope, Public, HideBySig, SpecialName
    GetRecipientInfos(): PrivateScope, Public, HideBySig
    get_ContentInfo(): PrivateScope, Public, HideBySig, SpecialName
    GetAuthAttrs(): PrivateScope, Public, HideBySig
    GetUnauthAttrs(): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.CmsEnvelopedGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.IList recipientInfoGenerators : Assembly, InitOnly
    Org.BouncyCastle.Security.SecureRandom rand : Assembly, InitOnly
    Org.BouncyCastle.Cms.CmsAttributeTableGenerator unprotectedAttributeGenerator : Assembly
    Int16[] rc2Table : Assembly, Static, InitOnly
    System.String DesEde3Cbc : Public, Static, InitOnly
    System.String RC2Cbc : Public, Static, InitOnly
    System.String Aes128Cbc : Public, Static, InitOnly
    System.String Aes192Cbc : Public, Static, InitOnly
    System.String Aes256Cbc : Public, Static, InitOnly
    System.String Camellia128Cbc : Public, Static, InitOnly
    System.String Camellia192Cbc : Public, Static, InitOnly
    System.String Camellia256Cbc : Public, Static, InitOnly
    System.String SeedCbc : Public, Static, InitOnly
    System.String DesEde3Wrap : Public, Static, InitOnly
    System.String Aes128Wrap : Public, Static, InitOnly
    System.String Aes192Wrap : Public, Static, InitOnly
    System.String Aes256Wrap : Public, Static, InitOnly
    System.String Camellia128Wrap : Public, Static, InitOnly
    System.String Camellia192Wrap : Public, Static, InitOnly
    System.String Camellia256Wrap : Public, Static, InitOnly
    System.String SeedWrap : Public, Static, InitOnly
    System.String ECDHSha1Kdf : Public, Static, InitOnly
    System.String ECMqvSha1Kdf : Public, Static, InitOnly
    System.String IdeaCbc = 1.3.6.1.4.1.188.7.1.1.2 : Public, Static, Literal, HasDefault
    System.String Cast5Cbc = 1.2.840.113533.7.66.10 : Public, Static, Literal, HasDefault
  Properties:
    Org.BouncyCastle.Cms.CmsAttributeTableGenerator UnprotectedAttributeGenerator 'get set' : 
  Methods:
    get_UnprotectedAttributeGenerator(): PrivateScope, Public, HideBySig, SpecialName
    set_UnprotectedAttributeGenerator(CmsAttributeTableGenerator): PrivateScope, Public, HideBySig, SpecialName
    AddKeyTransRecipient(X509Certificate): PrivateScope, Public, HideBySig
    AddKeyTransRecipient(AsymmetricKeyParameter, Byte[]): PrivateScope, Public, HideBySig
    AddKekRecipient(String, KeyParameter, Byte[]): PrivateScope, Public, HideBySig
    AddKekRecipient(String, KeyParameter, KekIdentifier): PrivateScope, Public, HideBySig
    AddPasswordRecipient(CmsPbeKey, String): PrivateScope, Public, HideBySig
    AddKeyAgreementRecipient(String, AsymmetricKeyParameter, AsymmetricKeyParameter, X509Certificate, String): PrivateScope, Public, HideBySig
    AddKeyAgreementRecipients(String, AsymmetricKeyParameter, AsymmetricKeyParameter, ICollection, String): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.CmsAuthenticatedGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.CmsEnvelopedGenerator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Cms.CmsAuthenticatedDataGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.CmsAuthenticatedGenerator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Generate(CmsProcessable, String): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.CmsContentInfoParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    Close(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.CmsAuthenticatedDataParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.CmsContentInfoParser
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Cms.RecipientInformationStore _recipientInfoStore : Assembly
    Org.BouncyCastle.Asn1.Cms.AuthenticatedDataParser authData : Assembly
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier MacAlgorithmID 'get ' : 
    System.String MacAlgOid 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Object MacAlgParams 'get ' : 
  Methods:
    get_MacAlgorithmID(): PrivateScope, Public, HideBySig, SpecialName
    get_MacAlgOid(): PrivateScope, Public, HideBySig, SpecialName
    get_MacAlgParams(): PrivateScope, Public, HideBySig, SpecialName
    GetRecipientInfos(): PrivateScope, Public, HideBySig
    GetMac(): PrivateScope, Public, HideBySig
    GetAuthAttrs(): PrivateScope, Public, HideBySig
    GetUnauthAttrs(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.CmsAuthenticatedDataStreamGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.CmsAuthenticatedGenerator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetBufferSize(Int32): PrivateScope, Public, HideBySig
    SetBerEncodeRecipients(Boolean): PrivateScope, Public, HideBySig
    Open(Stream, String): PrivateScope, Public, HideBySig
    Open(Stream, String, Int32): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.CmsAuthEnvelopedData: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.ContentInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Cms.RecipientInformationStore recipientInfoStore : Assembly
    Org.BouncyCastle.Asn1.Cms.ContentInfo contentInfo : Assembly
Interface Org.BouncyCastle.Cms.CmsSecureReadable: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier Algorithm 'get ' : 
    System.Object CryptoObject 'get ' : 
  Methods:
    get_Algorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CryptoObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetReadable(KeyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Cms.CmsAuthEnvelopedGenerator: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Aes128Ccm : Public, Static, InitOnly
    System.String Aes192Ccm : Public, Static, InitOnly
    System.String Aes256Ccm : Public, Static, InitOnly
    System.String Aes128Gcm : Public, Static, InitOnly
    System.String Aes192Gcm : Public, Static, InitOnly
    System.String Aes256Gcm : Public, Static, InitOnly
Class Org.BouncyCastle.Cms.CmsCompressedData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.ContentInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.Cms.ContentInfo contentInfo : Assembly
  Properties:
    Org.BouncyCastle.Asn1.Cms.ContentInfo ContentInfo 'get ' : 
  Methods:
    GetContent(): PrivateScope, Public, HideBySig
    GetContent(Int32): PrivateScope, Public, HideBySig
    get_ContentInfo(): PrivateScope, Public, HideBySig, SpecialName
    GetEncoded(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.CmsCompressedDataGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ZLib = 1.2.840.113549.1.9.16.3.8 : Public, Static, Literal, HasDefault
  Methods:
    Generate(CmsProcessable, String): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.CmsCompressedDataParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.CmsContentInfoParser
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetContent(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.CmsCompressedDataStreamGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ZLib = 1.2.840.113549.1.9.16.3.8 : Public, Static, Literal, HasDefault
  Methods:
    SetBufferSize(Int32): PrivateScope, Public, HideBySig
    Open(Stream, String): PrivateScope, Public, HideBySig
    Open(Stream, String, String): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.CmsEnvelopedData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.ContentInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Cms.RecipientInformationStore recipientInfoStore : Assembly
    Org.BouncyCastle.Asn1.Cms.ContentInfo contentInfo : Assembly
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier EncryptionAlgorithmID 'get ' : 
    System.String EncryptionAlgOid 'get ' : 
    Org.BouncyCastle.Asn1.Cms.ContentInfo ContentInfo 'get ' : 
  Methods:
    get_EncryptionAlgorithmID(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptionAlgOid(): PrivateScope, Public, HideBySig, SpecialName
    GetRecipientInfos(): PrivateScope, Public, HideBySig
    get_ContentInfo(): PrivateScope, Public, HideBySig, SpecialName
    GetUnprotectedAttributes(): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.CmsEnvelopedDataGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.CmsEnvelopedGenerator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Generate(CmsProcessable, String): PrivateScope, Public, HideBySig
    Generate(CmsProcessable, String, Int32): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.CmsEnvelopedDataParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.CmsContentInfoParser
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Cms.RecipientInformationStore recipientInfoStore : Assembly
    Org.BouncyCastle.Asn1.Cms.EnvelopedDataParser envelopedData : Assembly
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier EncryptionAlgorithmID 'get ' : 
    System.String EncryptionAlgOid 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Object EncryptionAlgParams 'get ' : 
  Methods:
    get_EncryptionAlgorithmID(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptionAlgOid(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptionAlgParams(): PrivateScope, Public, HideBySig, SpecialName
    GetRecipientInfos(): PrivateScope, Public, HideBySig
    GetUnprotectedAttributes(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.CmsEnvelopedDataStreamGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.CmsEnvelopedGenerator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetBufferSize(Int32): PrivateScope, Public, HideBySig
    SetBerEncodeRecipients(Boolean): PrivateScope, Public, HideBySig
    Open(Stream, String): PrivateScope, Public, HideBySig
    Open(Stream, String, Int32): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.CmsEnvelopedHelper: NotPublic
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Cms.CmsEnvelopedHelper Instance : Assembly, Static, InitOnly
  Methods:
    CreateAsymmetricCipher(String): PrivateScope, Assembly, HideBySig
    CreateWrapper(String): PrivateScope, Assembly, HideBySig
    GetRfc3211WrapperName(String): PrivateScope, Assembly, HideBySig
    GetKeySize(String): PrivateScope, Assembly, HideBySig
    BuildRecipientInformationStore(Asn1Set, CmsSecureReadable): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Cms.CmsEnvelopedHelper+CmsAuthenticatedSecureReadable: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Cms.CmsReadable): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Cms.CmsSecureReadable
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier Algorithm 'get ' : 
    System.Object CryptoObject 'get ' : 
  Methods:
    get_Algorithm(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CryptoObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetReadable(KeyParameter): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Cms.CmsEnvelopedHelper+CmsEnvelopedSecureReadable: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Cms.CmsReadable): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Cms.CmsSecureReadable
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier Algorithm 'get ' : 
    System.Object CryptoObject 'get ' : 
  Methods:
    get_Algorithm(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CryptoObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetReadable(KeyParameter): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Crypto.ICipherParameters: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
Class Org.BouncyCastle.Cms.CmsPbeKey: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(System.String, Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.String, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(Char[], Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char[], Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ICipherParameters
  Fields:
    Char[] password : Assembly, InitOnly
    Byte[] salt : Assembly, InitOnly
    Int32 iterationCount : Assembly, InitOnly
  Properties:
    System.String Password 'get ' :  (Obsolete)
    Byte[] Salt 'get ' : 
    Int32 IterationCount 'get ' : 
    System.String Algorithm 'get ' : 
    System.String Format 'get ' : 
  Methods:
    get_Password(): PrivateScope, Public, HideBySig, SpecialName
    get_Salt(): PrivateScope, Public, HideBySig, SpecialName
    GetSalt(): PrivateScope, Public, HideBySig (Obsolete)
    get_IterationCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    GetEncoded(): PrivateScope, Public, HideBySig
    GetEncoded(String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
Interface Org.BouncyCastle.Cms.CmsProcessable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Write(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
Interface Org.BouncyCastle.Cms.CmsReadable: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetInputStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Cms.CmsProcessableByteArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Cms.CmsProcessable
    Org.BouncyCastle.Cms.CmsReadable
  Methods:
    GetInputStream(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Write(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Cms.CmsProcessableFile: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.FileInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.FileInfo, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Cms.CmsProcessable
    Org.BouncyCastle.Cms.CmsReadable
  Methods:
    GetInputStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
Class Org.BouncyCastle.Cms.CmsProcessableInputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Cms.CmsProcessable
    Org.BouncyCastle.Cms.CmsReadable
  Methods:
    GetInputStream(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Write(Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetContent(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
Class Org.BouncyCastle.Cms.CmsSignedData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Cms.CmsProcessable, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IDictionary, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Cms.CmsProcessable, System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Cms.CmsProcessable, Org.BouncyCastle.Asn1.Cms.ContentInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IDictionary, Org.BouncyCastle.Asn1.Cms.ContentInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.ContentInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Version 'get ' : 
    System.String SignedContentTypeOid 'get ' :  (Obsolete)
    Org.BouncyCastle.Asn1.DerObjectIdentifier SignedContentType 'get ' : 
    Org.BouncyCastle.Cms.CmsProcessable SignedContent 'get ' : 
    Org.BouncyCastle.Asn1.Cms.ContentInfo ContentInfo 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    GetSignerInfos(): PrivateScope, Public, HideBySig
    GetAttributeCertificates(String): PrivateScope, Public, HideBySig
    GetCertificates(String): PrivateScope, Public, HideBySig
    GetCrls(String): PrivateScope, Public, HideBySig
    get_SignedContentTypeOid(): PrivateScope, Public, HideBySig, SpecialName
    get_SignedContentType(): PrivateScope, Public, HideBySig, SpecialName
    get_SignedContent(): PrivateScope, Public, HideBySig, SpecialName
    get_ContentInfo(): PrivateScope, Public, HideBySig, SpecialName
    GetEncoded(): PrivateScope, Public, HideBySig
    ReplaceSigners(CmsSignedData, SignerInformationStore): PrivateScope, Public, Static, HideBySig
    ReplaceCertificatesAndCrls(CmsSignedData, IX509Store, IX509Store, IX509Store): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Cms.CmsSignedGenerator: AutoLayout, AnsiClass, Class, Public
  Fields:
    System.Collections.IList _certs : Assembly
    System.Collections.IList _crls : Assembly
    System.Collections.IList _signers : Assembly
    System.Collections.IDictionary _digests : Assembly
    System.String Data : Public, Static, InitOnly
    System.String DigestSha1 : Public, Static, InitOnly
    System.String DigestSha224 : Public, Static, InitOnly
    System.String DigestSha256 : Public, Static, InitOnly
    System.String DigestSha384 : Public, Static, InitOnly
    System.String DigestSha512 : Public, Static, InitOnly
    System.String DigestMD5 : Public, Static, InitOnly
    System.String DigestGost3411 : Public, Static, InitOnly
    System.String DigestRipeMD128 : Public, Static, InitOnly
    System.String DigestRipeMD160 : Public, Static, InitOnly
    System.String DigestRipeMD256 : Public, Static, InitOnly
    System.String EncryptionRsa : Public, Static, InitOnly
    System.String EncryptionDsa : Public, Static, InitOnly
    System.String EncryptionECDsa : Public, Static, InitOnly
    System.String EncryptionRsaPss : Public, Static, InitOnly
    System.String EncryptionGost3410 : Public, Static, InitOnly
    System.String EncryptionECGost3410 : Public, Static, InitOnly
  Methods:
    GetEncAlgorithmIdentifier(DerObjectIdentifier, Asn1Encodable): PrivateScope, Assembly, Static, HideBySig
    AddCertificates(IX509Store): PrivateScope, Public, HideBySig
    AddCrls(IX509Store): PrivateScope, Public, HideBySig
    AddAttributeCertificates(IX509Store): PrivateScope, Public, HideBySig
    AddSigners(SignerInformationStore): PrivateScope, Public, HideBySig
    GetGeneratedDigests(): PrivateScope, Public, HideBySig
    AddSignerCallback(SignerInformation): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetSignerIdentifier(X509Certificate): PrivateScope, Assembly, Static, HideBySig
    GetSignerIdentifier(Byte[]): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Cms.CmsSignedDataGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.CmsSignedGenerator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddSigner(AsymmetricKeyParameter, X509Certificate, String): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, X509Certificate, String, String): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, Byte[], String): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, Byte[], String, String): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, X509Certificate, String, AttributeTable, AttributeTable): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, X509Certificate, String, String, AttributeTable, AttributeTable): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, Byte[], String, AttributeTable, AttributeTable): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, Byte[], String, String, AttributeTable, AttributeTable): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, X509Certificate, String, CmsAttributeTableGenerator, CmsAttributeTableGenerator): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, X509Certificate, String, String, CmsAttributeTableGenerator, CmsAttributeTableGenerator): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, Byte[], String, CmsAttributeTableGenerator, CmsAttributeTableGenerator): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, Byte[], String, String, CmsAttributeTableGenerator, CmsAttributeTableGenerator): PrivateScope, Public, HideBySig
    Generate(CmsProcessable): PrivateScope, Public, HideBySig
    Generate(String, CmsProcessable, Boolean): PrivateScope, Public, HideBySig
    Generate(CmsProcessable, Boolean): PrivateScope, Public, HideBySig
    GenerateCounterSigners(SignerInformation): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.CmsSignedDataParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.CmsContentInfoParser
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Cms.CmsTypedStream, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Cms.CmsTypedStream, System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Version 'get ' : 
    Org.BouncyCastle.Utilities.Collections.ISet DigestOids 'get ' : 
    Org.BouncyCastle.Asn1.DerObjectIdentifier SignedContentType 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_DigestOids(): PrivateScope, Public, HideBySig, SpecialName
    GetSignerInfos(): PrivateScope, Public, HideBySig
    GetAttributeCertificates(String): PrivateScope, Public, HideBySig
    GetCertificates(String): PrivateScope, Public, HideBySig
    GetCrls(String): PrivateScope, Public, HideBySig
    get_SignedContentType(): PrivateScope, Public, HideBySig, SpecialName
    GetSignedContent(): PrivateScope, Public, HideBySig
    ReplaceSigners(Stream, SignerInformationStore, Stream): PrivateScope, Public, Static, HideBySig
    ReplaceCertificatesAndCrls(Stream, IX509Store, IX509Store, IX509Store, Stream): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.CmsSignedGenerator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetBufferSize(Int32): PrivateScope, Public, HideBySig
    AddDigests(String[]): PrivateScope, Public, HideBySig
    AddDigests(IEnumerable): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, X509Certificate, String): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, X509Certificate, String, String): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, X509Certificate, String, AttributeTable, AttributeTable): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, X509Certificate, String, String, AttributeTable, AttributeTable): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, X509Certificate, String, CmsAttributeTableGenerator, CmsAttributeTableGenerator): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, X509Certificate, String, String, CmsAttributeTableGenerator, CmsAttributeTableGenerator): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, Byte[], String): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, Byte[], String, String): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, Byte[], String, AttributeTable, AttributeTable): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, Byte[], String, CmsAttributeTableGenerator, CmsAttributeTableGenerator): PrivateScope, Public, HideBySig
    AddSigner(AsymmetricKeyParameter, Byte[], String, String, CmsAttributeTableGenerator, CmsAttributeTableGenerator): PrivateScope, Public, HideBySig
    AddSignerCallback(SignerInformation): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Open(Stream): PrivateScope, Public, HideBySig
    Open(Stream, Boolean): PrivateScope, Public, HideBySig
    Open(Stream, Boolean, Stream): PrivateScope, Public, HideBySig
    Open(Stream, String, Boolean): PrivateScope, Public, HideBySig
    Open(Stream, String, Boolean, Stream): PrivateScope, Public, HideBySig
    Generate(Stream, String, Boolean, Stream, CmsProcessable): PrivateScope, Assembly, HideBySig
Interface Org.BouncyCastle.Cms.SignerInfoGenerator: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    Generate(DerObjectIdentifier, AlgorithmIdentifier, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Cms.CmsSignedHelper: NotPublic
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Cms.CmsSignedHelper Instance : Assembly, Static, InitOnly
  Methods:
    GetDigestAlgName(String): PrivateScope, Assembly, HideBySig
    GetDigestAliases(String): PrivateScope, Assembly, HideBySig
    GetEncryptionAlgName(String): PrivateScope, Assembly, HideBySig
    GetDigestInstance(String): PrivateScope, Assembly, HideBySig
    GetSignatureInstance(String): PrivateScope, Assembly, HideBySig
    CreateAttributeStore(String, Asn1Set): PrivateScope, Assembly, HideBySig
    CreateCertificateStore(String, Asn1Set): PrivateScope, Assembly, HideBySig
    CreateCrlStore(String, Asn1Set): PrivateScope, Assembly, HideBySig
    FixAlgID(AlgorithmIdentifier): PrivateScope, Assembly, HideBySig
Class Org.BouncyCastle.Cms.CmsStreamException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Cms.CmsTypedStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.Stream, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ContentType 'get ' : 
    System.IO.Stream ContentStream 'get ' : 
  Methods:
    get_ContentType(): PrivateScope, Public, HideBySig, SpecialName
    get_ContentStream(): PrivateScope, Public, HideBySig, SpecialName
    Drain(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.CmsUtilities: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 MaximumMemory 'get ' : 
  Methods:
    get_MaximumMemory(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    ReadContentInfo(Byte[]): PrivateScope, Assembly, Static, HideBySig
    ReadContentInfo(Stream): PrivateScope, Assembly, Static, HideBySig
    StreamToByteArray(Stream): PrivateScope, Public, Static, HideBySig
    StreamToByteArray(Stream, Int32): PrivateScope, Public, Static, HideBySig
    GetCertificatesFromStore(IX509Store): PrivateScope, Public, Static, HideBySig
    GetCrlsFromStore(IX509Store): PrivateScope, Public, Static, HideBySig
    CreateBerSetFromList(IList): PrivateScope, Public, Static, HideBySig
    CreateDerSetFromList(IList): PrivateScope, Public, Static, HideBySig
    CreateBerOctetOutputStream(Stream, Int32, Boolean, Int32): PrivateScope, Assembly, Static, HideBySig
    GetTbsCertificateStructure(X509Certificate): PrivateScope, Assembly, Static, HideBySig
    GetIssuerAndSerialNumber(X509Certificate): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Cms.CounterSignatureDigestCalculator: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Cms.IDigestCalculator
  Methods:
    GetDigest(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Cms.DefaultSignedAttributeTableGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.AttributeTable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Cms.CmsAttributeTableGenerator
  Methods:
    GetAttributes(IDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Cms.DigOutputStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Org.BouncyCastle.Utilities.IO.BaseOutputStream
    Void .ctor(Org.BouncyCastle.Crypto.IDigest): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Interface Org.BouncyCastle.Cms.RecipientInfoGenerator: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    Generate(KeyParameter, SecureRandom): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Cms.KekRecipientInfoGenerator: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Cms.RecipientInfoGenerator
  Properties:
    Org.BouncyCastle.Asn1.Cms.KekIdentifier KekIdentifier 'set' : 
    Org.BouncyCastle.Crypto.Parameters.KeyParameter KeyEncryptionKey 'set' : 
    System.String KeyEncryptionKeyOID 'set' : 
  Methods:
    set_KekIdentifier(KekIdentifier): PrivateScope, Assembly, HideBySig, SpecialName
    set_KeyEncryptionKey(KeyParameter): PrivateScope, Assembly, HideBySig, SpecialName
    set_KeyEncryptionKeyOID(String): PrivateScope, Assembly, HideBySig, SpecialName
    Generate(KeyParameter, SecureRandom): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Cms.RecipientInformation: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Cms.CmsSecureReadable): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Cms.RecipientID rid : Assembly
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier keyEncAlg : Assembly
    Org.BouncyCastle.Cms.CmsSecureReadable secureReadable : Assembly
  Properties:
    Org.BouncyCastle.Cms.RecipientID RecipientID 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier KeyEncryptionAlgorithmID 'get ' : 
    System.String KeyEncryptionAlgOid 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Object KeyEncryptionAlgParams 'get ' : 
  Methods:
    GetContentAlgorithmName(): PrivateScope, Assembly, HideBySig
    get_RecipientID(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyEncryptionAlgorithmID(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyEncryptionAlgOid(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyEncryptionAlgParams(): PrivateScope, Public, HideBySig, SpecialName
    GetContentFromSessionKey(KeyParameter): PrivateScope, Assembly, HideBySig
    GetContent(ICipherParameters): PrivateScope, Public, HideBySig
    GetMac(): PrivateScope, Public, HideBySig
    GetContentStream(ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Cms.KekRecipientInformation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.RecipientInformation
    Void .ctor(Org.BouncyCastle.Asn1.Cms.KekRecipientInfo, Org.BouncyCastle.Cms.CmsSecureReadable): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetContentStream(ICipherParameters): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Cms.KeyAgreeRecipientInfoGenerator: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Cms.RecipientInfoGenerator
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier KeyAgreementOID 'set' : 
    Org.BouncyCastle.Asn1.DerObjectIdentifier KeyEncryptionOID 'set' : 
    System.Collections.ICollection RecipientCerts 'set' : 
    Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair SenderKeyPair 'set' : 
  Methods:
    set_KeyAgreementOID(DerObjectIdentifier): PrivateScope, Assembly, HideBySig, SpecialName
    set_KeyEncryptionOID(DerObjectIdentifier): PrivateScope, Assembly, HideBySig, SpecialName
    set_RecipientCerts(ICollection): PrivateScope, Assembly, HideBySig, SpecialName
    set_SenderKeyPair(AsymmetricCipherKeyPair): PrivateScope, Assembly, HideBySig, SpecialName
    Generate(KeyParameter, SecureRandom): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Cms.KeyAgreeRecipientInformation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.RecipientInformation
    Void .ctor(Org.BouncyCastle.Asn1.Cms.KeyAgreeRecipientInfo, Org.BouncyCastle.Cms.RecipientID, Org.BouncyCastle.Asn1.Asn1OctetString, Org.BouncyCastle.Cms.CmsSecureReadable): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadRecipientInfo(IList, KeyAgreeRecipientInfo, CmsSecureReadable): PrivateScope, Assembly, Static, HideBySig
    GetSessionKey(AsymmetricKeyParameter): PrivateScope, Assembly, HideBySig
    GetContentStream(ICipherParameters): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Cms.KeyTransRecipientInfoGenerator: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Cms.RecipientInfoGenerator
  Properties:
    Org.BouncyCastle.X509.X509Certificate RecipientCert 'set' : 
    Org.BouncyCastle.Crypto.AsymmetricKeyParameter RecipientPublicKey 'set' : 
    Org.BouncyCastle.Asn1.Asn1OctetString SubjectKeyIdentifier 'set' : 
  Methods:
    set_RecipientCert(X509Certificate): PrivateScope, Assembly, HideBySig, SpecialName
    set_RecipientPublicKey(AsymmetricKeyParameter): PrivateScope, Assembly, HideBySig, SpecialName
    set_SubjectKeyIdentifier(Asn1OctetString): PrivateScope, Assembly, HideBySig, SpecialName
    Generate(KeyParameter, SecureRandom): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Cms.KeyTransRecipientInformation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.RecipientInformation
    Void .ctor(Org.BouncyCastle.Asn1.Cms.KeyTransRecipientInfo, Org.BouncyCastle.Cms.CmsSecureReadable): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    UnwrapKey(ICipherParameters): PrivateScope, Assembly, HideBySig
    GetContentStream(ICipherParameters): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Cms.MacOutputStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Org.BouncyCastle.Utilities.IO.BaseOutputStream
    Void .ctor(Org.BouncyCastle.Crypto.IMac): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Cms.NullOutputStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Org.BouncyCastle.Utilities.IO.BaseOutputStream
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Interface Org.BouncyCastle.X509.Store.IX509Selector: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.ICloneable
  Methods:
    Match(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.X509.Store.X509CertStoreSelector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.X509.Store.X509CertStoreSelector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.X509.Store.IX509Selector
    System.ICloneable
  Properties:
    Byte[] AuthorityKeyIdentifier 'get set' : 
    Int32 BasicConstraints 'get set' : 
    Org.BouncyCastle.X509.X509Certificate Certificate 'get set' : 
    Org.BouncyCastle.Utilities.Date.DateTimeObject CertificateValid 'get set' : 
    Org.BouncyCastle.Utilities.Collections.ISet ExtendedKeyUsage 'get set' : 
    Org.BouncyCastle.Asn1.X509.X509Name Issuer 'get set' : 
    System.String IssuerAsString 'get ' :  (Obsolete)
    Boolean[] KeyUsage 'get set' : 
    Org.BouncyCastle.Utilities.Collections.ISet Policy 'get set' : 
    Org.BouncyCastle.Utilities.Date.DateTimeObject PrivateKeyValid 'get set' : 
    Org.BouncyCastle.Math.BigInteger SerialNumber 'get set' : 
    Org.BouncyCastle.Asn1.X509.X509Name Subject 'get set' : 
    System.String SubjectAsString 'get ' : 
    Byte[] SubjectKeyIdentifier 'get set' : 
    Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo SubjectPublicKey 'get set' : 
    Org.BouncyCastle.Asn1.DerObjectIdentifier SubjectPublicKeyAlgID 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AuthorityKeyIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    set_AuthorityKeyIdentifier(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_BasicConstraints(): PrivateScope, Public, HideBySig, SpecialName
    set_BasicConstraints(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Certificate(): PrivateScope, Public, HideBySig, SpecialName
    set_Certificate(X509Certificate): PrivateScope, Public, HideBySig, SpecialName
    get_CertificateValid(): PrivateScope, Public, HideBySig, SpecialName
    set_CertificateValid(DateTimeObject): PrivateScope, Public, HideBySig, SpecialName
    get_ExtendedKeyUsage(): PrivateScope, Public, HideBySig, SpecialName
    set_ExtendedKeyUsage(ISet): PrivateScope, Public, HideBySig, SpecialName
    get_Issuer(): PrivateScope, Public, HideBySig, SpecialName
    set_Issuer(X509Name): PrivateScope, Public, HideBySig, SpecialName
    get_IssuerAsString(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyUsage(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyUsage(Boolean[]): PrivateScope, Public, HideBySig, SpecialName
    get_Policy(): PrivateScope, Public, HideBySig, SpecialName
    set_Policy(ISet): PrivateScope, Public, HideBySig, SpecialName
    get_PrivateKeyValid(): PrivateScope, Public, HideBySig, SpecialName
    set_PrivateKeyValid(DateTimeObject): PrivateScope, Public, HideBySig, SpecialName
    get_SerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_SerialNumber(BigInteger): PrivateScope, Public, HideBySig, SpecialName
    get_Subject(): PrivateScope, Public, HideBySig, SpecialName
    set_Subject(X509Name): PrivateScope, Public, HideBySig, SpecialName
    get_SubjectAsString(): PrivateScope, Public, HideBySig, SpecialName
    get_SubjectKeyIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    set_SubjectKeyIdentifier(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_SubjectPublicKey(): PrivateScope, Public, HideBySig, SpecialName
    set_SubjectPublicKey(SubjectPublicKeyInfo): PrivateScope, Public, HideBySig, SpecialName
    get_SubjectPublicKeyAlgID(): PrivateScope, Public, HideBySig, SpecialName
    set_SubjectPublicKeyAlgID(DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName
    Match(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IssuersMatch(X509Name, X509Name): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Cms.OriginatorID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.X509.Store.X509CertStoreSelector
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Cms.PasswordRecipientInfoGenerator: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Cms.RecipientInfoGenerator
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier KeyDerivationAlgorithm 'set' : 
    Org.BouncyCastle.Crypto.Parameters.KeyParameter KeyEncryptionKey 'set' : 
    System.String KeyEncryptionKeyOID 'set' : 
  Methods:
    set_KeyDerivationAlgorithm(AlgorithmIdentifier): PrivateScope, Assembly, HideBySig, SpecialName
    set_KeyEncryptionKey(KeyParameter): PrivateScope, Assembly, HideBySig, SpecialName
    set_KeyEncryptionKeyOID(String): PrivateScope, Assembly, HideBySig, SpecialName
    Generate(KeyParameter, SecureRandom): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Cms.PasswordRecipientInformation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.RecipientInformation
    Void .ctor(Org.BouncyCastle.Asn1.Cms.PasswordRecipientInfo, Org.BouncyCastle.Cms.CmsSecureReadable): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier KeyDerivationAlgorithm 'get ' : 
  Methods:
    get_KeyDerivationAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetContentStream(ICipherParameters): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Cms.Pkcs5Scheme2PbeKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.CmsPbeKey
    Void .ctor(System.String, Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.String, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(Char[], Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char[], Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetEncoded(String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Cms.Pkcs5Scheme2Utf8PbeKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Cms.CmsPbeKey
    Void .ctor(System.String, Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.String, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(Char[], Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char[], Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetEncoded(String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Cms.RecipientID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.X509.Store.X509CertStoreSelector
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] KeyIdentifier 'get set' : 
  Methods:
    get_KeyIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyIdentifier(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Cms.RecipientInformationStore: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.ICollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Cms.RecipientInformation Item [Org.BouncyCastle.Cms.RecipientID] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Item(RecipientID): PrivateScope, Public, HideBySig, SpecialName
    GetFirstRecipient(RecipientID): PrivateScope, Public, HideBySig
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    GetRecipients(): PrivateScope, Public, HideBySig
    GetRecipients(RecipientID): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.SignerID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.X509.Store.X509CertStoreSelector
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Cms.SignerInformation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Cms.SignerInfo, Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Cms.CmsProcessable, Org.BouncyCastle.Cms.IDigestCalculator): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsCounterSignature 'get ' : 
    Org.BouncyCastle.Asn1.DerObjectIdentifier ContentType 'get ' : 
    Org.BouncyCastle.Cms.SignerID SignerID 'get ' : 
    Int32 Version 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier DigestAlgorithmID 'get ' : 
    System.String DigestAlgOid 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Object DigestAlgParams 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier EncryptionAlgorithmID 'get ' : 
    System.String EncryptionAlgOid 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Object EncryptionAlgParams 'get ' : 
    Org.BouncyCastle.Asn1.Cms.AttributeTable SignedAttributes 'get ' : 
    Org.BouncyCastle.Asn1.Cms.AttributeTable UnsignedAttributes 'get ' : 
  Methods:
    get_IsCounterSignature(): PrivateScope, Public, HideBySig, SpecialName
    get_ContentType(): PrivateScope, Public, HideBySig, SpecialName
    get_SignerID(): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_DigestAlgorithmID(): PrivateScope, Public, HideBySig, SpecialName
    get_DigestAlgOid(): PrivateScope, Public, HideBySig, SpecialName
    get_DigestAlgParams(): PrivateScope, Public, HideBySig, SpecialName
    GetContentDigest(): PrivateScope, Public, HideBySig
    get_EncryptionAlgorithmID(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptionAlgOid(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptionAlgParams(): PrivateScope, Public, HideBySig, SpecialName
    get_SignedAttributes(): PrivateScope, Public, HideBySig, SpecialName
    get_UnsignedAttributes(): PrivateScope, Public, HideBySig, SpecialName
    GetSignature(): PrivateScope, Public, HideBySig
    GetCounterSignatures(): PrivateScope, Public, HideBySig
    GetEncodedSignedAttributes(): PrivateScope, Public, HideBySig
    Verify(AsymmetricKeyParameter): PrivateScope, Public, HideBySig
    Verify(X509Certificate): PrivateScope, Public, HideBySig
    ToSignerInfo(): PrivateScope, Public, HideBySig
    ReplaceUnsignedAttributes(SignerInformation, AttributeTable): PrivateScope, Public, Static, HideBySig
    AddCounterSigners(SignerInformation, SignerInformationStore): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Cms.SignerInformationStore: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.ICollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
  Methods:
    GetFirstSigner(SignerID): PrivateScope, Public, HideBySig
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    GetSigners(): PrivateScope, Public, HideBySig
    GetSigners(SignerID): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Cms.SigOutputStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Org.BouncyCastle.Utilities.IO.BaseOutputStream
    Void .ctor(Org.BouncyCastle.Crypto.ISigner): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Cms.SimpleAttributeTableGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Cms.AttributeTable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Cms.CmsAttributeTableGenerator
  Methods:
    GetAttributes(IDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Agreement.DHAgreement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(ICipherParameters): PrivateScope, Public, HideBySig
    CalculateMessage(): PrivateScope, Public, HideBySig
    CalculateAgreement(DHPublicKeyParameters, BigInteger): PrivateScope, Public, HideBySig
Interface Org.BouncyCastle.Crypto.IBasicAgreement: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Init(ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFieldSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CalculateAgreement(ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Agreement.DHBasicAgreement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBasicAgreement
  Methods:
    Init(ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CalculateAgreement(ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBasicAgreement
  Methods:
    Init(ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CalculateAgreement(ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Agreement.ECDHCBasicAgreement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBasicAgreement
  Methods:
    Init(ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CalculateAgreement(ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Agreement.ECDHWithKdfBasicAgreement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement
    Void .ctor(System.String, Org.BouncyCastle.Crypto.IDerivationFunction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CalculateAgreement(ICipherParameters): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Agreement.ECMqvBasicAgreement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBasicAgreement
  Methods:
    Init(ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CalculateAgreement(ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Agreement.ECMqvWithKdfBasicAgreement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Agreement.ECMqvBasicAgreement
    Void .ctor(System.String, Org.BouncyCastle.Crypto.IDerivationFunction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CalculateAgreement(ICipherParameters): PrivateScope, Public, Virtual, HideBySig
Interface Org.BouncyCastle.Crypto.IDerivationParameters: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
Class Org.BouncyCastle.Crypto.Agreement.Kdf.DHKdfParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Int32, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Int32, Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDerivationParameters
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier Algorithm 'get ' : 
    Int32 KeySize 'get ' : 
  Methods:
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_KeySize(): PrivateScope, Public, HideBySig, SpecialName
    GetZ(): PrivateScope, Public, HideBySig
    GetExtraInfo(): PrivateScope, Public, HideBySig
Interface Org.BouncyCastle.Crypto.IDerivationFunction: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Org.BouncyCastle.Crypto.IDigest Digest 'get ' : 
  Methods:
    Init(IDerivationParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Digest(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GenerateBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Agreement.Kdf.DHKekGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDerivationFunction
  Properties:
    Org.BouncyCastle.Crypto.IDigest Digest 'get ' : 
  Methods:
    Init(IDerivationParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Digest(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GenerateBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Agreement.Kdf.ECDHKekGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDerivationFunction
  Properties:
    Org.BouncyCastle.Crypto.IDigest Digest 'get ' : 
  Methods:
    Init(IDerivationParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Digest(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GenerateBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Client: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(BigInteger, BigInteger, IDigest, SecureRandom): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateClientCredentials(Byte[], Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CalculateSecret(BigInteger): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Server: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(BigInteger, BigInteger, BigInteger, IDigest, SecureRandom): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateServerCredentials(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CalculateSecret(BigInteger): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Utilities: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CalculateK(IDigest, BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig
    CalculateU(IDigest, BigInteger, BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig
    CalculateX(IDigest, BigInteger, Byte[], Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
    GeneratePrivateValue(IDigest, BigInteger, BigInteger, SecureRandom): PrivateScope, Public, Static, HideBySig
    ValidatePublicValue(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Crypto.Agreement.Srp.Srp6VerifierGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(BigInteger, BigInteger, IDigest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateVerifier(Byte[], Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter, Org.BouncyCastle.Crypto.AsymmetricKeyParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Crypto.AsymmetricKeyParameter Public 'get ' : 
    Org.BouncyCastle.Crypto.AsymmetricKeyParameter Private 'get ' : 
  Methods:
    get_Public(): PrivateScope, Public, HideBySig, SpecialName
    get_Private(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.AsymmetricKeyParameter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    Org.BouncyCastle.Crypto.ICipherParameters
  Properties:
    Boolean IsPrivate 'get ' : 
  Methods:
    get_IsPrivate(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Interface Org.BouncyCastle.Crypto.IBufferedCipher: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUpdateOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessByte(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessByte(Byte, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessBytes(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessBytes(Byte[], Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoFinal(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoFinal(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoFinal(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoFinal(Byte[], Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoFinal(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.BufferedCipherBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    Org.BouncyCastle.Crypto.IBufferedCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUpdateOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessByte(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessByte(Byte, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessBytes(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessBytes(Byte[], Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoFinal(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoFinal(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.BufferedAeadBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.BufferedCipherBase
    Void .ctor(Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig
    GetUpdateOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig
    GetOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig
    ProcessByte(Byte, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    ProcessByte(Byte): PrivateScope, Public, Virtual, HideBySig
    ProcessBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    DoFinal(): PrivateScope, Public, Virtual, HideBySig
    DoFinal(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.BufferedAsymmetricBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.BufferedCipherBase
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    GetBufferPosition(): PrivateScope, Assembly, HideBySig
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig
    GetOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig
    GetUpdateOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig
    ProcessByte(Byte): PrivateScope, Public, Virtual, HideBySig
    ProcessBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    DoFinal(): PrivateScope, Public, Virtual, HideBySig
    DoFinal(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.BufferedBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.BufferedCipherBase
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] buf : Assembly
    Int32 bufOff : Assembly
    Boolean forEncryption : Assembly
    Org.BouncyCastle.Crypto.IBlockCipher cipher : Assembly
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig
    GetUpdateOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig
    GetOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig
    ProcessByte(Byte, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    ProcessByte(Byte): PrivateScope, Public, Virtual, HideBySig
    ProcessBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    DoFinal(): PrivateScope, Public, Virtual, HideBySig
    DoFinal(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.BufferedIesCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.BufferedCipherBase
    Void .ctor(Org.BouncyCastle.Crypto.Engines.IesEngine): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig
    GetOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig
    GetUpdateOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig
    ProcessByte(Byte): PrivateScope, Public, Virtual, HideBySig
    ProcessBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    DoFinal(): PrivateScope, Public, Virtual, HideBySig
    DoFinal(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.BufferedStreamCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.BufferedCipherBase
    Void .ctor(Org.BouncyCastle.Crypto.IStreamCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig
    GetOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig
    GetUpdateOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig
    ProcessByte(Byte): PrivateScope, Public, Virtual, HideBySig
    ProcessByte(Byte, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    ProcessBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    DoFinal(): PrivateScope, Public, Virtual, HideBySig
    DoFinal(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.CipherKeyGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 DefaultStrength 'get ' : 
  Methods:
    get_DefaultStrength(): PrivateScope, Public, HideBySig, SpecialName
    Init(KeyGenerationParameters): PrivateScope, Public, HideBySig
    GenerateKey(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Crypto.CryptoException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Crypto.DataLengthException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Crypto.CryptoException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface Org.BouncyCastle.Crypto.IDigest: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetDigestSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetByteLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Update(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Digests.GeneralDigest: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.GeneralDigest): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDigest
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Finish(): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetByteLength(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessWord(Byte[], Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ProcessLength(Int64): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ProcessBlock(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetDigestSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Digests.Gost3411Digest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.Gost3411Digest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDigest
  Fields:
    Int16[] wS : Assembly
    Int16[] w_S : Assembly
    Byte[] S : Assembly
    Byte[] U : Assembly
    Byte[] V : Assembly
    Byte[] W : Assembly
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetDigestSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetByteLength(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Digests.LongDigest: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.LongDigest): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDigest
  Fields:
    UInt64 H1 : Assembly
    UInt64 H2 : Assembly
    UInt64 H3 : Assembly
    UInt64 H4 : Assembly
    UInt64 H5 : Assembly
    UInt64 H6 : Assembly
    UInt64 H7 : Assembly
    UInt64 H8 : Assembly
    UInt64[] K : Assembly, Static, InitOnly
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Finish(): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessWord(Byte[], Int32): PrivateScope, Assembly, HideBySig
    ProcessLength(Int64, Int64): PrivateScope, Assembly, HideBySig
    ProcessBlock(): PrivateScope, Assembly, HideBySig
    GetByteLength(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetDigestSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Digests.MD2Digest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.MD2Digest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDigest
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetDigestSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetByteLength(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessChecksum(Byte[]): PrivateScope, Assembly, HideBySig
    ProcessBlock(Byte[]): PrivateScope, Assembly, HideBySig
Class Org.BouncyCastle.Crypto.Digests.MD4Digest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Digests.GeneralDigest
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.MD4Digest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetDigestSize(): PrivateScope, Public, Virtual, HideBySig
    ProcessWord(Byte[], Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ProcessLength(Int64): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    ProcessBlock(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Crypto.Digests.MD5Digest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Digests.GeneralDigest
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.MD5Digest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetDigestSize(): PrivateScope, Public, Virtual, HideBySig
    ProcessWord(Byte[], Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ProcessLength(Int64): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    ProcessBlock(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Crypto.Digests.NullDigest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDigest
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetByteLength(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDigestSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Digests.RipeMD128Digest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Digests.GeneralDigest
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.RipeMD128Digest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetDigestSize(): PrivateScope, Public, Virtual, HideBySig
    ProcessWord(Byte[], Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ProcessLength(Int64): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    ProcessBlock(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Crypto.Digests.RipeMD160Digest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Digests.GeneralDigest
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.RipeMD160Digest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetDigestSize(): PrivateScope, Public, Virtual, HideBySig
    ProcessWord(Byte[], Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ProcessLength(Int64): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    ProcessBlock(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Crypto.Digests.RipeMD256Digest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Digests.GeneralDigest
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.RipeMD256Digest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetDigestSize(): PrivateScope, Public, Virtual, HideBySig
    ProcessWord(Byte[], Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ProcessLength(Int64): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    ProcessBlock(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Crypto.Digests.RipeMD320Digest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Digests.GeneralDigest
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.RipeMD320Digest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetDigestSize(): PrivateScope, Public, Virtual, HideBySig
    ProcessWord(Byte[], Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ProcessLength(Int64): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    ProcessBlock(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Crypto.Digests.Sha1Digest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Digests.GeneralDigest
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.Sha1Digest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetDigestSize(): PrivateScope, Public, Virtual, HideBySig
    ProcessWord(Byte[], Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ProcessLength(Int64): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    ProcessBlock(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Crypto.Digests.Sha224Digest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Digests.GeneralDigest
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.Sha224Digest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32[] K : Assembly, Static, InitOnly
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetDigestSize(): PrivateScope, Public, Virtual, HideBySig
    ProcessWord(Byte[], Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ProcessLength(Int64): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    ProcessBlock(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Crypto.Digests.Sha256Digest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Digests.GeneralDigest
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.Sha256Digest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetDigestSize(): PrivateScope, Public, Virtual, HideBySig
    ProcessWord(Byte[], Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ProcessLength(Int64): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    ProcessBlock(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Crypto.Digests.Sha384Digest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Digests.LongDigest
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.Sha384Digest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetDigestSize(): PrivateScope, Public, Virtual, HideBySig
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Digests.Sha3Digest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.Sha3Digest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDigest
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetDigestSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetByteLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Digests.Sha512Digest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Digests.LongDigest
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.Sha512Digest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetDigestSize(): PrivateScope, Public, Virtual, HideBySig
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Digests.Sha512tDigest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Digests.LongDigest
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.Sha512tDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetDigestSize(): PrivateScope, Public, Virtual, HideBySig
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Digests.ShortenedDigest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IDigest, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDigest
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetDigestSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetByteLength(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Digests.TigerDigest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.TigerDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDigest
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetDigestSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetByteLength(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest: AutoLayout, AnsiClass, Class, Public, Sealed
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDigest
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetDigestSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetByteLength(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Crypto.IAsymmetricBlockCipher: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInputBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetOutputBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessBlock(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetUnderlyingCipher(): PrivateScope, Public, HideBySig
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetPadBits(Int32): PrivateScope, Public, HideBySig
    GetPadBits(): PrivateScope, Public, HideBySig
    ProcessBlock(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Encodings.OaepEncoding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, Org.BouncyCastle.Crypto.IDigest, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    GetUnderlyingCipher(): PrivateScope, Public, HideBySig
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding: AutoLayout, AnsiClass, Class, Public
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
  Fields:
    System.String StrictLengthEnabledProperty = Org.BouncyCastle.Pkcs1.Strict : Public, Static, Literal, HasDefault
  Properties:
    Boolean StrictLengthEnabled 'get set' : 
    System.String AlgorithmName 'get ' : 
  Methods:
    get_StrictLengthEnabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_StrictLengthEnabled(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    GetUnderlyingCipher(): PrivateScope, Public, HideBySig
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Crypto.IBlockCipher: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_IsPartialBlockOkay(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Engines.AesEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.AesFastEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.AesLightEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Crypto.IWrapper: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Wrap(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Unwrap(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Engines.Rfc3394WrapEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IWrapper
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Wrap(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Unwrap(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.AesWrapEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Engines.Rfc3394WrapEngine
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Crypto.Engines.BlowfishEngine: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.CamelliaEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.CamelliaLightEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.CamelliaWrapEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Engines.Rfc3394WrapEngine
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Crypto.Engines.Cast5Engine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Fields:
    UInt32[] S1 : Assembly, Static, InitOnly
    UInt32[] S2 : Assembly, Static, InitOnly
    UInt32[] S3 : Assembly, Static, InitOnly
    UInt32[] S4 : Assembly, Static, InitOnly
    UInt32[] S5 : Assembly, Static, InitOnly
    UInt32[] S6 : Assembly, Static, InitOnly
    UInt32[] S7 : Assembly, Static, InitOnly
    UInt32[] S8 : Assembly, Static, InitOnly
    Int32 MAX_ROUNDS : Assembly, Static, InitOnly
    Int32 RED_ROUNDS : Assembly, Static, InitOnly
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetKey(Byte[]): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    EncryptBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    DecryptBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    F1(UInt32, UInt32, Int32): PrivateScope, Assembly, Static, HideBySig
    F2(UInt32, UInt32, Int32): PrivateScope, Assembly, Static, HideBySig
    F3(UInt32, UInt32, Int32): PrivateScope, Assembly, Static, HideBySig
    CAST_Encipher(UInt32, UInt32, UInt32[]): PrivateScope, Assembly, HideBySig
    CAST_Decipher(UInt32, UInt32, UInt32[]): PrivateScope, Assembly, HideBySig
    Bits32ToInts(UInt32, Int32[], Int32): PrivateScope, Assembly, Static, HideBySig
    IntsTo32bits(Int32[], Int32): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Crypto.Engines.Cast6Engine: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Engines.Cast5Engine
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Reset(): PrivateScope, Public, Virtual, HideBySig
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig
    SetKey(Byte[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    EncryptBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DecryptBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Crypto.Engines.DesEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Fields:
    Int32 BLOCK_SIZE = 8 : Assembly, Static, Literal, HasDefault
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    GetWorkingKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DesFunc(Int32[], Byte[], Int32, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Crypto.Engines.DesEdeEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Engines.DesEngine
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Engines.DesEdeWrapEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IWrapper
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Wrap(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Unwrap(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.ElGamalEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.Gost28147Engine: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSBox(String): PrivateScope, Public, Static, HideBySig
Interface Org.BouncyCastle.Crypto.IStreamCipher: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReturnByte(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Engines.HC128Engine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IStreamCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReturnByte(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.HC256Engine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IStreamCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReturnByte(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.IesEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBasicAgreement, Org.BouncyCastle.Crypto.IDerivationFunction, Org.BouncyCastle.Crypto.IMac): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IBasicAgreement, Org.BouncyCastle.Crypto.IDerivationFunction, Org.BouncyCastle.Crypto.IMac, Org.BouncyCastle.Crypto.BufferedBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(Boolean, ICipherParameters, ICipherParameters, ICipherParameters): PrivateScope, Public, HideBySig
    ProcessBlock(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Crypto.Engines.IsaacEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IStreamCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReturnByte(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.NaccacheSternEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean Debug 'set' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    set_Debug(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetInputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Encrypt(BigInteger): PrivateScope, Public, HideBySig
    AddCryptedBlocks(Byte[], Byte[]): PrivateScope, Public, HideBySig
    ProcessData(Byte[]): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Crypto.Engines.NoekeonEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.NullEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.RC2Engine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.RC2WrapEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IWrapper
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Wrap(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Unwrap(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.RC4Engine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IStreamCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ReturnByte(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.RC532Engine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.RC564Engine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.RC6Engine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.Rfc3211WrapEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IWrapper
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Wrap(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Unwrap(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.RijndaelEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.RsaBlindedEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.RsaBlindingEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.RsaCoreEngine: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, HideBySig
    GetInputBlockSize(): PrivateScope, Public, HideBySig
    GetOutputBlockSize(): PrivateScope, Public, HideBySig
    ConvertInput(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    ConvertOutput(BigInteger): PrivateScope, Public, HideBySig
    ProcessBlock(BigInteger): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Crypto.Engines.RsaEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.Salsa20Engine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IStreamCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ReturnByte(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SalsaCore(Int32, UInt32[], UInt32[]): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Crypto.Engines.SeedEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.SeedWrapEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Engines.Rfc3394WrapEngine
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Crypto.Engines.SerpentEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.SkipjackEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EncryptBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, HideBySig
    DecryptBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Crypto.Engines.TeaEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.TwofishEngine: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.VmpcEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IStreamCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReturnByte(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Engines.VmpcKsa3Engine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Engines.VmpcEngine
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Engines.XteaEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Generators.BaseKdfBytesGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDerivationFunction
  Properties:
    Org.BouncyCastle.Crypto.IDigest Digest 'get ' : 
  Methods:
    Init(IDerivationParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Digest(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GenerateBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Generators.DesKeyGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.CipherKeyGenerator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Crypto.Generators.DesEdeKeyGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Generators.DesKeyGenerator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Interface Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Init(KeyGenerationParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GenerateKeyPair(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Generators.DHBasicKeyPairGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  Methods:
    Init(KeyGenerationParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateKeyPair(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Generators.DHKeyGeneratorHelper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Crypto.Generators.DHKeyGeneratorHelper Instance : Assembly, Static, InitOnly
  Methods:
    CalculatePrivate(DHParameters, SecureRandom): PrivateScope, Assembly, HideBySig
    CalculatePublic(DHParameters, BigInteger): PrivateScope, Assembly, HideBySig
Class Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  Methods:
    Init(KeyGenerationParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateKeyPair(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Generators.DHParametersGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(Int32, Int32, SecureRandom): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Generators.DHParametersHelper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GenerateSafePrimes(Int32, Int32, SecureRandom): PrivateScope, Assembly, Static, HideBySig
    SelectGenerator(BigInteger, BigInteger, SecureRandom): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Crypto.Generators.DsaKeyPairGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  Methods:
    Init(KeyGenerationParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateKeyPair(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Generators.DsaParametersGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(Int32, Int32, SecureRandom): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Init(DsaParameterGenerationParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Generators.ECKeyPairGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  Methods:
    Init(KeyGenerationParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateKeyPair(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FindECCurveByOid(DerObjectIdentifier): PrivateScope, Assembly, Static, HideBySig
    GetCorrespondingPublicKey(ECPrivateKeyParameters): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Crypto.Generators.ElGamalKeyPairGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  Methods:
    Init(KeyGenerationParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateKeyPair(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Generators.ElGamalParametersGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(Int32, Int32, SecureRandom): PrivateScope, Public, HideBySig
    GenerateParameters(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Crypto.Generators.Gost3410KeyPairGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  Methods:
    Init(KeyGenerationParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateKeyPair(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Generators.Gost3410ParametersGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(Int32, Int32, SecureRandom): PrivateScope, Public, HideBySig
    GenerateParameters(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Crypto.Generators.Kdf1BytesGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Generators.BaseKdfBytesGenerator
    Void .ctor(Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Crypto.Generators.Kdf2BytesGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Generators.BaseKdfBytesGenerator
    Void .ctor(Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Crypto.Generators.Mgf1BytesGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDerivationFunction
  Properties:
    Org.BouncyCastle.Crypto.IDigest Digest 'get ' : 
  Methods:
    Init(IDerivationParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Digest(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GenerateBytes(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Generators.NaccacheSternKeyPairGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  Methods:
    Init(KeyGenerationParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateKeyPair(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.PbeParametersGenerator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Byte[] Password 'get ' : 
    Byte[] Salt 'get ' : 
    Int32 IterationCount 'get ' : 
  Methods:
    Init(Byte[], Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Password(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetPassword(): PrivateScope, Public, HideBySig (Obsolete)
    get_Salt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSalt(): PrivateScope, Public, HideBySig (Obsolete)
    get_IterationCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GenerateDerivedParameters(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    GenerateDerivedParameters(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GenerateDerivedParameters(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    GenerateDerivedParameters(String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GenerateDerivedMacParameters(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Pkcs5PasswordToBytes(Char[]): PrivateScope, Public, Static, HideBySig
    Pkcs5PasswordToBytes(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    Pkcs5PasswordToUtf8Bytes(Char[]): PrivateScope, Public, Static, HideBySig
    Pkcs5PasswordToUtf8Bytes(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    Pkcs12PasswordToBytes(Char[]): PrivateScope, Public, Static, HideBySig
    Pkcs12PasswordToBytes(Char[], Boolean): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.PbeParametersGenerator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(Byte[], Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    Init(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateDerivedParameters(Int32): PrivateScope, Public, Virtual, HideBySig (Obsolete)
    GenerateDerivedParameters(String, Int32): PrivateScope, Public, Virtual, HideBySig
    GenerateDerivedParameters(Int32, Int32): PrivateScope, Public, Virtual, HideBySig (Obsolete)
    GenerateDerivedParameters(String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GenerateDerivedMacParameters(Int32): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Generators.Pkcs12ParametersGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.PbeParametersGenerator
    Void .ctor(Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 KeyMaterial = 1 : Public, Static, Literal, HasDefault
    Int32 IVMaterial = 2 : Public, Static, Literal, HasDefault
    Int32 MacMaterial = 3 : Public, Static, Literal, HasDefault
  Methods:
    GenerateDerivedParameters(Int32): PrivateScope, Public, Virtual, HideBySig (Obsolete)
    GenerateDerivedParameters(String, Int32): PrivateScope, Public, Virtual, HideBySig
    GenerateDerivedParameters(Int32, Int32): PrivateScope, Public, Virtual, HideBySig (Obsolete)
    GenerateDerivedParameters(String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GenerateDerivedMacParameters(Int32): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Generators.Pkcs5S1ParametersGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.PbeParametersGenerator
    Void .ctor(Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GenerateDerivedParameters(Int32): PrivateScope, Public, Virtual, HideBySig (Obsolete)
    GenerateDerivedParameters(String, Int32): PrivateScope, Public, Virtual, HideBySig
    GenerateDerivedParameters(Int32, Int32): PrivateScope, Public, Virtual, HideBySig (Obsolete)
    GenerateDerivedParameters(String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GenerateDerivedMacParameters(Int32): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Generators.Pkcs5S2ParametersGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.PbeParametersGenerator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GenerateDerivedParameters(Int32): PrivateScope, Public, Virtual, HideBySig (Obsolete)
    GenerateDerivedParameters(String, Int32): PrivateScope, Public, Virtual, HideBySig
    GenerateDerivedParameters(Int32, Int32): PrivateScope, Public, Virtual, HideBySig (Obsolete)
    GenerateDerivedParameters(String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GenerateDerivedMacParameters(Int32): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Generators.RsaBlindingFactorGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(ICipherParameters): PrivateScope, Public, HideBySig
    GenerateBlindingFactor(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  Methods:
    Init(KeyGenerationParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateKeyPair(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Crypto.IDsa: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GenerateSignature(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    VerifySignature(Byte[], BigInteger, BigInteger): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Org.BouncyCastle.Crypto.IMac: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    Init(ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetMacSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Update(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.InvalidCipherTextException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Crypto.CryptoException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Crypto.IO.CipherStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream, Org.BouncyCastle.Crypto.IBufferedCipher, Org.BouncyCastle.Crypto.IBufferedCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.IO.Stream stream : Assembly
    Org.BouncyCastle.Crypto.IBufferedCipher inCipher : Assembly
    Org.BouncyCastle.Crypto.IBufferedCipher outCipher : Assembly
  Properties:
    Org.BouncyCastle.Crypto.IBufferedCipher ReadCipher 'get ' : 
    Org.BouncyCastle.Crypto.IBufferedCipher WriteCipher 'get ' : 
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
    Boolean CanSeek 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_ReadCipher(): PrivateScope, Public, HideBySig, SpecialName
    get_WriteCipher(): PrivateScope, Public, HideBySig, SpecialName
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Final, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Final, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.IO.DigestStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream, Org.BouncyCastle.Crypto.IDigest, Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
    Boolean CanSeek 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    ReadDigest(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteDigest(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.IO.MacStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream, Org.BouncyCastle.Crypto.IMac, Org.BouncyCastle.Crypto.IMac): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
    Boolean CanSeek 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    ReadMac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteMac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.IO.SignerStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream, Org.BouncyCastle.Crypto.ISigner, Org.BouncyCastle.Crypto.ISigner): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
    Boolean CanSeek 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    ReadSigner(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteSigner(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
Interface Org.BouncyCastle.Crypto.ISigner: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Update(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GenerateSignature(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    VerifySignature(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Org.BouncyCastle.Crypto.ISignerWithRecovery: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Org.BouncyCastle.Crypto.ISigner
  Methods:
    HasFullMessage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetRecoveredMessage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UpdateWithRecoveredMessage(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.KeyGenerationParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Security.SecureRandom, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Security.SecureRandom Random 'get ' : 
    Int32 Strength 'get ' : 
  Methods:
    get_Random(): PrivateScope, Public, HideBySig, SpecialName
    get_Strength(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Macs.CbcBlockCipherMac: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher, Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher, Int32, Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IMac
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMacSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMacBlock(Byte[]): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Crypto.Macs.CfbBlockCipherMac: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher, Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher, Int32, Int32, Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IMac
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMacSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Macs.CMac: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IMac
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMacSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Macs.Gost28147Mac: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IMac
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    Init(ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetMacSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Macs.HMac: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IMac
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetUnderlyingDigest(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Init(ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMacSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Macs.ISO9797Alg3Mac: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher, Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher, Int32, Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IMac
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMacSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Macs.SipHash: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IMac
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetMacSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Init(ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoFinal(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Macs.VmpcMac: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IMac
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetMacSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Init(ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.MaxBytesExceededException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Crypto.CryptoException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Crypto.Modes.CbcBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    GetUnderlyingCipher(): PrivateScope, Public, HideBySig
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessAadByte(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessAadBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessByte(Byte, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUpdateOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Modes.CcmBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    GetUnderlyingCipher(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessAadByte(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessAadBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessByte(Byte, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUpdateOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetOutputSize(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessPacket(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Crypto.Modes.CfbBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    GetUnderlyingCipher(): PrivateScope, Public, HideBySig
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EncryptBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, HideBySig
    DecryptBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Modes.CtsBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.BufferedBlockCipher
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetUpdateOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig
    GetOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig
    ProcessByte(Byte, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Modes.EaxBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessAadByte(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessAadBytes(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessByte(Byte, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUpdateOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Modes.GcmBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher, Org.BouncyCastle.Crypto.Modes.Gcm.IGcmMultiplier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUpdateOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessAadByte(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessAadBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessByte(Byte, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Crypto.Modes.Gcm.IGcmMultiplier: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Init(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MultiplyH(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Modes.Gcm.BasicGcmMultiplier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Modes.Gcm.IGcmMultiplier
  Methods:
    Init(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MultiplyH(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Modes.Gcm.GcmUtilities: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Methods:
    OneAsBytes(): PrivateScope, Assembly, Static, HideBySig
    OneAsUints(): PrivateScope, Assembly, Static, HideBySig
    AsUints(Byte[]): PrivateScope, Assembly, Static, HideBySig
    AsUints(Byte[], UInt32[]): PrivateScope, Assembly, Static, HideBySig
    Multiply(Byte[], Byte[]): PrivateScope, Assembly, Static, HideBySig
    MultiplyP(UInt32[]): PrivateScope, Assembly, Static, HideBySig
    MultiplyP(UInt32[], UInt32[]): PrivateScope, Assembly, Static, HideBySig
    MultiplyP8(UInt32[]): PrivateScope, Assembly, Static, HideBySig
    MultiplyP8(UInt32[], UInt32[]): PrivateScope, Assembly, Static, HideBySig
    ShiftRight(Byte[]): PrivateScope, Assembly, Static, HideBySig
    ShiftRight(UInt32[]): PrivateScope, Assembly, Static, HideBySig
    ShiftRight(UInt32[], UInt32[]): PrivateScope, Assembly, Static, HideBySig
    ShiftRightN(UInt32[], Int32): PrivateScope, Assembly, Static, HideBySig
    ShiftRightN(UInt32[], Int32, UInt32[]): PrivateScope, Assembly, Static, HideBySig
    Xor(Byte[], Byte[]): PrivateScope, Assembly, Static, HideBySig
    Xor(Byte[], Byte[], Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    Xor(Byte[], Byte[], Byte[]): PrivateScope, Assembly, Static, HideBySig
    Xor(UInt32[], UInt32[]): PrivateScope, Assembly, Static, HideBySig
    Xor(UInt32[], UInt32[], UInt32[]): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Crypto.Modes.Gcm.Tables64kGcmMultiplier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Modes.Gcm.IGcmMultiplier
  Methods:
    Init(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MultiplyH(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Modes.Gcm.Tables8kGcmMultiplier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Modes.Gcm.IGcmMultiplier
  Methods:
    Init(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MultiplyH(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Modes.GOfbBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    GetUnderlyingCipher(): PrivateScope, Public, HideBySig
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Modes.OcbBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher, Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    GetUnderlyingCipher(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUpdateOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessAadByte(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessAadBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessByte(Byte, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Modes.OfbBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    GetUnderlyingCipher(): PrivateScope, Public, HideBySig
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Modes.OpenPgpCfbBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    GetUnderlyingCipher(): PrivateScope, Public, HideBySig
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Modes.SicBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IBlockCipher
  Properties:
    System.String AlgorithmName 'get ' : 
    Boolean IsPartialBlockOkay 'get ' : 
  Methods:
    GetUnderlyingCipher(): PrivateScope, Public, HideBySig
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPartialBlockOkay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBlock(Byte[], Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String PaddingName 'get ' : 
  Methods:
    Init(SecureRandom): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_PaddingName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    AddPadding(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PadCount(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Paddings.ISO10126d2Padding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding
  Properties:
    System.String PaddingName 'get ' : 
  Methods:
    Init(SecureRandom): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_PaddingName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddPadding(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    PadCount(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Paddings.ISO7816d4Padding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding
  Properties:
    System.String PaddingName 'get ' : 
  Methods:
    Init(SecureRandom): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_PaddingName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddPadding(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    PadCount(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Paddings.PaddedBufferedBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.BufferedBlockCipher
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher, Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig
    GetOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig
    GetUpdateOutputSize(Int32): PrivateScope, Public, Virtual, HideBySig
    ProcessByte(Byte, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Paddings.Pkcs7Padding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding
  Properties:
    System.String PaddingName 'get ' : 
  Methods:
    Init(SecureRandom): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_PaddingName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddPadding(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    PadCount(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Paddings.TbcPadding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding
  Properties:
    System.String PaddingName 'get ' : 
  Methods:
    get_PaddingName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(SecureRandom): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPadding(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PadCount(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Paddings.X923Padding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding
  Properties:
    System.String PaddingName 'get ' : 
  Methods:
    Init(SecureRandom): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_PaddingName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddPadding(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    PadCount(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Paddings.ZeroBytePadding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding
  Properties:
    System.String PaddingName 'get ' : 
  Methods:
    get_PaddingName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(SecureRandom): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddPadding(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    PadCount(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Parameters.AeadParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Parameters.KeyParameter, Int32, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Parameters.KeyParameter, Int32, Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ICipherParameters
  Properties:
    Org.BouncyCastle.Crypto.Parameters.KeyParameter Key 'get ' : 
    Int32 MacSize 'get ' : 
  Methods:
    get_Key(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MacSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetAssociatedText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNonce(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Parameters.CcmParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :Org.BouncyCastle.Crypto.Parameters.AeadParameters
    Void .ctor(Org.BouncyCastle.Crypto.Parameters.KeyParameter, Int32, Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Crypto.Parameters.KeyParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ICipherParameters
  Methods:
    GetKey(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.DesParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.KeyParameter
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 DesKeyLength = 8 : Public, Static, Literal, HasDefault
  Methods:
    IsWeakKey(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    IsWeakKey(Byte[]): PrivateScope, Public, Static, HideBySig
    SetOddParity(Byte[]): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.DesEdeParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.DesParameters
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 DesEdeKeyLength = 24 : Public, Static, Literal, HasDefault
  Methods:
    IsWeakKey(Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    IsWeakKey(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    IsWeakKey(Byte[]): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.DHKeyGenerationParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.KeyGenerationParameters
    Void .ctor(Org.BouncyCastle.Security.SecureRandom, Org.BouncyCastle.Crypto.Parameters.DHParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Crypto.Parameters.DHParameters Parameters 'get ' : 
  Methods:
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    GetStrength(DHParameters): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.DHKeyParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.AsymmetricKeyParameter
  Properties:
    Org.BouncyCastle.Crypto.Parameters.DHParameters Parameters 'get ' : 
    Org.BouncyCastle.Asn1.DerObjectIdentifier AlgorithmOid 'get ' : 
  Methods:
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    get_AlgorithmOid(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.DHParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Crypto.Parameters.DHValidationParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Int32, Int32, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Crypto.Parameters.DHValidationParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ICipherParameters
  Properties:
    Org.BouncyCastle.Math.BigInteger P 'get ' : 
    Org.BouncyCastle.Math.BigInteger G 'get ' : 
    Org.BouncyCastle.Math.BigInteger Q 'get ' : 
    Org.BouncyCastle.Math.BigInteger J 'get ' : 
    Int32 M    'get ' : 
    Int32 L    'get ' : 
    Org.BouncyCastle.Crypto.Parameters.DHValidationParameters ValidationParameters 'get ' : 
  Methods:
    get_P(): PrivateScope, Public, HideBySig, SpecialName
    get_G(): PrivateScope, Public, HideBySig, SpecialName
    get_Q(): PrivateScope, Public, HideBySig, SpecialName
    get_J(): PrivateScope, Public, HideBySig, SpecialName
    get_M(): PrivateScope, Public, HideBySig, SpecialName
    get_L(): PrivateScope, Public, HideBySig, SpecialName
    get_ValidationParameters(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.DHPrivateKeyParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.DHKeyParameters
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Crypto.Parameters.DHParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Crypto.Parameters.DHParameters, Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger X 'get ' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.DHPublicKeyParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.DHKeyParameters
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Crypto.Parameters.DHParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Crypto.Parameters.DHParameters, Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger Y 'get ' : 
  Methods:
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.DHValidationParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Counter 'get ' : 
  Methods:
    GetSeed(): PrivateScope, Public, HideBySig
    get_Counter(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.DsaKeyGenerationParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.KeyGenerationParameters
    Void .ctor(Org.BouncyCastle.Security.SecureRandom, Org.BouncyCastle.Crypto.Parameters.DsaParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Crypto.Parameters.DsaParameters Parameters 'get ' : 
  Methods:
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.DsaKeyParameters: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Org.BouncyCastle.Crypto.AsymmetricKeyParameter
  Properties:
    Org.BouncyCastle.Crypto.Parameters.DsaParameters Parameters 'get ' : 
  Methods:
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.DsaParameterGenerationParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32, Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Org.BouncyCastle.Security.SecureRandom, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 DigitalSignatureUsage = 1 : Public, Static, Literal, HasDefault
    Int32 KeyEstablishmentUsage = 2 : Public, Static, Literal, HasDefault
  Properties:
    Int32 L    'get ' : 
    Int32 N    'get ' : 
    Int32 UsageIndex 'get ' : 
    Int32 Certainty 'get ' : 
    Org.BouncyCastle.Security.SecureRandom Random 'get ' : 
  Methods:
    get_L(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_N(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UsageIndex(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Certainty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Random(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.DsaParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Crypto.Parameters.DsaValidationParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ICipherParameters
  Properties:
    Org.BouncyCastle.Math.BigInteger P 'get ' : 
    Org.BouncyCastle.Math.BigInteger Q 'get ' : 
    Org.BouncyCastle.Math.BigInteger G 'get ' : 
    Org.BouncyCastle.Crypto.Parameters.DsaValidationParameters ValidationParameters 'get ' : 
  Methods:
    get_P(): PrivateScope, Public, HideBySig, SpecialName
    get_Q(): PrivateScope, Public, HideBySig, SpecialName
    get_G(): PrivateScope, Public, HideBySig, SpecialName
    get_ValidationParameters(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.DsaPrivateKeyParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.DsaKeyParameters
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Crypto.Parameters.DsaParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger X 'get ' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.DsaPublicKeyParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.DsaKeyParameters
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Crypto.Parameters.DsaParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger Y 'get ' : 
  Methods:
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.DsaValidationParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Counter 'get ' : 
    Int32 UsageIndex 'get ' : 
  Methods:
    GetSeed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Counter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UsageIndex(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.ECDomainParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Math.EC.ECCurve, Org.BouncyCastle.Math.EC.ECPoint, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.EC.ECCurve, Org.BouncyCastle.Math.EC.ECPoint, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.EC.ECCurve, Org.BouncyCastle.Math.EC.ECPoint, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Math.EC.ECCurve curve : Assembly
    Byte[] seed : Assembly
    Org.BouncyCastle.Math.EC.ECPoint g : Assembly
    Org.BouncyCastle.Math.BigInteger n : Assembly
    Org.BouncyCastle.Math.BigInteger h : Assembly
  Properties:
    Org.BouncyCastle.Math.EC.ECCurve Curve 'get ' : 
    Org.BouncyCastle.Math.EC.ECPoint G 'get ' : 
    Org.BouncyCastle.Math.BigInteger N 'get ' : 
    Org.BouncyCastle.Math.BigInteger H 'get ' : 
  Methods:
    get_Curve(): PrivateScope, Public, HideBySig, SpecialName
    get_G(): PrivateScope, Public, HideBySig, SpecialName
    get_N(): PrivateScope, Public, HideBySig, SpecialName
    get_H(): PrivateScope, Public, HideBySig, SpecialName
    GetSeed(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.ECKeyGenerationParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.KeyGenerationParameters
    Void .ctor(Org.BouncyCastle.Crypto.Parameters.ECDomainParameters, Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Crypto.Parameters.ECDomainParameters DomainParameters 'get ' : 
    Org.BouncyCastle.Asn1.DerObjectIdentifier PublicKeyParamSet 'get ' : 
  Methods:
    get_DomainParameters(): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKeyParamSet(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.ECKeyParameters: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Org.BouncyCastle.Crypto.AsymmetricKeyParameter
  Properties:
    System.String AlgorithmName 'get ' : 
    Org.BouncyCastle.Crypto.Parameters.ECDomainParameters Parameters 'get ' : 
    Org.BouncyCastle.Asn1.DerObjectIdentifier PublicKeyParamSet 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKeyParamSet(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    CreateKeyGenerationParameters(SecureRandom): PrivateScope, Assembly, HideBySig
    VerifyAlgorithmName(String): PrivateScope, Assembly, Static, HideBySig
    LookupParameters(DerObjectIdentifier): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.ECKeyParameters
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Crypto.Parameters.ECDomainParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.String, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Crypto.Parameters.ECDomainParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger D 'get ' : 
  Methods:
    get_D(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.ECKeyParameters
    Void .ctor(Org.BouncyCastle.Math.EC.ECPoint, Org.BouncyCastle.Crypto.Parameters.ECDomainParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.EC.ECPoint, Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.String, Org.BouncyCastle.Math.EC.ECPoint, Org.BouncyCastle.Crypto.Parameters.ECDomainParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Org.BouncyCastle.Math.EC.ECPoint, Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.EC.ECPoint Q 'get ' : 
  Methods:
    get_Q(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.ElGamalKeyGenerationParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.KeyGenerationParameters
    Void .ctor(Org.BouncyCastle.Security.SecureRandom, Org.BouncyCastle.Crypto.Parameters.ElGamalParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Crypto.Parameters.ElGamalParameters Parameters 'get ' : 
  Methods:
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    GetStrength(ElGamalParameters): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.ElGamalKeyParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.AsymmetricKeyParameter
  Properties:
    Org.BouncyCastle.Crypto.Parameters.ElGamalParameters Parameters 'get ' : 
  Methods:
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.ElGamalParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ICipherParameters
  Properties:
    Org.BouncyCastle.Math.BigInteger P 'get ' : 
    Org.BouncyCastle.Math.BigInteger G 'get ' : 
    Int32 L    'get ' : 
  Methods:
    get_P(): PrivateScope, Public, HideBySig, SpecialName
    get_G(): PrivateScope, Public, HideBySig, SpecialName
    get_L(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.ElGamalPrivateKeyParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.ElGamalKeyParameters
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Crypto.Parameters.ElGamalParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger X 'get ' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.ElGamalPublicKeyParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.ElGamalKeyParameters
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Crypto.Parameters.ElGamalParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger Y 'get ' : 
  Methods:
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.Gost3410KeyGenerationParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.KeyGenerationParameters
    Void .ctor(Org.BouncyCastle.Security.SecureRandom, Org.BouncyCastle.Crypto.Parameters.Gost3410Parameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Security.SecureRandom, Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Crypto.Parameters.Gost3410Parameters Parameters 'get ' : 
    Org.BouncyCastle.Asn1.DerObjectIdentifier PublicKeyParamSet 'get ' : 
  Methods:
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKeyParamSet(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.Gost3410KeyParameters: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Org.BouncyCastle.Crypto.AsymmetricKeyParameter
  Properties:
    Org.BouncyCastle.Crypto.Parameters.Gost3410Parameters Parameters 'get ' : 
    Org.BouncyCastle.Asn1.DerObjectIdentifier PublicKeyParamSet 'get ' : 
  Methods:
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKeyParamSet(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.Gost3410Parameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Crypto.Parameters.Gost3410ValidationParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ICipherParameters
  Properties:
    Org.BouncyCastle.Math.BigInteger P 'get ' : 
    Org.BouncyCastle.Math.BigInteger Q 'get ' : 
    Org.BouncyCastle.Math.BigInteger A 'get ' : 
    Org.BouncyCastle.Crypto.Parameters.Gost3410ValidationParameters ValidationParameters 'get ' : 
  Methods:
    get_P(): PrivateScope, Public, HideBySig, SpecialName
    get_Q(): PrivateScope, Public, HideBySig, SpecialName
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    get_ValidationParameters(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.Gost3410PrivateKeyParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.Gost3410KeyParameters
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Crypto.Parameters.Gost3410Parameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger X 'get ' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.Gost3410PublicKeyParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.Gost3410KeyParameters
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Crypto.Parameters.Gost3410Parameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger Y 'get ' : 
  Methods:
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.Gost3410ValidationParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 C    'get ' : 
    Int32 X0   'get ' : 
    Int64 CL   'get ' : 
    Int64 X0L  'get ' : 
  Methods:
    get_C(): PrivateScope, Public, HideBySig, SpecialName
    get_X0(): PrivateScope, Public, HideBySig, SpecialName
    get_CL(): PrivateScope, Public, HideBySig, SpecialName
    get_X0L(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.IesParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[], Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ICipherParameters
  Properties:
    Int32 MacKeySize 'get ' : 
  Methods:
    GetDerivationV(): PrivateScope, Public, HideBySig
    GetEncodingV(): PrivateScope, Public, HideBySig
    get_MacKeySize(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.IesWithCipherParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.IesParameters
    Void .ctor(Byte[], Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 CipherKeySize 'get ' : 
  Methods:
    get_CipherKeySize(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.Iso18033KdfParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDerivationParameters
  Methods:
    GetSeed(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.KdfParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDerivationParameters
  Methods:
    GetSharedSecret(): PrivateScope, Public, HideBySig
    GetIV(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.MgfParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDerivationParameters
  Methods:
    GetSeed(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.MqvPrivateParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters, Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters, Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters, Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ICipherParameters
  Properties:
    Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters StaticPrivateKey 'get ' : 
    Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters EphemeralPrivateKey 'get ' : 
    Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters EphemeralPublicKey 'get ' : 
  Methods:
    get_StaticPrivateKey(): PrivateScope, Public, HideBySig, SpecialName
    get_EphemeralPrivateKey(): PrivateScope, Public, HideBySig, SpecialName
    get_EphemeralPublicKey(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.MqvPublicParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters, Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ICipherParameters
  Properties:
    Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters StaticPublicKey 'get ' : 
    Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters EphemeralPublicKey 'get ' : 
  Methods:
    get_StaticPublicKey(): PrivateScope, Public, HideBySig, SpecialName
    get_EphemeralPublicKey(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyGenerationParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.KeyGenerationParameters
    Void .ctor(Org.BouncyCastle.Security.SecureRandom, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Security.SecureRandom, Int32, Int32, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Certainty 'get ' : 
    Int32 CountSmallPrimes 'get ' : 
    Boolean IsDebug 'get ' : 
  Methods:
    get_Certainty(): PrivateScope, Public, HideBySig, SpecialName
    get_CountSmallPrimes(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDebug(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.AsymmetricKeyParameter
    Void .ctor(Boolean, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger G 'get ' : 
    Int32 LowerSigmaBound 'get ' : 
    Org.BouncyCastle.Math.BigInteger Modulus 'get ' : 
  Methods:
    get_G(): PrivateScope, Public, HideBySig, SpecialName
    get_LowerSigmaBound(): PrivateScope, Public, HideBySig, SpecialName
    get_Modulus(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.NaccacheSternPrivateKeyParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyParameters
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Int32, System.Collections.ArrayList, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Int32, System.Collections.IList, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger PhiN 'get ' : 
    System.Collections.ArrayList SmallPrimes 'get ' :  (Obsolete)
    System.Collections.IList SmallPrimesList 'get ' : 
  Methods:
    get_PhiN(): PrivateScope, Public, HideBySig, SpecialName
    get_SmallPrimes(): PrivateScope, Public, HideBySig, SpecialName
    get_SmallPrimesList(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.ParametersWithIV: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.ICipherParameters, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.ICipherParameters, Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ICipherParameters
  Properties:
    Org.BouncyCastle.Crypto.ICipherParameters Parameters 'get ' : 
  Methods:
    GetIV(): PrivateScope, Public, HideBySig
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.ParametersWithRandom: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.ICipherParameters, Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.ICipherParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ICipherParameters
  Properties:
    Org.BouncyCastle.Security.SecureRandom Random 'get ' : 
    Org.BouncyCastle.Crypto.ICipherParameters Parameters 'get ' : 
  Methods:
    GetRandom(): PrivateScope, Public, HideBySig (Obsolete)
    get_Random(): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.ParametersWithSalt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.ICipherParameters, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.ICipherParameters, Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ICipherParameters
  Properties:
    Org.BouncyCastle.Crypto.ICipherParameters Parameters 'get ' : 
  Methods:
    GetSalt(): PrivateScope, Public, HideBySig
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.ParametersWithSBox: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.ICipherParameters, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ICipherParameters
  Properties:
    Org.BouncyCastle.Crypto.ICipherParameters Parameters 'get ' : 
  Methods:
    GetSBox(): PrivateScope, Public, HideBySig
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.RC2Parameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.KeyParameter
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 EffectiveKeyBits 'get ' : 
  Methods:
    get_EffectiveKeyBits(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.RC5Parameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.KeyParameter
    Void .ctor(Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Rounds 'get ' : 
  Methods:
    get_Rounds(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.RsaBlindingParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Parameters.RsaKeyParameters, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ICipherParameters
  Properties:
    Org.BouncyCastle.Crypto.Parameters.RsaKeyParameters PublicKey 'get ' : 
    Org.BouncyCastle.Math.BigInteger BlindingFactor 'get ' : 
  Methods:
    get_PublicKey(): PrivateScope, Public, HideBySig, SpecialName
    get_BlindingFactor(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Parameters.RsaKeyGenerationParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.KeyGenerationParameters
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Security.SecureRandom, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger PublicExponent 'get ' : 
    Int32 Certainty 'get ' : 
  Methods:
    get_PublicExponent(): PrivateScope, Public, HideBySig, SpecialName
    get_Certainty(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.RsaKeyParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.AsymmetricKeyParameter
    Void .ctor(Boolean, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger Modulus 'get ' : 
    Org.BouncyCastle.Math.BigInteger Exponent 'get ' : 
  Methods:
    get_Modulus(): PrivateScope, Public, HideBySig, SpecialName
    get_Exponent(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Parameters.RsaPrivateCrtKeyParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Parameters.RsaKeyParameters
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger PublicExponent 'get ' : 
    Org.BouncyCastle.Math.BigInteger P 'get ' : 
    Org.BouncyCastle.Math.BigInteger Q 'get ' : 
    Org.BouncyCastle.Math.BigInteger DP 'get ' : 
    Org.BouncyCastle.Math.BigInteger DQ 'get ' : 
    Org.BouncyCastle.Math.BigInteger QInv 'get ' : 
  Methods:
    get_PublicExponent(): PrivateScope, Public, HideBySig, SpecialName
    get_P(): PrivateScope, Public, HideBySig, SpecialName
    get_Q(): PrivateScope, Public, HideBySig, SpecialName
    get_DP(): PrivateScope, Public, HideBySig, SpecialName
    get_DQ(): PrivateScope, Public, HideBySig, SpecialName
    get_QInv(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Interface Org.BouncyCastle.Crypto.Prng.IRandomGenerator: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    AddSeedMaterial(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddSeedMaterial(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    NextBytes(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    NextBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Prng.CryptoApiRandomGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.RandomNumberGenerator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Prng.IRandomGenerator
  Methods:
    AddSeedMaterial(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSeedMaterial(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextBytes(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Prng.DigestRandomGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Prng.IRandomGenerator
  Methods:
    AddSeedMaterial(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddSeedMaterial(Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    NextBytes(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    NextBytes(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Prng.ReversedWindowGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Prng.IRandomGenerator, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Prng.IRandomGenerator
  Methods:
    AddSeedMaterial(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSeedMaterial(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextBytes(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Prng.ThreadedSeedGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GenerateSeed(Int32, Boolean): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Crypto.Prng.VmpcRandomGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Prng.IRandomGenerator
  Methods:
    AddSeedMaterial(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddSeedMaterial(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextBytes(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Signers.DsaDigestSigner: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IDsa, Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ISigner
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateSignature(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    VerifySignature(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Signers.DsaSigner: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDsa
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateSignature(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    VerifySignature(Byte[], BigInteger, BigInteger): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Signers.ECDsaSigner: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDsa
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateSignature(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    VerifySignature(Byte[], BigInteger, BigInteger): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Signers.ECGost3410Signer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDsa
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateSignature(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    VerifySignature(Byte[], BigInteger, BigInteger): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Signers.ECNRSigner: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDsa
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateSignature(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    VerifySignature(Byte[], BigInteger, BigInteger): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Signers.GenericSigner: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ISigner
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateSignature(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    VerifySignature(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Signers.Gost3410DigestSigner: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IDsa, Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ISigner
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateSignature(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    VerifySignature(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Signers.Gost3410Signer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDsa
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateSignature(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    VerifySignature(Byte[], BigInteger, BigInteger): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner: AutoLayout, AnsiClass, Class, Public
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ISignerWithRecovery
    Org.BouncyCastle.Crypto.ISigner
  Fields:
    Int32 TrailerImplicit = 188 : Public, Static, Literal, HasDefault
    Int32 TrailerRipeMD160 = 12748 : Public, Static, Literal, HasDefault
    Int32 TrailerRipeMD128 = 13004 : Public, Static, Literal, HasDefault
    Int32 TrailerSha1 = 13260 : Public, Static, Literal, HasDefault
    Int32 TrailerSha256 = 13516 : Public, Static, Literal, HasDefault
    Int32 TrailerSha512 = 13772 : Public, Static, Literal, HasDefault
    Int32 TrailerSha384 = 14028 : Public, Static, Literal, HasDefault
    Int32 TrailerWhirlpool = 14284 : Public, Static, Literal, HasDefault
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    GetRecoveredMessage(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateWithRecoveredMessage(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateSignature(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    VerifySignature(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasFullMessage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer: AutoLayout, AnsiClass, Class, Public
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ISignerWithRecovery
    Org.BouncyCastle.Crypto.ISigner
  Fields:
    Int32 TrailerImplicit = 188 : Public, Static, Literal, HasDefault
    Int32 TrailerRipeMD160 = 12748 : Public, Static, Literal, HasDefault
    Int32 TrailerRipeMD128 = 13004 : Public, Static, Literal, HasDefault
    Int32 TrailerSha1 = 13260 : Public, Static, Literal, HasDefault
    Int32 TrailerSha256 = 13516 : Public, Static, Literal, HasDefault
    Int32 TrailerSha512 = 13772 : Public, Static, Literal, HasDefault
    Int32 TrailerSha384 = 14028 : Public, Static, Literal, HasDefault
    Int32 TrailerWhirlpool = 14284 : Public, Static, Literal, HasDefault
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    GetRecoveredMessage(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateWithRecoveredMessage(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateSignature(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VerifySignature(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasFullMessage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Signers.PssSigner: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, Org.BouncyCastle.Crypto.IDigest, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, Int32, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, Org.BouncyCastle.Crypto.IDigest, Int32, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ISigner
  Fields:
    Byte TrailerImplicit = 188 : Public, Static, Literal, HasDefault
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    CreateRawSigner(IAsymmetricBlockCipher, IDigest): PrivateScope, Public, Static, HideBySig
    CreateRawSigner(IAsymmetricBlockCipher, IDigest, IDigest, Int32, Byte): PrivateScope, Public, Static, HideBySig
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateSignature(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VerifySignature(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Signers.RsaDigestSigner: AutoLayout, AnsiClass, Class, Public
    Void .ctor(Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.ISigner
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateSignature(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    VerifySignature(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.StreamBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IStreamCipher
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    Init(Boolean, ICipherParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ReturnByte(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract (Obsolete)
  Methods:
    IsValid(X509CertificateStructure[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Tls.AlwaysValidVerifyer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
  Methods:
    IsValid(X509CertificateStructure[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Tls.ByteQueue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Available 'get ' : 
  Methods:
    NextTwoPow(Int32): PrivateScope, Public, Static, HideBySig
    Read(Byte[], Int32, Int32, Int32): PrivateScope, Public, HideBySig
    AddData(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    RemoveData(Int32): PrivateScope, Public, HideBySig
    RemoveData(Byte[], Int32, Int32, Int32): PrivateScope, Public, HideBySig
    RemoveData(Int32, Int32): PrivateScope, Public, HideBySig
    get_Available(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Tls.Certificate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509CertificateStructure[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.X509.X509CertificateStructure[] certs : Assembly
    Org.BouncyCastle.Crypto.Tls.Certificate EmptyChain : Public, Static, InitOnly
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    Parse(Stream): PrivateScope, Assembly, Static, HideBySig
    Encode(Stream): PrivateScope, Assembly, HideBySig
    GetCerts(): PrivateScope, Public, HideBySig
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Tls.CombinedHash: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Tls.CombinedHash): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IDigest
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetByteLength(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDigestSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Crypto.Tls.TlsClient: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Init(TlsClientContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCipherSuites(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCompressionMethods(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetClientExtensions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    NotifySessionID(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    NotifySelectedCipherSuite(CipherSuite): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    NotifySelectedCompressionMethod(CompressionMethod): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    NotifySecureRenegotiation(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessServerExtensions(IDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetKeyExchange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAuthentication(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCompression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCipher(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Tls.DefaultTlsClient: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Tls.TlsCipherFactory): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsClient
  Methods:
    Init(TlsClientContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCipherSuites(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCompressionMethods(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetClientExtensions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NotifySessionID(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NotifySelectedCipherSuite(CipherSuite): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NotifySelectedCompressionMethod(CompressionMethod): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NotifySecureRenegotiation(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessServerExtensions(IDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetKeyExchange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAuthentication(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCompression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCipher(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Tls.RecordStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Tls.TlsProtocolHandler, System.IO.Stream, System.IO.Stream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    ClientCipherSpecDecided(TlsCompression, TlsCipher): PrivateScope, Assembly, HideBySig
    ServerClientSpecReceived(): PrivateScope, Assembly, HideBySig
    ReadData(): PrivateScope, Public, HideBySig
    DecodeAndVerify(ContentType, Stream, Int32): PrivateScope, Assembly, HideBySig
    WriteMessage(ContentType, Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    UpdateHandshakeData(Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    GetCurrentHash(): PrivateScope, Assembly, HideBySig
    Close(): PrivateScope, Assembly, HideBySig
    Flush(): PrivateScope, Assembly, HideBySig
Class Org.BouncyCastle.Crypto.Tls.SecurityParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] clientRandom : Assembly
    Byte[] serverRandom : Assembly
    Byte[] masterSecret : Assembly
  Properties:
    Byte[] ClientRandom 'get ' : 
    Byte[] ServerRandom 'get ' : 
    Byte[] MasterSecret 'get ' : 
  Methods:
    get_ClientRandom(): PrivateScope, Public, HideBySig, SpecialName
    get_ServerRandom(): PrivateScope, Public, HideBySig, SpecialName
    get_MasterSecret(): PrivateScope, Public, HideBySig, SpecialName
Interface Org.BouncyCastle.Crypto.Tls.TlsCipher: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    EncodePlaintext(ContentType, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DecodeCiphertext(ContentType, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Tls.TlsBlockCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Tls.TlsClientContext, Org.BouncyCastle.Crypto.IBlockCipher, Org.BouncyCastle.Crypto.IBlockCipher, Org.BouncyCastle.Crypto.IDigest, Org.BouncyCastle.Crypto.IDigest, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsCipher
  Properties:
    Org.BouncyCastle.Crypto.Tls.TlsMac WriteMac 'get ' : 
    Org.BouncyCastle.Crypto.Tls.TlsMac ReadMac 'get ' : 
  Methods:
    get_WriteMac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ReadMac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    EncodePlaintext(ContentType, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DecodeCiphertext(ContentType, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Crypto.Tls.TlsKeyExchange: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    SkipServerCertificate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessServerCertificate(Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SkipServerKeyExchange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessServerKeyExchange(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ValidateCertificateRequest(CertificateRequest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SkipClientCredentials(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessClientCredentials(TlsCredentials): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GenerateClientKeyExchange(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GeneratePremasterSecret(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Tls.TlsDHKeyExchange: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Tls.TlsClientContext, Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  Methods:
    SkipServerCertificate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessServerCertificate(Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SkipServerKeyExchange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessServerKeyExchange(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ValidateCertificateRequest(CertificateRequest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SkipClientCredentials(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessClientCredentials(TlsCredentials): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateClientKeyExchange(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GeneratePremasterSecret(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Crypto.Tls.TlsSigner: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GenerateRawSignature(SecureRandom, AsymmetricKeyParameter, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    VerifyRawSignature(Byte[], AsymmetricKeyParameter, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateSigner(SecureRandom, AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateVerifyer(AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsValidPublicKey(AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Tls.TlsDsaSigner: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsSigner
  Methods:
    GenerateRawSignature(SecureRandom, AsymmetricKeyParameter, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VerifyRawSignature(Byte[], AsymmetricKeyParameter, Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateSigner(SecureRandom, AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateVerifyer(AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsValidPublicKey(AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Tls.TlsDssSigner: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Tls.TlsDsaSigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsValidPublicKey(AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Tls.TlsException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Crypto.Tls.TlsMac: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IDigest, Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 SequenceNumber 'get ' : 
    Int32 Size 'get ' : 
  Methods:
    GetMacSecret(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SequenceNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IncSequenceNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CalculateMac(ContentType, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CalculateMacConstantTime(ContentType, Byte[], Int32, Int32, Int32, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Tls.TlsNullCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsCipher
  Methods:
    EncodePlaintext(ContentType, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DecodeCiphertext(ContentType, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Tls.TlsProtocolHandler: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.IO.Stream, Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.IO.Stream OutputStream 'get ' :  (Obsolete)
    System.IO.Stream InputStream 'get ' :  (Obsolete)
    System.IO.Stream Stream 'get ' : 
    Boolean IsClosed 'get ' : 
  Methods:
    ProcessData(ContentType, Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    Connect(ICertificateVerifyer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Connect(TlsClient): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadApplicationData(Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    WriteData(Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    get_OutputStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_InputStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Stream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SendAlert(AlertLevel, AlertDescription): PrivateScope, Assembly, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AssertEmpty(MemoryStream): PrivateScope, Assembly, HideBySig
    Flush(): PrivateScope, Assembly, HideBySig
    get_IsClosed(): PrivateScope, Assembly, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Tls.TlsClientContext): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  Methods:
    SkipServerCertificate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessServerCertificate(Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SkipServerKeyExchange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessServerKeyExchange(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ValidateCertificateRequest(CertificateRequest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SkipClientCredentials(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessClientCredentials(TlsCredentials): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateClientKeyExchange(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GeneratePremasterSecret(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Tls.TlsRsaSigner: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsSigner
  Methods:
    GenerateRawSignature(SecureRandom, AsymmetricKeyParameter, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VerifyRawSignature(Byte[], AsymmetricKeyParameter, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateSigner(SecureRandom, AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateVerifyer(AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsValidPublicKey(AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Tls.TlsSrpKeyExchange: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Tls.TlsClientContext, Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm, Byte[], Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  Methods:
    SkipServerCertificate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessServerCertificate(Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SkipServerKeyExchange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessServerKeyExchange(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ValidateCertificateRequest(CertificateRequest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SkipClientCredentials(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessClientCredentials(TlsCredentials): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateClientKeyExchange(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GeneratePremasterSecret(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Tls.TlsStreamCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Tls.TlsClientContext, Org.BouncyCastle.Crypto.IStreamCipher, Org.BouncyCastle.Crypto.IStreamCipher, Org.BouncyCastle.Crypto.IDigest, Org.BouncyCastle.Crypto.IDigest, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsCipher
  Methods:
    EncodePlaintext(ContentType, Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DecodeCiphertext(ContentType, Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Tls.TlsUtilities: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteUint8(Byte, Stream): PrivateScope, Assembly, Static, HideBySig
    WriteUint8(Byte, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    WriteUint16(Int32, Stream): PrivateScope, Assembly, Static, HideBySig
    WriteUint16(Int32, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    WriteUint24(Int32, Stream): PrivateScope, Assembly, Static, HideBySig
    WriteUint24(Int32, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    WriteUint64(Int64, Stream): PrivateScope, Assembly, Static, HideBySig
    WriteUint64(Int64, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    WriteOpaque8(Byte[], Stream): PrivateScope, Assembly, Static, HideBySig
    WriteOpaque16(Byte[], Stream): PrivateScope, Assembly, Static, HideBySig
    WriteOpaque24(Byte[], Stream): PrivateScope, Assembly, Static, HideBySig
    WriteUint8Array(Byte[], Stream): PrivateScope, Assembly, Static, HideBySig
    WriteUint16Array(Int32[], Stream): PrivateScope, Assembly, Static, HideBySig
    ReadUint8(Stream): PrivateScope, Assembly, Static, HideBySig
    ReadUint16(Stream): PrivateScope, Assembly, Static, HideBySig
    ReadUint24(Stream): PrivateScope, Assembly, Static, HideBySig
    ReadFully(Byte[], Stream): PrivateScope, Assembly, Static, HideBySig
    ReadOpaque8(Stream): PrivateScope, Assembly, Static, HideBySig
    ReadOpaque16(Stream): PrivateScope, Assembly, Static, HideBySig
    CheckVersion(Byte[]): PrivateScope, Assembly, Static, HideBySig
    CheckVersion(Stream): PrivateScope, Assembly, Static, HideBySig
    WriteGmtUnixTime(Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    WriteVersion(Stream): PrivateScope, Assembly, Static, HideBySig
    WriteVersion(Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    PRF(Byte[], String, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    PRF_1_2(IDigest, Byte[], String, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    Concat(Byte[], Byte[]): PrivateScope, Assembly, Static, HideBySig
    ValidateKeyUsage(X509CertificateStructure, Int32): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Crypto.Utilities.Pack: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Methods:
    UInt16_To_BE(UInt16, Byte[]): PrivateScope, Assembly, Static, HideBySig
    UInt16_To_BE(UInt16, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    BE_To_UInt16(Byte[]): PrivateScope, Assembly, Static, HideBySig
    BE_To_UInt16(Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    UInt32_To_BE(UInt32): PrivateScope, Assembly, Static, HideBySig
    UInt32_To_BE(UInt32, Byte[]): PrivateScope, Assembly, Static, HideBySig
    UInt32_To_BE(UInt32, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    UInt32_To_BE(UInt32[]): PrivateScope, Assembly, Static, HideBySig
    UInt32_To_BE(UInt32[], Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    BE_To_UInt32(Byte[]): PrivateScope, Assembly, Static, HideBySig
    BE_To_UInt32(Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    BE_To_UInt32(Byte[], Int32, UInt32[]): PrivateScope, Assembly, Static, HideBySig
    UInt64_To_BE(UInt64): PrivateScope, Assembly, Static, HideBySig
    UInt64_To_BE(UInt64, Byte[]): PrivateScope, Assembly, Static, HideBySig
    UInt64_To_BE(UInt64, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    BE_To_UInt64(Byte[]): PrivateScope, Assembly, Static, HideBySig
    BE_To_UInt64(Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    UInt16_To_LE(UInt16, Byte[]): PrivateScope, Assembly, Static, HideBySig
    UInt16_To_LE(UInt16, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    LE_To_UInt16(Byte[]): PrivateScope, Assembly, Static, HideBySig
    LE_To_UInt16(Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    UInt32_To_LE(UInt32): PrivateScope, Assembly, Static, HideBySig
    UInt32_To_LE(UInt32, Byte[]): PrivateScope, Assembly, Static, HideBySig
    UInt32_To_LE(UInt32, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    UInt32_To_LE(UInt32[]): PrivateScope, Assembly, Static, HideBySig
    UInt32_To_LE(UInt32[], Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    LE_To_UInt32(Byte[]): PrivateScope, Assembly, Static, HideBySig
    LE_To_UInt32(Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    LE_To_UInt32(Byte[], Int32, UInt32[]): PrivateScope, Assembly, Static, HideBySig
    UInt64_To_LE(UInt64): PrivateScope, Assembly, Static, HideBySig
    UInt64_To_LE(UInt64, Byte[]): PrivateScope, Assembly, Static, HideBySig
    UInt64_To_LE(UInt64, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    LE_To_UInt64(Byte[]): PrivateScope, Assembly, Static, HideBySig
    LE_To_UInt64(Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Math.BigInteger: AutoLayout, AnsiClass, Class, Public, Serializable
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.Random): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, System.Random): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32[][] primeLists : Assembly, Static, InitOnly
    Int32[] primeProducts : Assembly, Static, InitOnly
    Org.BouncyCastle.Math.BigInteger Zero : Public, Static, InitOnly
    Org.BouncyCastle.Math.BigInteger One : Public, Static, InitOnly
    Org.BouncyCastle.Math.BigInteger Two : Public, Static, InitOnly
    Org.BouncyCastle.Math.BigInteger Three : Public, Static, InitOnly
    Org.BouncyCastle.Math.BigInteger Ten : Public, Static, InitOnly
  Properties:
    Int32 BitCount 'get ' : 
    Int32 BitLength 'get ' : 
    Int32 IntValue 'get ' : 
    Int64 LongValue 'get ' : 
    Int32 SignValue 'get ' : 
  Methods:
    Abs(): PrivateScope, Public, HideBySig
    Add(BigInteger): PrivateScope, Public, HideBySig
    And(BigInteger): PrivateScope, Public, HideBySig
    AndNot(BigInteger): PrivateScope, Public, HideBySig
    get_BitCount(): PrivateScope, Public, HideBySig, SpecialName
    BitCnt(Int32): PrivateScope, Public, Static, HideBySig
    get_BitLength(): PrivateScope, Public, HideBySig, SpecialName
    CompareTo(Object): PrivateScope, Public, HideBySig
    CompareTo(BigInteger): PrivateScope, Public, HideBySig
    Divide(BigInteger): PrivateScope, Public, HideBySig
    DivideAndRemainder(BigInteger): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Gcd(BigInteger): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    get_IntValue(): PrivateScope, Public, HideBySig, SpecialName
    IsProbablePrime(Int32): PrivateScope, Public, HideBySig
    RabinMillerTest(Int32, Random): PrivateScope, Public, HideBySig
    get_LongValue(): PrivateScope, Public, HideBySig, SpecialName
    Max(BigInteger): PrivateScope, Public, HideBySig
    Min(BigInteger): PrivateScope, Public, HideBySig
    Mod(BigInteger): PrivateScope, Public, HideBySig
    ModInverse(BigInteger): PrivateScope, Public, HideBySig
    ModPow(BigInteger, BigInteger): PrivateScope, Public, HideBySig
    Multiply(BigInteger): PrivateScope, Public, HideBySig
    Square(): PrivateScope, Public, HideBySig
    Negate(): PrivateScope, Public, HideBySig
    NextProbablePrime(): PrivateScope, Public, HideBySig
    Not(): PrivateScope, Public, HideBySig
    Pow(Int32): PrivateScope, Public, HideBySig
    ProbablePrime(Int32, Random): PrivateScope, Public, Static, HideBySig
    Remainder(BigInteger): PrivateScope, Public, HideBySig
    ShiftLeft(Int32): PrivateScope, Public, HideBySig
    ShiftRight(Int32): PrivateScope, Public, HideBySig
    get_SignValue(): PrivateScope, Public, HideBySig, SpecialName
    Subtract(BigInteger): PrivateScope, Public, HideBySig
    ToByteArray(): PrivateScope, Public, HideBySig
    ToByteArrayUnsigned(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(Int32): PrivateScope, Public, HideBySig
    ValueOf(Int64): PrivateScope, Public, Static, HideBySig
    GetLowestSetBit(): PrivateScope, Public, HideBySig
    TestBit(Int32): PrivateScope, Public, HideBySig
    Or(BigInteger): PrivateScope, Public, HideBySig
    Xor(BigInteger): PrivateScope, Public, HideBySig
    SetBit(Int32): PrivateScope, Public, HideBySig
    ClearBit(Int32): PrivateScope, Public, HideBySig
    FlipBit(Int32): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Math.EC.Abc.SimpleBigDecimal: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 IntValue 'get ' : 
    Int64 LongValue 'get ' : 
    Int32 Scale 'get ' : 
  Methods:
    GetInstance(BigInteger, Int32): PrivateScope, Public, Static, HideBySig
    AdjustScale(Int32): PrivateScope, Public, HideBySig
    Add(SimpleBigDecimal): PrivateScope, Public, HideBySig
    Add(BigInteger): PrivateScope, Public, HideBySig
    Negate(): PrivateScope, Public, HideBySig
    Subtract(SimpleBigDecimal): PrivateScope, Public, HideBySig
    Subtract(BigInteger): PrivateScope, Public, HideBySig
    Multiply(SimpleBigDecimal): PrivateScope, Public, HideBySig
    Multiply(BigInteger): PrivateScope, Public, HideBySig
    Divide(SimpleBigDecimal): PrivateScope, Public, HideBySig
    Divide(BigInteger): PrivateScope, Public, HideBySig
    ShiftLeft(Int32): PrivateScope, Public, HideBySig
    CompareTo(SimpleBigDecimal): PrivateScope, Public, HideBySig
    CompareTo(BigInteger): PrivateScope, Public, HideBySig
    Floor(): PrivateScope, Public, HideBySig
    Round(): PrivateScope, Public, HideBySig
    get_IntValue(): PrivateScope, Public, HideBySig, SpecialName
    get_LongValue(): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Math.EC.Abc.Tnaf: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Math.EC.Abc.ZTauElement[] Alpha0 : Public, Static, InitOnly
    SByte[][] Alpha0Tnaf : Public, Static, InitOnly
    Org.BouncyCastle.Math.EC.Abc.ZTauElement[] Alpha1 : Public, Static, InitOnly
    SByte[][] Alpha1Tnaf : Public, Static, InitOnly
    SByte Width = 4 : Public, Static, Literal, HasDefault
    SByte Pow2Width = 16 : Public, Static, Literal, HasDefault
  Methods:
    Norm(SByte, ZTauElement): PrivateScope, Public, Static, HideBySig
    Norm(SByte, SimpleBigDecimal, SimpleBigDecimal): PrivateScope, Public, Static, HideBySig
    Round(SimpleBigDecimal, SimpleBigDecimal, SByte): PrivateScope, Public, Static, HideBySig
    ApproximateDivisionByN(BigInteger, BigInteger, BigInteger, SByte, Int32, Int32): PrivateScope, Public, Static, HideBySig
    TauAdicNaf(SByte, ZTauElement): PrivateScope, Public, Static, HideBySig
    Tau(F2mPoint): PrivateScope, Public, Static, HideBySig
    GetMu(F2mCurve): PrivateScope, Public, Static, HideBySig
    GetLucas(SByte, Int32, Boolean): PrivateScope, Public, Static, HideBySig
    GetTw(SByte, Int32): PrivateScope, Public, Static, HideBySig
    GetSi(F2mCurve): PrivateScope, Public, Static, HideBySig
    PartModReduction(BigInteger, Int32, SByte, BigInteger[], SByte, SByte): PrivateScope, Public, Static, HideBySig
    MultiplyRTnaf(F2mPoint, BigInteger): PrivateScope, Public, Static, HideBySig
    MultiplyTnaf(F2mPoint, ZTauElement): PrivateScope, Public, Static, HideBySig
    MultiplyFromTnaf(F2mPoint, SByte[]): PrivateScope, Public, Static, HideBySig
    TauAdicWNaf(SByte, ZTauElement, SByte, BigInteger, BigInteger, ZTauElement[]): PrivateScope, Public, Static, HideBySig
    GetPreComp(F2mPoint, SByte): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Math.EC.Abc.ZTauElement: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Math.BigInteger u : Public, InitOnly
    Org.BouncyCastle.Math.BigInteger v : Public, InitOnly
Class Org.BouncyCastle.Math.EC.ECAlgorithms: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SumOfTwoMultiplies(ECPoint, BigInteger, ECPoint, BigInteger): PrivateScope, Public, Static, HideBySig
    ShamirsTrick(ECPoint, BigInteger, ECPoint, BigInteger): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Math.EC.ECCurve: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Math.EC.ECFieldElement a : Assembly
    Org.BouncyCastle.Math.EC.ECFieldElement b : Assembly
  Properties:
    Int32 FieldSize 'get ' : 
    Org.BouncyCastle.Math.EC.ECPoint Infinity 'get ' : 
    Org.BouncyCastle.Math.EC.ECFieldElement A 'get ' : 
    Org.BouncyCastle.Math.EC.ECFieldElement B 'get ' : 
  Methods:
    get_FieldSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    FromBigInteger(BigInteger): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreatePoint(BigInteger, BigInteger, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Infinity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    get_B(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    DecodePoint(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Math.EC.FpCurve: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Math.EC.ECCurve
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger Q 'get ' : 
    Org.BouncyCastle.Math.EC.ECPoint Infinity 'get ' : 
    Int32 FieldSize 'get ' : 
  Methods:
    get_Q(): PrivateScope, Public, HideBySig, SpecialName
    get_Infinity(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FieldSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    FromBigInteger(BigInteger): PrivateScope, Public, Virtual, HideBySig
    CreatePoint(BigInteger, BigInteger, Boolean): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Math.EC.F2mCurve: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Math.EC.ECCurve
    Void .ctor(Int32, Int32, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.EC.ECPoint Infinity 'get ' : 
    Int32 FieldSize 'get ' : 
    Boolean IsKoblitz 'get ' : 
    Int32 M    'get ' : 
    Int32 K1   'get ' : 
    Int32 K2   'get ' : 
    Int32 K3   'get ' : 
    Org.BouncyCastle.Math.BigInteger N 'get ' : 
    Org.BouncyCastle.Math.BigInteger H 'get ' : 
  Methods:
    get_Infinity(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FieldSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    FromBigInteger(BigInteger): PrivateScope, Public, Virtual, HideBySig
    get_IsKoblitz(): PrivateScope, Public, HideBySig, SpecialName
    GetMu(): PrivateScope, Assembly, HideBySig
    GetSi(): PrivateScope, Assembly, HideBySig
    CreatePoint(BigInteger, BigInteger, Boolean): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    get_M(): PrivateScope, Public, HideBySig, SpecialName
    IsTrinomial(): PrivateScope, Public, HideBySig
    get_K1(): PrivateScope, Public, HideBySig, SpecialName
    get_K2(): PrivateScope, Public, HideBySig, SpecialName
    get_K3(): PrivateScope, Public, HideBySig, SpecialName
    get_N(): PrivateScope, Public, HideBySig, SpecialName
    get_H(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Math.EC.ECFieldElement: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.String FieldName 'get ' : 
    Int32 FieldSize 'get ' : 
  Methods:
    ToBigInteger(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_FieldName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FieldSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Add(ECFieldElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Subtract(ECFieldElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Multiply(ECFieldElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Divide(ECFieldElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Negate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Square(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Invert(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Sqrt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Math.EC.FpFieldElement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Math.EC.ECFieldElement
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String FieldName 'get ' : 
    Int32 FieldSize 'get ' : 
    Org.BouncyCastle.Math.BigInteger Q 'get ' : 
  Methods:
    ToBigInteger(): PrivateScope, Public, Virtual, HideBySig
    get_FieldName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FieldSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Q(): PrivateScope, Public, HideBySig, SpecialName
    Add(ECFieldElement): PrivateScope, Public, Virtual, HideBySig
    Subtract(ECFieldElement): PrivateScope, Public, Virtual, HideBySig
    Multiply(ECFieldElement): PrivateScope, Public, Virtual, HideBySig
    Divide(ECFieldElement): PrivateScope, Public, Virtual, HideBySig
    Negate(): PrivateScope, Public, Virtual, HideBySig
    Square(): PrivateScope, Public, Virtual, HideBySig
    Invert(): PrivateScope, Public, Virtual, HideBySig
    Sqrt(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Math.EC.F2mFieldElement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Math.EC.ECFieldElement
    Void .ctor(Int32, Int32, Int32, Int32, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Gnb = 1 : Public, Static, Literal, HasDefault
    Int32 Tpb = 2 : Public, Static, Literal, HasDefault
    Int32 Ppb = 3 : Public, Static, Literal, HasDefault
  Properties:
    System.String FieldName 'get ' : 
    Int32 FieldSize 'get ' : 
    Int32 Representation 'get ' : 
    Int32 M    'get ' : 
    Int32 K1   'get ' : 
    Int32 K2   'get ' : 
    Int32 K3   'get ' : 
  Methods:
    ToBigInteger(): PrivateScope, Public, Virtual, HideBySig
    get_FieldName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FieldSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CheckFieldElements(ECFieldElement, ECFieldElement): PrivateScope, Public, Static, HideBySig
    Add(ECFieldElement): PrivateScope, Public, Virtual, HideBySig
    Subtract(ECFieldElement): PrivateScope, Public, Virtual, HideBySig
    Multiply(ECFieldElement): PrivateScope, Public, Virtual, HideBySig
    Divide(ECFieldElement): PrivateScope, Public, Virtual, HideBySig
    Negate(): PrivateScope, Public, Virtual, HideBySig
    Square(): PrivateScope, Public, Virtual, HideBySig
    Invert(): PrivateScope, Public, Virtual, HideBySig
    Sqrt(): PrivateScope, Public, Virtual, HideBySig
    get_Representation(): PrivateScope, Public, HideBySig, SpecialName
    get_M(): PrivateScope, Public, HideBySig, SpecialName
    get_K1(): PrivateScope, Public, HideBySig, SpecialName
    get_K2(): PrivateScope, Public, HideBySig, SpecialName
    get_K3(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Math.EC.ECPoint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Math.EC.ECCurve curve : Assembly, InitOnly
    Org.BouncyCastle.Math.EC.ECFieldElement x : Assembly, InitOnly
    Org.BouncyCastle.Math.EC.ECFieldElement y : Assembly, InitOnly
    Boolean withCompression : Assembly, InitOnly
    Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier multiplier : Assembly
    Org.BouncyCastle.Math.EC.Multiplier.PreCompInfo preCompInfo : Assembly
  Properties:
    Org.BouncyCastle.Math.EC.ECCurve Curve 'get ' : 
    Org.BouncyCastle.Math.EC.ECFieldElement X 'get ' : 
    Org.BouncyCastle.Math.EC.ECFieldElement Y 'get ' : 
    Boolean IsInfinity 'get ' : 
    Boolean IsCompressed 'get ' : 
  Methods:
    get_Curve(): PrivateScope, Public, HideBySig, SpecialName
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInfinity(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCompressed(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    SetPreCompInfo(PreCompInfo): PrivateScope, Assembly, HideBySig
    GetEncoded(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEncoded(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Add(ECPoint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Subtract(ECPoint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Negate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Twice(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Multiply(BigInteger): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AssertECMultiplier(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
Class Org.BouncyCastle.Math.EC.ECPointBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Org.BouncyCastle.Math.EC.ECPoint
  Methods:
    GetEncoded(Boolean): PrivateScope, Public, Virtual, HideBySig
    Multiply(BigInteger): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Math.EC.FpPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Math.EC.ECPointBase
    Void .ctor(Org.BouncyCastle.Math.EC.ECCurve, Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.EC.ECCurve, Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(ECPoint): PrivateScope, Public, Virtual, HideBySig
    Twice(): PrivateScope, Public, Virtual, HideBySig
    Subtract(ECPoint): PrivateScope, Public, Virtual, HideBySig
    Negate(): PrivateScope, Public, Virtual, HideBySig
    AssertECMultiplier(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Math.EC.F2mPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Math.EC.ECPointBase
    Void .ctor(Org.BouncyCastle.Math.EC.ECCurve, Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.EC.ECCurve, Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.EC.ECCurve): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
  Methods:
    Add(ECPoint): PrivateScope, Public, Virtual, HideBySig
    AddSimple(F2mPoint): PrivateScope, Assembly, HideBySig
    Subtract(ECPoint): PrivateScope, Public, Virtual, HideBySig
    SubtractSimple(F2mPoint): PrivateScope, Assembly, HideBySig
    Twice(): PrivateScope, Public, Virtual, HideBySig
    Negate(): PrivateScope, Public, Virtual, HideBySig
    AssertECMultiplier(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Org.BouncyCastle.Math.EC.IntArray: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Math.BigInteger, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 BitLength 'get ' : 
    Int32 Length 'get ' : 
  Methods:
    GetUsedLength(): PrivateScope, Public, HideBySig
    get_BitLength(): PrivateScope, Public, HideBySig, SpecialName
    ToBigInteger(): PrivateScope, Public, HideBySig
    ShiftLeft(): PrivateScope, Public, HideBySig
    ShiftLeft(Int32): PrivateScope, Public, HideBySig
    AddShifted(IntArray, Int32): PrivateScope, Public, HideBySig
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    TestBit(Int32): PrivateScope, Public, HideBySig
    FlipBit(Int32): PrivateScope, Public, HideBySig
    SetBit(Int32): PrivateScope, Public, HideBySig
    Multiply(IntArray, Int32): PrivateScope, Public, HideBySig
    Reduce(Int32, Int32[]): PrivateScope, Public, HideBySig
    Square(Int32): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Interface Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    Multiply(ECPoint, BigInteger, PreCompInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Math.EC.Multiplier.FpNafMultiplier: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier
  Methods:
    Multiply(ECPoint, BigInteger, PreCompInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Math.EC.Multiplier.PreCompInfo: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
Class Org.BouncyCastle.Math.EC.Multiplier.ReferenceMultiplier: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier
  Methods:
    Multiply(ECPoint, BigInteger, PreCompInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Math.EC.Multiplier.WNafMultiplier: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier
  Methods:
    WindowNaf(SByte, BigInteger): PrivateScope, Public, HideBySig
    Multiply(ECPoint, BigInteger, PreCompInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Math.EC.Multiplier.WNafPreCompInfo: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Math.EC.Multiplier.PreCompInfo
  Methods:
    GetPreComp(): PrivateScope, Assembly, HideBySig
    SetPreComp(ECPoint[]): PrivateScope, Assembly, HideBySig
    GetTwiceP(): PrivateScope, Assembly, HideBySig
    SetTwiceP(ECPoint): PrivateScope, Assembly, HideBySig
Class Org.BouncyCastle.Math.EC.Multiplier.WTauNafMultiplier: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier
  Methods:
    Multiply(ECPoint, BigInteger, PreCompInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Math.EC.Multiplier.WTauNafPreCompInfo: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Math.EC.F2mPoint[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Math.EC.Multiplier.PreCompInfo
  Methods:
    GetPreComp(): PrivateScope, Assembly, HideBySig
Interface Org.BouncyCastle.X509.IX509Extension: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetCriticalExtensionOids(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetNonCriticalExtensionOids(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetExtensionValue(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    GetExtensionValue(DerObjectIdentifier): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.X509.X509ExtensionBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    Org.BouncyCastle.X509.IX509Extension
  Methods:
    GetNonCriticalExtensionOids(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCriticalExtensionOids(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetExtensionValue(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetExtensionValue(DerObjectIdentifier): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Ocsp.BasicOcspResp: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.X509.X509ExtensionBase
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.BasicOcspResponse): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Version 'get ' : 
    Org.BouncyCastle.Ocsp.RespID ResponderId 'get ' : 
    System.DateTime ProducedAt 'get ' : 
    Org.BouncyCastle.Ocsp.SingleResp[] Responses 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions ResponseExtensions 'get ' : 
    System.String SignatureAlgName 'get ' : 
    System.String SignatureAlgOid 'get ' : 
  Methods:
    GetTbsResponseData(): PrivateScope, Public, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_ResponderId(): PrivateScope, Public, HideBySig, SpecialName
    get_ProducedAt(): PrivateScope, Public, HideBySig, SpecialName
    get_Responses(): PrivateScope, Public, HideBySig, SpecialName
    get_ResponseExtensions(): PrivateScope, Public, HideBySig, SpecialName
    get_SignatureAlgName(): PrivateScope, Public, HideBySig, SpecialName
    get_SignatureAlgOid(): PrivateScope, Public, HideBySig, SpecialName
    GetResponseData(): PrivateScope, Public, HideBySig (Obsolete)
    GetSignature(): PrivateScope, Public, HideBySig
    GetCerts(): PrivateScope, Public, HideBySig
    GetCertificates(String): PrivateScope, Public, HideBySig
    Verify(AsymmetricKeyParameter): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Ocsp.BasicOcspRespGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Ocsp.RespID): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.IEnumerable SignatureAlgNames 'get ' : 
  Methods:
    AddResponse(CertificateID, CertificateStatus): PrivateScope, Public, HideBySig
    AddResponse(CertificateID, CertificateStatus, X509Extensions): PrivateScope, Public, HideBySig
    AddResponse(CertificateID, CertificateStatus, DateTime, X509Extensions): PrivateScope, Public, HideBySig
    AddResponse(CertificateID, CertificateStatus, DateTime, DateTime, X509Extensions): PrivateScope, Public, HideBySig
    SetResponseExtensions(X509Extensions): PrivateScope, Public, HideBySig
    Generate(String, AsymmetricKeyParameter, X509Certificate[], DateTime): PrivateScope, Public, HideBySig
    Generate(String, AsymmetricKeyParameter, X509Certificate[], DateTime, SecureRandom): PrivateScope, Public, HideBySig
    get_SignatureAlgNames(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Ocsp.CertificateID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.CertID): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Org.BouncyCastle.X509.X509Certificate, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String HashSha1 = 1.3.14.3.2.26 : Public, Static, Literal, HasDefault
  Properties:
    System.String HashAlgOid 'get ' : 
    Org.BouncyCastle.Math.BigInteger SerialNumber 'get ' : 
  Methods:
    get_HashAlgOid(): PrivateScope, Public, HideBySig, SpecialName
    GetIssuerNameHash(): PrivateScope, Public, HideBySig
    GetIssuerKeyHash(): PrivateScope, Public, HideBySig
    get_SerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    MatchesIssuer(X509Certificate): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    DeriveCertificateID(CertificateID, BigInteger): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Ocsp.CertificateStatus: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Ocsp.CertificateStatus Good : Public, Static, InitOnly
Class Org.BouncyCastle.Ocsp.OcspException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Ocsp.OcspReq: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.X509.X509ExtensionBase
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.OcspRequest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Version 'get ' : 
    Org.BouncyCastle.Asn1.X509.GeneralName RequestorName 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions RequestExtensions 'get ' : 
    System.String SignatureAlgOid 'get ' : 
    Boolean IsSigned 'get ' : 
  Methods:
    GetTbsRequest(): PrivateScope, Public, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_RequestorName(): PrivateScope, Public, HideBySig, SpecialName
    GetRequestList(): PrivateScope, Public, HideBySig
    get_RequestExtensions(): PrivateScope, Public, HideBySig, SpecialName
    get_SignatureAlgOid(): PrivateScope, Public, HideBySig, SpecialName
    GetSignature(): PrivateScope, Public, HideBySig
    GetCerts(): PrivateScope, Public, HideBySig
    GetCertificates(String): PrivateScope, Public, HideBySig
    get_IsSigned(): PrivateScope, Public, HideBySig, SpecialName
    Verify(AsymmetricKeyParameter): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Ocsp.OcspReqGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.IEnumerable SignatureAlgNames 'get ' : 
  Methods:
    AddRequest(CertificateID): PrivateScope, Public, HideBySig
    AddRequest(CertificateID, X509Extensions): PrivateScope, Public, HideBySig
    SetRequestorName(X509Name): PrivateScope, Public, HideBySig
    SetRequestorName(GeneralName): PrivateScope, Public, HideBySig
    SetRequestExtensions(X509Extensions): PrivateScope, Public, HideBySig
    Generate(): PrivateScope, Public, HideBySig
    Generate(String, AsymmetricKeyParameter, X509Certificate[]): PrivateScope, Public, HideBySig
    Generate(String, AsymmetricKeyParameter, X509Certificate[], SecureRandom): PrivateScope, Public, HideBySig
    get_SignatureAlgNames(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Ocsp.OcspResp: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.OcspResponse): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Status 'get ' : 
  Methods:
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    GetResponseObject(): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Ocsp.OCSPRespGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Successful = 0 : Public, Static, Literal, HasDefault
    Int32 MalformedRequest = 1 : Public, Static, Literal, HasDefault
    Int32 InternalError = 2 : Public, Static, Literal, HasDefault
    Int32 TryLater = 3 : Public, Static, Literal, HasDefault
    Int32 SigRequired = 5 : Public, Static, Literal, HasDefault
    Int32 Unauthorized = 6 : Public, Static, Literal, HasDefault
  Methods:
    Generate(Int32, Object): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Ocsp.OcspRespStatus: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Int32 Successful = 0 : Public, Static, Literal, HasDefault
    Int32 MalformedRequest = 1 : Public, Static, Literal, HasDefault
    Int32 InternalError = 2 : Public, Static, Literal, HasDefault
    Int32 TryLater = 3 : Public, Static, Literal, HasDefault
    Int32 SigRequired = 5 : Public, Static, Literal, HasDefault
    Int32 Unauthorized = 6 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Ocsp.OcscpRespStatus: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit (Obsolete)
  :Org.BouncyCastle.Ocsp.OcspRespStatus
Class Org.BouncyCastle.Ocsp.OcspUtilities: NotPublic
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.IEnumerable AlgNames 'get ' : 
  Methods:
    GetAlgorithmOid(String): PrivateScope, Assembly, Static, HideBySig
    GetAlgorithmName(DerObjectIdentifier): PrivateScope, Assembly, Static, HideBySig
    GetSigAlgID(DerObjectIdentifier): PrivateScope, Assembly, Static, HideBySig
    get_AlgNames(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class Org.BouncyCastle.Ocsp.Req: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.X509.X509ExtensionBase
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.Request): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.X509Extensions SingleRequestExtensions 'get ' : 
  Methods:
    GetCertID(): PrivateScope, Public, HideBySig
    get_SingleRequestExtensions(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Ocsp.RespData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.X509.X509ExtensionBase
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.ResponseData): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.Ocsp.ResponseData data : Assembly, InitOnly
  Properties:
    Int32 Version 'get ' : 
    System.DateTime ProducedAt 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions ResponseExtensions 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    GetResponderId(): PrivateScope, Public, HideBySig
    get_ProducedAt(): PrivateScope, Public, HideBySig, SpecialName
    GetResponses(): PrivateScope, Public, HideBySig
    get_ResponseExtensions(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Ocsp.RespID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.ResponderID): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509Name): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.Ocsp.ResponderID id : Assembly, InitOnly
  Methods:
    ToAsn1Object(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Ocsp.RevokedStatus: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Ocsp.CertificateStatus
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.RevokedInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTime, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.Ocsp.RevokedInfo info : Assembly, InitOnly
  Properties:
    System.DateTime RevocationTime 'get ' : 
    Boolean HasRevocationReason 'get ' : 
    Int32 RevocationReason 'get ' : 
  Methods:
    get_RevocationTime(): PrivateScope, Public, HideBySig, SpecialName
    get_HasRevocationReason(): PrivateScope, Public, HideBySig, SpecialName
    get_RevocationReason(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Ocsp.SingleResp: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.X509.X509ExtensionBase
    Void .ctor(Org.BouncyCastle.Asn1.Ocsp.SingleResponse): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.Ocsp.SingleResponse resp : Assembly, InitOnly
  Properties:
    System.DateTime ThisUpdate 'get ' : 
    Org.BouncyCastle.Utilities.Date.DateTimeObject NextUpdate 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions SingleExtensions 'get ' : 
  Methods:
    GetCertID(): PrivateScope, Public, HideBySig
    GetCertStatus(): PrivateScope, Public, HideBySig
    get_ThisUpdate(): PrivateScope, Public, HideBySig, SpecialName
    get_NextUpdate(): PrivateScope, Public, HideBySig, SpecialName
    get_SingleExtensions(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Ocsp.UnknownStatus: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Ocsp.CertificateStatus
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface Org.BouncyCastle.Bcpg.OpenPgp.IStreamGenerator: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpCompressedData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.OpenPgp.PgpObject
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Bcpg.CompressionAlgorithmTag Algorithm 'get ' : 
  Methods:
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    GetInputStream(): PrivateScope, Public, HideBySig
    GetDataStream(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpCompressedDataGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Bcpg.CompressionAlgorithmTag): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.CompressionAlgorithmTag, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Bcpg.OpenPgp.IStreamGenerator
  Methods:
    Open(Stream): PrivateScope, Public, HideBySig
    Open(Stream, Byte[]): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Apache.Bzip2.CBZip2OutputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    Finish(): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Org.BouncyCastle.Apache.Bzip2.CBZip2OutputStream+StackElem: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 ll : Assembly
    Int32 hh : Assembly
    Int32 dd : Assembly
Class Org.BouncyCastle.Utilities.Zlib.ZOutputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Org.BouncyCastle.Utilities.Zlib.ZStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int32 FlushMode 'get set' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    Int64 TotalIn 'get ' : 
    Int64 TotalOut 'get ' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    End(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Finish(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Flush(): PrivateScope, Public, Virtual, HideBySig
    get_FlushMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FlushMode(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Length(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Final, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Final, Virtual, HideBySig
    get_TotalIn(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TotalOut(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Exception UnderlyingException 'get ' :  (Obsolete)
  Methods:
    get_UnderlyingException(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpDataValidationException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.OpenPgp.PgpException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedData: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Bcpg.InputStreamPacket): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Bcpg.InputStreamPacket encData : Assembly
    System.IO.Stream encStream : Assembly
    TruncatedStream truncStream : Assembly
  Methods:
    GetInputStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsIntegrityProtected(): PrivateScope, Public, HideBySig
    Verify(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedData+TruncatedStream: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Org.BouncyCastle.Utilities.IO.BaseInputStream
    Void .ctor(System.IO.Stream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GetLookAhead(): PrivateScope, Assembly, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedDataGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Boolean, Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Org.BouncyCastle.Security.SecureRandom, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Bcpg.OpenPgp.IStreamGenerator
  Methods:
    AddMethod(Char[]): PrivateScope, Public, HideBySig
    AddMethod(Char[], HashAlgorithmTag): PrivateScope, Public, HideBySig
    AddMethod(PgpPublicKey): PrivateScope, Public, HideBySig
    Open(Stream, Int64): PrivateScope, Public, HideBySig
    Open(Stream, Byte[]): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedDataList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.OpenPgp.PgpObject
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedData Item [Int32] 'get ' : 
    Int32 Size 'get ' :  (Obsolete)
    Int32 Count 'get ' : 
    Boolean IsEmpty 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    Get(Int32): PrivateScope, Public, HideBySig (Obsolete)
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    GetEncryptedDataObjects(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpExperimental: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.OpenPgp.PgpObject
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyFlags: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Int32 CanCertify = 1 : Public, Static, Literal, HasDefault
    Int32 CanSign = 2 : Public, Static, Literal, HasDefault
    Int32 CanEncryptCommunications = 4 : Public, Static, Literal, HasDefault
    Int32 CanEncryptStorage = 8 : Public, Static, Literal, HasDefault
    Int32 MaybeSplit = 16 : Public, Static, Literal, HasDefault
    Int32 MaybeShared = 128 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyPair: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair, System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag, Org.BouncyCastle.Crypto.AsymmetricKeyParameter, Org.BouncyCastle.Crypto.AsymmetricKeyParameter, System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey, Org.BouncyCastle.Bcpg.OpenPgp.PgpPrivateKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 KeyId 'get ' : 
    Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey PublicKey 'get ' : 
    Org.BouncyCastle.Bcpg.OpenPgp.PgpPrivateKey PrivateKey 'get ' : 
  Methods:
    get_KeyId(): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKey(): PrivateScope, Public, HideBySig, SpecialName
    get_PrivateKey(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyRing: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.OpenPgp.PgpObject
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadOptionalTrustPacket(BcpgInputStream): PrivateScope, Assembly, Static, HideBySig
    ReadSignaturesAndTrust(BcpgInputStream): PrivateScope, Assembly, Static, HideBySig
    ReadUserIDs(BcpgInputStream, IList&(Out), IList&(Out), IList&(Out)): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyRingGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyPair, System.String, Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Char[], Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketVector, Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketVector, Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyPair, System.String, Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Char[], Boolean, Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketVector, Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketVector, Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddSubKey(PgpKeyPair): PrivateScope, Public, HideBySig
    AddSubKey(PgpKeyPair, PgpSignatureSubpacketVector, PgpSignatureSubpacketVector): PrivateScope, Public, HideBySig
    GenerateSecretKeyRing(): PrivateScope, Public, HideBySig
    GeneratePublicKeyRing(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyValidationException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.OpenPgp.PgpException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpLiteralData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.OpenPgp.PgpObject
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Char Binary = b : Public, Static, Literal, HasDefault
    Char Text = t : Public, Static, Literal, HasDefault
    Char Utf8 = u : Public, Static, Literal, HasDefault
    System.String Console = _CONSOLE : Public, Static, Literal, HasDefault
  Properties:
    Int32 Format 'get ' : 
    System.String FileName 'get ' : 
    System.DateTime ModificationTime 'get ' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    GetRawFileName(): PrivateScope, Public, HideBySig
    get_ModificationTime(): PrivateScope, Public, HideBySig, SpecialName
    GetInputStream(): PrivateScope, Public, HideBySig
    GetDataStream(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpLiteralDataGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Bcpg.OpenPgp.IStreamGenerator
  Fields:
    Char Binary = b : Public, Static, Literal, HasDefault
    Char Text = t : Public, Static, Literal, HasDefault
    Char Utf8 = u : Public, Static, Literal, HasDefault
    System.String Console = _CONSOLE : Public, Static, Literal, HasDefault
  Methods:
    Open(Stream, Char, String, Int64, DateTime): PrivateScope, Public, HideBySig
    Open(Stream, Char, String, DateTime, Byte[]): PrivateScope, Public, HideBySig
    Open(Stream, Char, FileInfo): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpMarker: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.OpenPgp.PgpObject
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpObjectFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    NextPgpObject(): PrivateScope, Public, HideBySig
    NextObject(): PrivateScope, Public, HideBySig (Obsolete)
    AllPgpObjects(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpOnePassSignature: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.OnePassSignaturePacket): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 KeyId 'get ' : 
    Int32 SignatureType 'get ' : 
    Org.BouncyCastle.Bcpg.HashAlgorithmTag HashAlgorithm 'get ' : 
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag KeyAlgorithm 'get ' : 
  Methods:
    InitVerify(PgpPublicKey): PrivateScope, Public, HideBySig
    Update(Byte): PrivateScope, Public, HideBySig
    Update(Byte[]): PrivateScope, Public, HideBySig
    Update(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    Verify(PgpSignature): PrivateScope, Public, HideBySig
    get_KeyId(): PrivateScope, Public, HideBySig, SpecialName
    get_SignatureType(): PrivateScope, Public, HideBySig, SpecialName
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    GetEncoded(): PrivateScope, Public, HideBySig
    Encode(Stream): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpOnePassSignatureList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.OpenPgp.PgpObject
    Void .ctor(Org.BouncyCastle.Bcpg.OpenPgp.PgpOnePassSignature[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.OpenPgp.PgpOnePassSignature): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Bcpg.OpenPgp.PgpOnePassSignature Item [Int32] 'get ' : 
    Int32 Size 'get ' :  (Obsolete)
    Int32 Count 'get ' : 
    Boolean IsEmpty 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    Get(Int32): PrivateScope, Public, HideBySig (Obsolete)
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpPbeEncryptedData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedData
    Void .ctor(Org.BouncyCastle.Bcpg.SymmetricKeyEncSessionPacket, Org.BouncyCastle.Bcpg.InputStreamPacket): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInputStream(): PrivateScope, Public, Virtual, HideBySig
    GetDataStream(Char[]): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpPrivateKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 KeyId 'get ' : 
    Org.BouncyCastle.Crypto.AsymmetricKeyParameter Key 'get ' : 
  Methods:
    get_KeyId(): PrivateScope, Public, HideBySig, SpecialName
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag, Org.BouncyCastle.Crypto.AsymmetricKeyParameter, System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.PublicKeyPacket, Org.BouncyCastle.Bcpg.TrustPacket, System.Collections.IList): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey, Org.BouncyCastle.Bcpg.TrustPacket, System.Collections.IList): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.PublicKeyPacket, Org.BouncyCastle.Bcpg.TrustPacket, System.Collections.IList, System.Collections.IList, System.Collections.IList, System.Collections.IList): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.PublicKeyPacket, System.Collections.IList, System.Collections.IList): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Bcpg.PublicKeyPacket publicPk : Assembly
    Org.BouncyCastle.Bcpg.TrustPacket trustPk : Assembly
    System.Collections.IList keySigs : Assembly
    System.Collections.IList ids : Assembly
    System.Collections.IList idTrusts : Assembly
    System.Collections.IList idSigs : Assembly
    System.Collections.IList subSigs : Assembly
  Properties:
    Int32 Version 'get ' : 
    System.DateTime CreationTime 'get ' : 
    Int32 ValidDays 'get ' : 
    Int64 KeyId 'get ' : 
    Boolean IsEncryptionKey 'get ' : 
    Boolean IsMasterKey 'get ' : 
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag Algorithm 'get ' : 
    Int32 BitStrength 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_CreationTime(): PrivateScope, Public, HideBySig, SpecialName
    get_ValidDays(): PrivateScope, Public, HideBySig, SpecialName
    GetTrustData(): PrivateScope, Public, HideBySig
    GetValidSeconds(): PrivateScope, Public, HideBySig
    get_KeyId(): PrivateScope, Public, HideBySig, SpecialName
    GetFingerprint(): PrivateScope, Public, HideBySig
    get_IsEncryptionKey(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMasterKey(): PrivateScope, Public, HideBySig, SpecialName
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_BitStrength(): PrivateScope, Public, HideBySig, SpecialName
    GetKey(): PrivateScope, Public, HideBySig
    GetUserIds(): PrivateScope, Public, HideBySig
    GetUserAttributes(): PrivateScope, Public, HideBySig
    GetSignaturesForId(String): PrivateScope, Public, HideBySig
    GetSignaturesForUserAttribute(PgpUserAttributeSubpacketVector): PrivateScope, Public, HideBySig
    GetSignaturesOfType(Int32): PrivateScope, Public, HideBySig
    GetSignatures(): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
    Encode(Stream): PrivateScope, Public, HideBySig
    IsRevoked(): PrivateScope, Public, HideBySig
    AddCertification(PgpPublicKey, String, PgpSignature): PrivateScope, Public, Static, HideBySig
    AddCertification(PgpPublicKey, PgpUserAttributeSubpacketVector, PgpSignature): PrivateScope, Public, Static, HideBySig
    RemoveCertification(PgpPublicKey, PgpUserAttributeSubpacketVector): PrivateScope, Public, Static, HideBySig
    RemoveCertification(PgpPublicKey, String): PrivateScope, Public, Static, HideBySig
    RemoveCertification(PgpPublicKey, String, PgpSignature): PrivateScope, Public, Static, HideBySig
    RemoveCertification(PgpPublicKey, PgpUserAttributeSubpacketVector, PgpSignature): PrivateScope, Public, Static, HideBySig
    AddCertification(PgpPublicKey, PgpSignature): PrivateScope, Public, Static, HideBySig
    RemoveCertification(PgpPublicKey, PgpSignature): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKeyEncryptedData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedData
    Void .ctor(Org.BouncyCastle.Bcpg.PublicKeyEncSessionPacket, Org.BouncyCastle.Bcpg.InputStreamPacket): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 KeyId 'get ' : 
  Methods:
    get_KeyId(): PrivateScope, Public, HideBySig, SpecialName
    GetSymmetricAlgorithm(PgpPrivateKey): PrivateScope, Public, HideBySig
    GetDataStream(PgpPrivateKey): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKeyRing: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyRing
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IList): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetPublicKey(): PrivateScope, Public, HideBySig
    GetPublicKey(Int64): PrivateScope, Public, HideBySig
    GetPublicKeys(): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
    Encode(Stream): PrivateScope, Public, HideBySig
    InsertPublicKey(PgpPublicKeyRing, PgpPublicKey): PrivateScope, Public, Static, HideBySig
    RemovePublicKey(PgpPublicKeyRing, PgpPublicKey): PrivateScope, Public, Static, HideBySig
    ReadSubkey(BcpgInputStream): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKeyRingBundle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Size 'get ' :  (Obsolete)
    Int32 Count 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    GetKeyRings(): PrivateScope, Public, HideBySig
    GetKeyRings(String): PrivateScope, Public, HideBySig
    GetKeyRings(String, Boolean): PrivateScope, Public, HideBySig
    GetKeyRings(String, Boolean, Boolean): PrivateScope, Public, HideBySig
    GetPublicKey(Int64): PrivateScope, Public, HideBySig
    GetPublicKeyRing(Int64): PrivateScope, Public, HideBySig
    Contains(Int64): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
    Encode(Stream): PrivateScope, Public, HideBySig
    AddPublicKeyRing(PgpPublicKeyRingBundle, PgpPublicKeyRing): PrivateScope, Public, Static, HideBySig
    RemovePublicKeyRing(PgpPublicKeyRingBundle, PgpPublicKeyRing): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Bcpg.SecretKeyPacket, Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.OpenPgp.PgpPrivateKey, Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey, Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Char[], Boolean, Org.BouncyCastle.Security.SecureRandom): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.OpenPgp.PgpPrivateKey, Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey, Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Char[], Boolean, Org.BouncyCastle.Security.SecureRandom, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyPair, System.String, Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Char[], Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketVector, Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketVector, Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyPair, System.String, Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Char[], Boolean, Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketVector, Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketVector, Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag, Org.BouncyCastle.Crypto.AsymmetricKeyParameter, Org.BouncyCastle.Crypto.AsymmetricKeyParameter, System.DateTime, System.String, Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Char[], Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketVector, Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketVector, Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag, Org.BouncyCastle.Crypto.AsymmetricKeyParameter, Org.BouncyCastle.Crypto.AsymmetricKeyParameter, System.DateTime, System.String, Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag, Char[], Boolean, Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketVector, Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketVector, Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsSigningKey 'get ' : 
    Boolean IsMasterKey 'get ' : 
    Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag KeyEncryptionAlgorithm 'get ' : 
    Int64 KeyId 'get ' : 
    Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey PublicKey 'get ' : 
    System.Collections.IEnumerable UserIds 'get ' : 
    System.Collections.IEnumerable UserAttributes 'get ' : 
  Methods:
    get_IsSigningKey(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMasterKey(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyEncryptionAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyId(): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKey(): PrivateScope, Public, HideBySig, SpecialName
    get_UserIds(): PrivateScope, Public, HideBySig, SpecialName
    get_UserAttributes(): PrivateScope, Public, HideBySig, SpecialName
    ExtractPrivateKey(Char[]): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
    Encode(Stream): PrivateScope, Public, HideBySig
    CopyWithNewPassword(PgpSecretKey, Char[], Char[], SymmetricKeyAlgorithmTag, SecureRandom): PrivateScope, Public, Static, HideBySig
    ReplacePublicKey(PgpSecretKey, PgpPublicKey): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKeyRing: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyRing
    Void .ctor(System.Collections.IList): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetPublicKey(): PrivateScope, Public, HideBySig
    GetSecretKey(): PrivateScope, Public, HideBySig
    GetSecretKeys(): PrivateScope, Public, HideBySig
    GetSecretKey(Int64): PrivateScope, Public, HideBySig
    GetExtraPublicKeys(): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
    Encode(Stream): PrivateScope, Public, HideBySig
    ReplacePublicKeys(PgpSecretKeyRing, PgpPublicKeyRing): PrivateScope, Public, Static, HideBySig
    CopyWithNewPassword(PgpSecretKeyRing, Char[], Char[], SymmetricKeyAlgorithmTag, SecureRandom): PrivateScope, Public, Static, HideBySig
    InsertSecretKey(PgpSecretKeyRing, PgpSecretKey): PrivateScope, Public, Static, HideBySig
    RemoveSecretKey(PgpSecretKeyRing, PgpSecretKey): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKeyRingBundle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Size 'get ' :  (Obsolete)
    Int32 Count 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    GetKeyRings(): PrivateScope, Public, HideBySig
    GetKeyRings(String): PrivateScope, Public, HideBySig
    GetKeyRings(String, Boolean): PrivateScope, Public, HideBySig
    GetKeyRings(String, Boolean, Boolean): PrivateScope, Public, HideBySig
    GetSecretKey(Int64): PrivateScope, Public, HideBySig
    GetSecretKeyRing(Int64): PrivateScope, Public, HideBySig
    Contains(Int64): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
    Encode(Stream): PrivateScope, Public, HideBySig
    AddSecretKeyRing(PgpSecretKeyRingBundle, PgpSecretKeyRing): PrivateScope, Public, Static, HideBySig
    RemoveSecretKeyRing(PgpSecretKeyRingBundle, PgpSecretKeyRing): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpSignature: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Bcpg.BcpgInputStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.SignaturePacket): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.SignaturePacket, Org.BouncyCastle.Bcpg.TrustPacket): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 BinaryDocument = 0 : Public, Static, Literal, HasDefault
    Int32 CanonicalTextDocument = 1 : Public, Static, Literal, HasDefault
    Int32 StandAlone = 2 : Public, Static, Literal, HasDefault
    Int32 DefaultCertification = 16 : Public, Static, Literal, HasDefault
    Int32 NoCertification = 17 : Public, Static, Literal, HasDefault
    Int32 CasualCertification = 18 : Public, Static, Literal, HasDefault
    Int32 PositiveCertification = 19 : Public, Static, Literal, HasDefault
    Int32 SubkeyBinding = 24 : Public, Static, Literal, HasDefault
    Int32 PrimaryKeyBinding = 25 : Public, Static, Literal, HasDefault
    Int32 DirectKey = 31 : Public, Static, Literal, HasDefault
    Int32 KeyRevocation = 32 : Public, Static, Literal, HasDefault
    Int32 SubkeyRevocation = 40 : Public, Static, Literal, HasDefault
    Int32 CertificationRevocation = 48 : Public, Static, Literal, HasDefault
    Int32 Timestamp = 64 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Version 'get ' : 
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag KeyAlgorithm 'get ' : 
    Org.BouncyCastle.Bcpg.HashAlgorithmTag HashAlgorithm 'get ' : 
    Int32 SignatureType 'get ' : 
    Int64 KeyId 'get ' : 
    System.DateTime CreationTime 'get ' : 
    Boolean HasSubpackets 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    InitVerify(PgpPublicKey): PrivateScope, Public, HideBySig
    Update(Byte): PrivateScope, Public, HideBySig
    Update(Byte[]): PrivateScope, Public, HideBySig
    Update(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    Verify(): PrivateScope, Public, HideBySig
    VerifyCertification(PgpUserAttributeSubpacketVector, PgpPublicKey): PrivateScope, Public, HideBySig
    VerifyCertification(String, PgpPublicKey): PrivateScope, Public, HideBySig
    VerifyCertification(PgpPublicKey, PgpPublicKey): PrivateScope, Public, HideBySig
    VerifyCertification(PgpPublicKey): PrivateScope, Public, HideBySig
    get_SignatureType(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyId(): PrivateScope, Public, HideBySig, SpecialName
    GetCreationTime(): PrivateScope, Public, HideBySig (Obsolete)
    get_CreationTime(): PrivateScope, Public, HideBySig, SpecialName
    GetSignatureTrailer(): PrivateScope, Public, HideBySig
    get_HasSubpackets(): PrivateScope, Public, HideBySig, SpecialName
    GetHashedSubPackets(): PrivateScope, Public, HideBySig
    GetUnhashedSubPackets(): PrivateScope, Public, HideBySig
    GetSignature(): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
    Encode(Stream): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag, Org.BouncyCastle.Bcpg.HashAlgorithmTag): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    InitSign(Int32, PgpPrivateKey): PrivateScope, Public, HideBySig
    InitSign(Int32, PgpPrivateKey, SecureRandom): PrivateScope, Public, HideBySig
    Update(Byte): PrivateScope, Public, HideBySig
    Update(Byte[]): PrivateScope, Public, HideBySig
    Update(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    SetHashedSubpackets(PgpSignatureSubpacketVector): PrivateScope, Public, HideBySig
    SetUnhashedSubpackets(PgpSignatureSubpacketVector): PrivateScope, Public, HideBySig
    GenerateOnePassVersion(Boolean): PrivateScope, Public, HideBySig
    Generate(): PrivateScope, Public, HideBySig
    GenerateCertification(String, PgpPublicKey): PrivateScope, Public, HideBySig
    GenerateCertification(PgpUserAttributeSubpacketVector, PgpPublicKey): PrivateScope, Public, HideBySig
    GenerateCertification(PgpPublicKey, PgpPublicKey): PrivateScope, Public, HideBySig
    GenerateCertification(PgpPublicKey): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.OpenPgp.PgpObject
    Void .ctor(Org.BouncyCastle.Bcpg.OpenPgp.PgpSignature[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Bcpg.OpenPgp.PgpSignature): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Bcpg.OpenPgp.PgpSignature Item [Int32] 'get ' : 
    Int32 Size 'get ' :  (Obsolete)
    Int32 Count 'get ' : 
    Boolean IsEmpty 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    Get(Int32): PrivateScope, Public, HideBySig (Obsolete)
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetRevocable(Boolean, Boolean): PrivateScope, Public, HideBySig
    SetExportable(Boolean, Boolean): PrivateScope, Public, HideBySig
    SetTrust(Boolean, Int32, Int32): PrivateScope, Public, HideBySig
    SetKeyExpirationTime(Boolean, Int64): PrivateScope, Public, HideBySig
    SetSignatureExpirationTime(Boolean, Int64): PrivateScope, Public, HideBySig
    SetSignatureCreationTime(Boolean, DateTime): PrivateScope, Public, HideBySig
    SetPreferredHashAlgorithms(Boolean, Int32[]): PrivateScope, Public, HideBySig
    SetPreferredSymmetricAlgorithms(Boolean, Int32[]): PrivateScope, Public, HideBySig
    SetPreferredCompressionAlgorithms(Boolean, Int32[]): PrivateScope, Public, HideBySig
    SetKeyFlags(Boolean, Int32): PrivateScope, Public, HideBySig
    SetSignerUserId(Boolean, String): PrivateScope, Public, HideBySig
    SetEmbeddedSignature(Boolean, PgpSignature): PrivateScope, Public, HideBySig
    SetPrimaryUserId(Boolean, Boolean): PrivateScope, Public, HideBySig
    SetNotationData(Boolean, Boolean, String, String): PrivateScope, Public, HideBySig
    SetRevocationReason(Boolean, RevocationReasonTag, String): PrivateScope, Public, HideBySig
    SetRevocationKey(Boolean, PublicKeyAlgorithmTag, Byte[]): PrivateScope, Public, HideBySig
    SetIssuerKeyID(Boolean, Int64): PrivateScope, Public, HideBySig
    Generate(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketVector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Bcpg.SignatureSubpacket[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Size 'get ' :  (Obsolete)
    Int32 Count 'get ' : 
  Methods:
    GetSubpacket(SignatureSubpacketTag): PrivateScope, Public, HideBySig
    HasSubpacket(SignatureSubpacketTag): PrivateScope, Public, HideBySig
    GetSubpackets(SignatureSubpacketTag): PrivateScope, Public, HideBySig
    GetNotationDataOccurences(): PrivateScope, Public, HideBySig
    GetIssuerKeyId(): PrivateScope, Public, HideBySig
    HasSignatureCreationTime(): PrivateScope, Public, HideBySig
    GetSignatureCreationTime(): PrivateScope, Public, HideBySig
    GetSignatureExpirationTime(): PrivateScope, Public, HideBySig
    GetKeyExpirationTime(): PrivateScope, Public, HideBySig
    GetPreferredHashAlgorithms(): PrivateScope, Public, HideBySig
    GetPreferredSymmetricAlgorithms(): PrivateScope, Public, HideBySig
    GetPreferredCompressionAlgorithms(): PrivateScope, Public, HideBySig
    GetKeyFlags(): PrivateScope, Public, HideBySig
    GetSignerUserId(): PrivateScope, Public, HideBySig
    IsPrimaryUserId(): PrivateScope, Public, HideBySig
    GetCriticalTags(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    ToSubpacketArray(): PrivateScope, Assembly, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpUserAttributeSubpacketVector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Bcpg.UserAttributeSubpacket[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetSubpacket(UserAttributeSubpacketTag): PrivateScope, Public, HideBySig
    GetImageAttribute(): PrivateScope, Public, HideBySig
    ToSubpacketArray(): PrivateScope, Assembly, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpUserAttributeSubpacketVectorGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetImageAttribute(Format, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Generate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpUtilities: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    DsaSigToMpi(Byte[]): PrivateScope, Public, Static, HideBySig
    RsaSigToMpi(Byte[]): PrivateScope, Public, Static, HideBySig
    GetDigestName(HashAlgorithmTag): PrivateScope, Public, Static, HideBySig
    GetSignatureName(PublicKeyAlgorithmTag, HashAlgorithmTag): PrivateScope, Public, Static, HideBySig
    GetSymmetricCipherName(SymmetricKeyAlgorithmTag): PrivateScope, Public, Static, HideBySig
    GetKeySize(SymmetricKeyAlgorithmTag): PrivateScope, Public, Static, HideBySig
    MakeKey(SymmetricKeyAlgorithmTag, Byte[]): PrivateScope, Public, Static, HideBySig
    MakeRandomKey(SymmetricKeyAlgorithmTag, SecureRandom): PrivateScope, Public, Static, HideBySig
    MakeKeyFromPassPhrase(SymmetricKeyAlgorithmTag, S2k, Char[]): PrivateScope, Public, Static, HideBySig
    WriteFileToLiteralData(Stream, Char, FileInfo): PrivateScope, Public, Static, HideBySig
    WriteFileToLiteralData(Stream, Char, FileInfo, Byte[]): PrivateScope, Public, Static, HideBySig
    GetDecoderStream(Stream): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.PgpV3SignatureGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag, Org.BouncyCastle.Bcpg.HashAlgorithmTag): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    InitSign(Int32, PgpPrivateKey): PrivateScope, Public, HideBySig
    InitSign(Int32, PgpPrivateKey, SecureRandom): PrivateScope, Public, HideBySig
    Update(Byte): PrivateScope, Public, HideBySig
    Update(Byte[]): PrivateScope, Public, HideBySig
    Update(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    GenerateOnePassVersion(Boolean): PrivateScope, Public, HideBySig
    Generate(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Bcpg.OpenPgp.WrappedGeneratorStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Utilities.FilterStream
    Void .ctor(Org.BouncyCastle.Bcpg.OpenPgp.IStreamGenerator, System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Close(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Security.EncryptionException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface Org.BouncyCastle.OpenSsl.IPasswordFinder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetPassword(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Security.PasswordException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.OpenSsl.PemException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Utilities.IO.Pem.PemReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.TextReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.IO.TextReader Reader 'get ' : 
  Methods:
    get_Reader(): PrivateScope, Public, HideBySig, SpecialName
    ReadPemObject(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.OpenSsl.PemReader: AutoLayout, AnsiClass, Class, Public
  :Org.BouncyCastle.Utilities.IO.Pem.PemReader
    Void .ctor(System.IO.TextReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.TextReader, Org.BouncyCastle.OpenSsl.IPasswordFinder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadObject(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.OpenSsl.PemUtilities: AutoLayout, AnsiClass, Class, Sealed
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Crypt(Boolean, Byte[], Char[], String, Byte[]): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Utilities.IO.Pem.PemWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.TextWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.IO.TextWriter Writer 'get ' : 
  Methods:
    get_Writer(): PrivateScope, Public, HideBySig, SpecialName
    GetOutputSize(PemObject): PrivateScope, Public, HideBySig
    WriteObject(PemObjectGenerator): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.OpenSsl.PemWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Utilities.IO.Pem.PemWriter
    Void .ctor(System.IO.TextWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteObject(Object): PrivateScope, Public, HideBySig
    WriteObject(Object, String, Char[], SecureRandom): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Pkcs.Pkcs12Entry: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Org.BouncyCastle.Asn1.Asn1Encodable Item [Org.BouncyCastle.Asn1.DerObjectIdentifier] 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Item [System.String] 'get ' : 
    System.Collections.IEnumerable BagAttributeKeys 'get ' : 
  Methods:
    GetBagAttribute(DerObjectIdentifier): PrivateScope, Public, HideBySig (Obsolete)
    GetBagAttribute(String): PrivateScope, Public, HideBySig (Obsolete)
    GetBagAttributeKeys(): PrivateScope, Public, HideBySig (Obsolete)
    get_Item(DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    get_BagAttributeKeys(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Pkcs.AsymmetricKeyEntry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Pkcs.Pkcs12Entry
    Void .ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter, System.Collections.Hashtable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter, System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Crypto.AsymmetricKeyParameter Key 'get ' : 
  Methods:
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Pkcs.EncryptedPrivateKeyInfoFactory: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    CreateEncryptedPrivateKeyInfo(DerObjectIdentifier, Char[], Byte[], Int32, AsymmetricKeyParameter): PrivateScope, Public, Static, HideBySig
    CreateEncryptedPrivateKeyInfo(String, Char[], Byte[], Int32, AsymmetricKeyParameter): PrivateScope, Public, Static, HideBySig
    CreateEncryptedPrivateKeyInfo(String, Char[], Byte[], Int32, PrivateKeyInfo): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Pkcs.Pkcs10CertificationRequest: AutoLayout, AnsiClass, Class, Public
  :Org.BouncyCastle.Asn1.Pkcs.CertificationRequest
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Org.BouncyCastle.Asn1.X509.X509Name, Org.BouncyCastle.Crypto.AsymmetricKeyParameter, Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Crypto.AsymmetricKeyParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetPublicKey(): PrivateScope, Public, HideBySig
    Verify(): PrivateScope, Public, HideBySig
    Verify(AsymmetricKeyParameter): PrivateScope, Public, HideBySig
    GetSignatureName(AlgorithmIdentifier): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Pkcs.Pkcs10CertificationRequestDelaySigned: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Pkcs.Pkcs10CertificationRequest
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Org.BouncyCastle.Asn1.X509.X509Name, Org.BouncyCastle.Crypto.AsymmetricKeyParameter, Org.BouncyCastle.Asn1.Asn1Set, Org.BouncyCastle.Crypto.AsymmetricKeyParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Org.BouncyCastle.Asn1.X509.X509Name, Org.BouncyCastle.Crypto.AsymmetricKeyParameter, Org.BouncyCastle.Asn1.Asn1Set): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetDataToSign(): PrivateScope, Public, HideBySig
    SignRequest(Byte[]): PrivateScope, Public, HideBySig
    SignRequest(DerBitString): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Pkcs.Pkcs12Store: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.DerObjectIdentifier, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Char[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.IEnumerable Aliases 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    Load(Stream, Char[]): PrivateScope, Public, HideBySig
    GetKey(String): PrivateScope, Public, HideBySig
    IsCertificateEntry(String): PrivateScope, Public, HideBySig
    IsKeyEntry(String): PrivateScope, Public, HideBySig
    get_Aliases(): PrivateScope, Public, HideBySig, SpecialName
    ContainsAlias(String): PrivateScope, Public, HideBySig
    GetCertificate(String): PrivateScope, Public, HideBySig
    GetCertificateAlias(X509Certificate): PrivateScope, Public, HideBySig
    GetCertificateChain(String): PrivateScope, Public, HideBySig
    SetCertificateEntry(String, X509CertificateEntry): PrivateScope, Public, HideBySig
    SetKeyEntry(String, AsymmetricKeyEntry, X509CertificateEntry[]): PrivateScope, Public, HideBySig
    DeleteEntry(String): PrivateScope, Public, HideBySig
    IsEntryOfType(String, Type): PrivateScope, Public, HideBySig
    Size(): PrivateScope, Public, HideBySig (Obsolete)
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    Save(Stream, Char[], SecureRandom): PrivateScope, Public, HideBySig
    CalculatePbeMac(DerObjectIdentifier, Byte[], Int32, Char[], Boolean, Byte[]): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Pkcs.Pkcs12Store+CertId: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] Id  'get ' : 
  Methods:
    get_Id(): PrivateScope, Assembly, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Pkcs.Pkcs12StoreBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Build(): PrivateScope, Public, HideBySig
    SetCertAlgorithm(DerObjectIdentifier): PrivateScope, Public, HideBySig
    SetKeyAlgorithm(DerObjectIdentifier): PrivateScope, Public, HideBySig
    SetUseDerEncoding(Boolean): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Pkcs.Pkcs12Utilities: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ConvertToDefiniteLength(Byte[]): PrivateScope, Public, Static, HideBySig
    ConvertToDefiniteLength(Byte[], Char[]): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Pkcs.PrivateKeyInfoFactory: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    CreatePrivateKeyInfo(AsymmetricKeyParameter): PrivateScope, Public, Static, HideBySig
    CreatePrivateKeyInfo(Char[], EncryptedPrivateKeyInfo): PrivateScope, Public, Static, HideBySig
    CreatePrivateKeyInfo(Char[], Boolean, EncryptedPrivateKeyInfo): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Pkcs.X509CertificateEntry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Pkcs.Pkcs12Entry
    Void .ctor(Org.BouncyCastle.X509.X509Certificate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.X509.X509Certificate, System.Collections.Hashtable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(Org.BouncyCastle.X509.X509Certificate, System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.X509.X509Certificate Certificate 'get ' : 
  Methods:
    get_Certificate(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Pkix.CertStatus: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Unrevoked = 11 : Public, Static, Literal, HasDefault
    Int32 Undetermined = 12 : Public, Static, Literal, HasDefault
  Properties:
    Org.BouncyCastle.Utilities.Date.DateTimeObject RevocationDate 'get set' : 
    Int32 Status 'get set' : 
  Methods:
    get_RevocationDate(): PrivateScope, Public, HideBySig, SpecialName
    set_RevocationDate(DateTimeObject): PrivateScope, Public, HideBySig, SpecialName
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    set_Status(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Pkix.PkixAttrCertChecker: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    GetSupportedExtensions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Check(IX509AttributeCertificate, PkixCertPath, PkixCertPath, ICollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Pkix.PkixAttrCertPathBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Build(PkixBuilderParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Pkix.PkixAttrCertPathValidator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Validate(PkixCertPath, PkixParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Pkix.PkixParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Utilities.Collections.ISet): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 PkixValidityModel = 0 : Public, Static, Literal, HasDefault
    Int32 ChainValidityModel = 1 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsRevocationEnabled 'get set' : 
    Boolean IsExplicitPolicyRequired 'get set' : 
    Boolean IsAnyPolicyInhibited 'get set' : 
    Boolean IsPolicyMappingInhibited 'get set' : 
    Boolean IsPolicyQualifiersRejected 'get set' : 
    Org.BouncyCastle.Utilities.Date.DateTimeObject Date 'get set' : 
    Boolean IsUseDeltasEnabled 'get set' : 
    Int32 ValidityModel 'get set' : 
    Boolean IsAdditionalLocationsEnabled 'get ' : 
  Methods:
    get_IsRevocationEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsRevocationEnabled(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsExplicitPolicyRequired(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsExplicitPolicyRequired(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsAnyPolicyInhibited(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsAnyPolicyInhibited(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPolicyMappingInhibited(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsPolicyMappingInhibited(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPolicyQualifiersRejected(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsPolicyQualifiersRejected(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Date(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Date(DateTimeObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetTrustAnchors(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTrustAnchors(ISet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTargetCertConstraints(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTargetCertConstraints(IX509Selector): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetInitialPolicies(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetInitialPolicies(ISet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCertPathCheckers(IList): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCertPathCheckers(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddCertPathChecker(PkixCertPathChecker): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsUseDeltasEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsUseDeltasEnabled(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ValidityModel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ValidityModel(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetStores(IList): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddStore(IX509Store): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddAdditionalStore(IX509Store): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAdditionalStores(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStores(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsAdditionalLocationsEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetAdditionalLocationsEnabled(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTargetConstraints(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTargetConstraints(IX509Selector): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTrustedACIssuers(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTrustedACIssuers(ISet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNecessaryACAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetNecessaryACAttributes(ISet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetProhibitedACAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetProhibitedACAttributes(ISet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAttrCertCheckers(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAttrCertCheckers(ISet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Pkix.PkixBuilderParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Pkix.PkixParameters
    Void .ctor(Org.BouncyCastle.Utilities.Collections.ISet, Org.BouncyCastle.X509.Store.IX509Selector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 MaxPathLength 'get set' : 
  Methods:
    GetInstance(PkixParameters): PrivateScope, Public, Static, HideBySig
    get_MaxPathLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MaxPathLength(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetExcludedCerts(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetExcludedCerts(ISet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Pkix.PkixCertPath: AutoLayout, AnsiClass, Class, Public
    Void .ctor(System.Collections.ICollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.IList certPathEncodings : Assembly, Static, InitOnly
  Properties:
    System.Collections.IEnumerable Encodings 'get ' : 
    System.Collections.IList Certificates 'get ' : 
  Methods:
    get_Encodings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    GetEncoded(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEncoded(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Certificates(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Org.BouncyCastle.Pkix.PkixCertPathBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Build(PkixBuilderParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Security.GeneralSecurityException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Pkix.PkixCertPathBuilderException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Security.GeneralSecurityException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Pkix.PkixCertPathValidatorResult: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Pkix.TrustAnchor, Org.BouncyCastle.Pkix.PkixPolicyNode, Org.BouncyCastle.Crypto.AsymmetricKeyParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Pkix.PkixPolicyNode PolicyTree 'get ' : 
    Org.BouncyCastle.Pkix.TrustAnchor TrustAnchor 'get ' : 
    Org.BouncyCastle.Crypto.AsymmetricKeyParameter SubjectPublicKey 'get ' : 
  Methods:
    get_PolicyTree(): PrivateScope, Public, HideBySig, SpecialName
    get_TrustAnchor(): PrivateScope, Public, HideBySig, SpecialName
    get_SubjectPublicKey(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Pkix.PkixCertPathBuilderResult: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Pkix.PkixCertPathValidatorResult
    Void .ctor(Org.BouncyCastle.Pkix.PkixCertPath, Org.BouncyCastle.Pkix.TrustAnchor, Org.BouncyCastle.Pkix.PkixPolicyNode, Org.BouncyCastle.Crypto.AsymmetricKeyParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Pkix.PkixCertPath CertPath 'get ' : 
  Methods:
    get_CertPath(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Pkix.PkixCertPathChecker: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    Init(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsForwardCheckingSupported(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSupportedExtensions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Check(X509Certificate, ICollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Pkix.PkixCertPathValidator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Validate(PkixCertPath, PkixParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Pkix.PkixCertPathValidatorException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Security.GeneralSecurityException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception, Org.BouncyCastle.Pkix.PkixCertPath, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Message 'get ' : 
    Org.BouncyCastle.Pkix.PkixCertPath CertPath 'get ' : 
    Int32 Index 'get ' : 
  Methods:
    get_Message(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CertPath(): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Pkix.PkixCertPathValidatorUtilities: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ANY_POLICY : Assembly, Static, InitOnly
    System.String CRL_NUMBER : Assembly, Static, InitOnly
    Int32 KEY_CERT_SIGN : Assembly, Static, InitOnly
    Int32 CRL_SIGN : Assembly, Static, InitOnly
    System.String[] crlReasons : Assembly, Static, InitOnly
  Methods:
    FindTrustAnchor(X509Certificate, ISet): PrivateScope, Assembly, Static, HideBySig
    AddAdditionalStoresFromAltNames(X509Certificate, PkixParameters): PrivateScope, Assembly, Static, HideBySig
    GetValidDate(PkixParameters): PrivateScope, Assembly, Static, HideBySig
    GetIssuerPrincipal(Object): PrivateScope, Assembly, Static, HideBySig
    IsSelfIssued(X509Certificate): PrivateScope, Assembly, Static, HideBySig
    GetAlgorithmIdentifier(AsymmetricKeyParameter): PrivateScope, Assembly, Static, HideBySig
    IsAnyPolicy(ISet): PrivateScope, Assembly, Static, HideBySig
    AddAdditionalStoreFromLocation(String, PkixParameters): PrivateScope, Assembly, Static, HideBySig
    GetQualifierSet(Asn1Sequence): PrivateScope, Assembly, Static, HideBySig
    RemovePolicyNode(PkixPolicyNode, IList[], PkixPolicyNode): PrivateScope, Assembly, Static, HideBySig
    PrepareNextCertB1(Int32, IList[], String, IDictionary, X509Certificate): PrivateScope, Assembly, Static, HideBySig
    PrepareNextCertB2(Int32, IList[], String, PkixPolicyNode): PrivateScope, Assembly, Static, HideBySig
    GetCertStatus(DateTime, X509Crl, Object, CertStatus): PrivateScope, Assembly, Static, HideBySig
    GetNextWorkingKey(IList, Int32): PrivateScope, Assembly, Static, HideBySig
    GetValidCertDateFromValidityModel(PkixParameters, PkixCertPath, Int32): PrivateScope, Assembly, Static, HideBySig
    FindCertificates(X509CertStoreSelector, IList): PrivateScope, Assembly, Static, HideBySig
    GetCrlIssuersFromDistributionPoint(DistributionPoint, ICollection, X509CrlStoreSelector, PkixParameters): PrivateScope, Assembly, Static, HideBySig
    GetCompleteCrls(DistributionPoint, Object, DateTime, PkixParameters): PrivateScope, Assembly, Static, HideBySig
    GetDeltaCrls(DateTime, PkixParameters, X509Crl): PrivateScope, Assembly, Static, HideBySig
    FindCertificates(X509AttrCertStoreSelector, IList): PrivateScope, Assembly, Static, HideBySig
    AddAdditionalStoresFromCrlDistributionPoint(CrlDistPoint, PkixParameters): PrivateScope, Assembly, Static, HideBySig
    ProcessCertD1i(Int32, IList[], DerObjectIdentifier, ISet): PrivateScope, Assembly, Static, HideBySig
    ProcessCertD1ii(Int32, IList[], DerObjectIdentifier, ISet): PrivateScope, Assembly, Static, HideBySig
    FindIssuerCerts(X509Certificate, PkixBuilderParameters): PrivateScope, Assembly, Static, HideBySig
    GetExtensionValue(IX509Extension, DerObjectIdentifier): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Pkix.PkixNameConstraintValidator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CheckPermittedDN(Asn1Sequence): PrivateScope, Public, HideBySig
    CheckExcludedDN(Asn1Sequence): PrivateScope, Public, HideBySig
    checkPermitted(GeneralName): PrivateScope, Public, HideBySig
    checkExcluded(GeneralName): PrivateScope, Public, HideBySig
    IntersectPermittedSubtree(Asn1Sequence): PrivateScope, Public, HideBySig
    IntersectEmptyPermittedSubtree(Int32): PrivateScope, Public, HideBySig
    AddExcludedSubtree(GeneralSubtree): PrivateScope, Public, HideBySig
    HashCode(): PrivateScope, Public, HideBySig (Obsolete)
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Pkix.PkixNameConstraintValidatorException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Pkix.PkixPolicyNode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.IList, Int32, Org.BouncyCastle.Utilities.Collections.ISet, Org.BouncyCastle.Pkix.PkixPolicyNode, Org.BouncyCastle.Utilities.Collections.ISet, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Depth 'get ' : 
    System.Collections.IEnumerable Children 'get ' : 
    Boolean IsCritical 'get set' : 
    Org.BouncyCastle.Utilities.Collections.ISet PolicyQualifiers 'get ' : 
    System.String ValidPolicy 'get ' : 
    Boolean HasChildren 'get ' : 
    Org.BouncyCastle.Utilities.Collections.ISet ExpectedPolicies 'get set' : 
    Org.BouncyCastle.Pkix.PkixPolicyNode Parent 'get set' : 
  Methods:
    get_Depth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Children(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsCritical(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsCritical(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PolicyQualifiers(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ValidPolicy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasChildren(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExpectedPolicies(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ExpectedPolicies(ISet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Parent(PkixPolicyNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddChild(PkixPolicyNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveChild(PkixPolicyNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Copy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Pkix.ReasonsMask: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Pkix.ReasonsMask AllReasons : Assembly, Static, InitOnly
  Properties:
    Boolean IsAllReasons 'get ' : 
    Org.BouncyCastle.Asn1.X509.ReasonFlags Reasons 'get ' : 
  Methods:
    AddReasons(ReasonsMask): PrivateScope, Assembly, HideBySig
    get_IsAllReasons(): PrivateScope, Assembly, HideBySig, SpecialName
    Intersect(ReasonsMask): PrivateScope, Assembly, HideBySig
    HasNewReasons(ReasonsMask): PrivateScope, Assembly, HideBySig
    get_Reasons(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Pkix.Rfc3280CertPathUtilities: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ANY_POLICY : Assembly, Static, InitOnly
    Int32 KEY_CERT_SIGN : Assembly, Static, InitOnly
    Int32 CRL_SIGN : Assembly, Static, InitOnly
    System.String[] CrlReasons : Assembly, Static, InitOnly
  Methods:
    ProcessCrlB2(DistributionPoint, Object, X509Crl): PrivateScope, Assembly, Static, HideBySig
    ProcessCertBC(PkixCertPath, Int32, PkixNameConstraintValidator): PrivateScope, Assembly, Static, HideBySig
    PrepareNextCertA(PkixCertPath, Int32): PrivateScope, Assembly, Static, HideBySig
    ProcessCertD(PkixCertPath, Int32, ISet, PkixPolicyNode, IList[], Int32): PrivateScope, Assembly, Static, HideBySig
    ProcessCrlB1(DistributionPoint, Object, X509Crl): PrivateScope, Assembly, Static, HideBySig
    ProcessCrlD(X509Crl, DistributionPoint): PrivateScope, Assembly, Static, HideBySig
    ProcessCrlF(X509Crl, Object, X509Certificate, AsymmetricKeyParameter, PkixParameters, IList): PrivateScope, Assembly, Static, HideBySig
    ProcessCrlG(X509Crl, ISet): PrivateScope, Assembly, Static, HideBySig
    ProcessCrlH(ISet, AsymmetricKeyParameter): PrivateScope, Assembly, Static, HideBySig
    PrepareCertB(PkixCertPath, Int32, IList[], PkixPolicyNode, Int32): PrivateScope, Assembly, Static, HideBySig
    ProcessCrlA1ii(DateTime, PkixParameters, X509Certificate, X509Crl): PrivateScope, Assembly, Static, HideBySig
    ProcessCrlA1i(DateTime, PkixParameters, X509Certificate, X509Crl): PrivateScope, Assembly, Static, HideBySig
    ProcessCertF(PkixCertPath, Int32, PkixPolicyNode, Int32): PrivateScope, Assembly, Static, HideBySig
    ProcessCertA(PkixCertPath, PkixParameters, Int32, AsymmetricKeyParameter, X509Name, X509Certificate): PrivateScope, Assembly, Static, HideBySig
    PrepareNextCertI1(PkixCertPath, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    PrepareNextCertI2(PkixCertPath, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    PrepareNextCertG(PkixCertPath, Int32, PkixNameConstraintValidator): PrivateScope, Assembly, Static, HideBySig
    PrepareNextCertJ(PkixCertPath, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    PrepareNextCertK(PkixCertPath, Int32): PrivateScope, Assembly, Static, HideBySig
    PrepareNextCertL(PkixCertPath, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    PrepareNextCertM(PkixCertPath, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    PrepareNextCertN(PkixCertPath, Int32): PrivateScope, Assembly, Static, HideBySig
    PrepareNextCertO(PkixCertPath, Int32, ISet, IList): PrivateScope, Assembly, Static, HideBySig
    PrepareNextCertH1(PkixCertPath, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    PrepareNextCertH2(PkixCertPath, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    PrepareNextCertH3(PkixCertPath, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    WrapupCertA(Int32, X509Certificate): PrivateScope, Assembly, Static, HideBySig
    WrapupCertB(PkixCertPath, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    WrapupCertF(PkixCertPath, Int32, IList, ISet): PrivateScope, Assembly, Static, HideBySig
    WrapupCertG(PkixCertPath, PkixParameters, ISet, Int32, IList[], PkixPolicyNode, ISet): PrivateScope, Assembly, Static, HideBySig
    ProcessCrlC(X509Crl, X509Crl, PkixParameters): PrivateScope, Assembly, Static, HideBySig
    ProcessCrlI(DateTime, X509Crl, Object, CertStatus, PkixParameters): PrivateScope, Assembly, Static, HideBySig
    ProcessCrlJ(DateTime, X509Crl, Object, CertStatus): PrivateScope, Assembly, Static, HideBySig
    ProcessCertE(PkixCertPath, Int32, PkixPolicyNode): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Pkix.Rfc3281CertPathUtilities: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ProcessAttrCert7(IX509AttributeCertificate, PkixCertPath, PkixCertPath, PkixParameters): PrivateScope, Assembly, Static, HideBySig
    CheckCrls(IX509AttributeCertificate, PkixParameters, X509Certificate, DateTime, IList): PrivateScope, Assembly, Static, HideBySig
    AdditionalChecks(IX509AttributeCertificate, PkixParameters): PrivateScope, Assembly, Static, HideBySig
    ProcessAttrCert5(IX509AttributeCertificate, PkixParameters): PrivateScope, Assembly, Static, HideBySig
    ProcessAttrCert4(X509Certificate, PkixParameters): PrivateScope, Assembly, Static, HideBySig
    ProcessAttrCert3(X509Certificate, PkixParameters): PrivateScope, Assembly, Static, HideBySig
    ProcessAttrCert2(PkixCertPath, PkixParameters): PrivateScope, Assembly, Static, HideBySig
    ProcessAttrCert1(IX509AttributeCertificate, PkixParameters): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Pkix.TrustAnchor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.X509.X509Certificate, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509Name, Org.BouncyCastle.Crypto.AsymmetricKeyParameter, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Org.BouncyCastle.Crypto.AsymmetricKeyParameter, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.X509.X509Certificate TrustedCert 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Name CA 'get ' : 
    System.String CAName 'get ' : 
    Org.BouncyCastle.Crypto.AsymmetricKeyParameter CAPublicKey 'get ' : 
    Byte[] GetNameConstraints 'get ' : 
  Methods:
    get_TrustedCert(): PrivateScope, Public, HideBySig, SpecialName
    get_CA(): PrivateScope, Public, HideBySig, SpecialName
    get_CAName(): PrivateScope, Public, HideBySig, SpecialName
    get_CAPublicKey(): PrivateScope, Public, HideBySig, SpecialName
    get_GetNameConstraints(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Security.AgreementUtilities: AutoLayout, AnsiClass, Class, Public, Sealed
  Methods:
    GetBasicAgreement(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    GetBasicAgreement(String): PrivateScope, Public, Static, HideBySig
    GetBasicAgreementWithKdf(DerObjectIdentifier, String): PrivateScope, Public, Static, HideBySig
    GetBasicAgreementWithKdf(String, String): PrivateScope, Public, Static, HideBySig
    GetAlgorithmName(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Security.Certificates.CertificateException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Security.GeneralSecurityException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Security.Certificates.CertificateEncodingException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Security.Certificates.CertificateException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Security.Certificates.CertificateExpiredException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Security.Certificates.CertificateException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Security.Certificates.CertificateNotYetValidException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Security.Certificates.CertificateException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Security.Certificates.CertificateParsingException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Security.Certificates.CertificateException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Security.Certificates.CrlException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Security.GeneralSecurityException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Security.CipherUtilities: AutoLayout, AnsiClass, Class, Public, Sealed
  Properties:
    System.Collections.ICollection Algorithms 'get ' : 
  Methods:
    GetObjectIdentifier(String): PrivateScope, Public, Static, HideBySig
    get_Algorithms(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetCipher(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    GetCipher(String): PrivateScope, Public, Static, HideBySig
    GetAlgorithmName(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Security.DigestUtilities: AutoLayout, AnsiClass, Class, Public, Sealed
  Properties:
    System.Collections.ICollection Algorithms 'get ' : 
  Methods:
    GetObjectIdentifier(String): PrivateScope, Public, Static, HideBySig
    get_Algorithms(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetDigest(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    GetDigest(String): PrivateScope, Public, Static, HideBySig
    GetAlgorithmName(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    CalculateDigest(String, Byte[]): PrivateScope, Public, Static, HideBySig
    DoFinal(IDigest): PrivateScope, Public, Static, HideBySig
    DoFinal(IDigest, Byte[]): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Security.DotNetUtilities: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    ToX509Certificate(X509CertificateStructure): PrivateScope, Public, Static, HideBySig
    ToX509Certificate(X509Certificate): PrivateScope, Public, Static, HideBySig
    FromX509Certificate(X509Certificate): PrivateScope, Public, Static, HideBySig
    GetDsaKeyPair(DSA): PrivateScope, Public, Static, HideBySig
    GetDsaKeyPair(DSAParameters): PrivateScope, Public, Static, HideBySig
    GetDsaPublicKey(DSA): PrivateScope, Public, Static, HideBySig
    GetDsaPublicKey(DSAParameters): PrivateScope, Public, Static, HideBySig
    GetRsaKeyPair(RSA): PrivateScope, Public, Static, HideBySig
    GetRsaKeyPair(RSAParameters): PrivateScope, Public, Static, HideBySig
    GetRsaPublicKey(RSA): PrivateScope, Public, Static, HideBySig
    GetRsaPublicKey(RSAParameters): PrivateScope, Public, Static, HideBySig
    GetKeyPair(AsymmetricAlgorithm): PrivateScope, Public, Static, HideBySig
    ToRSA(RsaKeyParameters): PrivateScope, Public, Static, HideBySig
    ToRSA(RsaPrivateCrtKeyParameters): PrivateScope, Public, Static, HideBySig
    ToRSAParameters(RsaKeyParameters): PrivateScope, Public, Static, HideBySig
    ToRSAParameters(RsaPrivateCrtKeyParameters): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Security.GeneratorUtilities: AutoLayout, AnsiClass, Class, Public, Sealed
  Methods:
    GetCanonicalKeyGeneratorAlgorithm(String): PrivateScope, Assembly, Static, HideBySig
    GetCanonicalKeyPairGeneratorAlgorithm(String): PrivateScope, Assembly, Static, HideBySig
    GetKeyGenerator(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    GetKeyGenerator(String): PrivateScope, Public, Static, HideBySig
    GetKeyPairGenerator(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    GetKeyPairGenerator(String): PrivateScope, Public, Static, HideBySig
    GetDefaultKeySize(DerObjectIdentifier): PrivateScope, Assembly, Static, HideBySig
    GetDefaultKeySize(String): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Security.KeyException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Security.GeneralSecurityException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Security.InvalidKeyException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Security.KeyException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Security.InvalidParameterException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Security.KeyException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Security.MacUtilities: AutoLayout, AnsiClass, Class, Public, Sealed
  Methods:
    GetMac(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    GetMac(String): PrivateScope, Public, Static, HideBySig
    GetAlgorithmName(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    DoFinal(IMac): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Security.NoSuchAlgorithmException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit (Obsolete)
  :Org.BouncyCastle.Security.GeneralSecurityException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Security.ParameterUtilities: AutoLayout, AnsiClass, Class, Public, Sealed
  Methods:
    GetCanonicalAlgorithmName(String): PrivateScope, Public, Static, HideBySig
    CreateKeyParameter(DerObjectIdentifier, Byte[]): PrivateScope, Public, Static, HideBySig
    CreateKeyParameter(String, Byte[]): PrivateScope, Public, Static, HideBySig
    CreateKeyParameter(DerObjectIdentifier, Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    CreateKeyParameter(String, Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    GetCipherParameters(DerObjectIdentifier, ICipherParameters, Asn1Object): PrivateScope, Public, Static, HideBySig
    GetCipherParameters(String, ICipherParameters, Asn1Object): PrivateScope, Public, Static, HideBySig
    GenerateParameters(DerObjectIdentifier, SecureRandom): PrivateScope, Public, Static, HideBySig
    GenerateParameters(String, SecureRandom): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Security.PbeUtilities: AutoLayout, AnsiClass, Class, Public, Sealed
  Properties:
    System.Collections.ICollection Algorithms 'get ' : 
  Methods:
    GetObjectIdentifier(String): PrivateScope, Public, Static, HideBySig
    get_Algorithms(): PrivateScope, Public, Static, HideBySig, SpecialName
    IsPkcs12(String): PrivateScope, Public, Static, HideBySig
    IsPkcs5Scheme1(String): PrivateScope, Public, Static, HideBySig
    IsPkcs5Scheme2(String): PrivateScope, Public, Static, HideBySig
    IsOpenSsl(String): PrivateScope, Public, Static, HideBySig
    IsPbeAlgorithm(String): PrivateScope, Public, Static, HideBySig
    GenerateAlgorithmParameters(DerObjectIdentifier, Byte[], Int32): PrivateScope, Public, Static, HideBySig
    GenerateAlgorithmParameters(String, Byte[], Int32): PrivateScope, Public, Static, HideBySig
    GenerateCipherParameters(DerObjectIdentifier, Char[], Asn1Encodable): PrivateScope, Public, Static, HideBySig
    GenerateCipherParameters(DerObjectIdentifier, Char[], Boolean, Asn1Encodable): PrivateScope, Public, Static, HideBySig
    GenerateCipherParameters(AlgorithmIdentifier, Char[]): PrivateScope, Public, Static, HideBySig
    GenerateCipherParameters(AlgorithmIdentifier, Char[], Boolean): PrivateScope, Public, Static, HideBySig
    GenerateCipherParameters(String, Char[], Asn1Encodable): PrivateScope, Public, Static, HideBySig
    GenerateCipherParameters(String, Char[], Boolean, Asn1Encodable): PrivateScope, Public, Static, HideBySig
    CreateEngine(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    CreateEngine(AlgorithmIdentifier): PrivateScope, Public, Static, HideBySig
    CreateEngine(String): PrivateScope, Public, Static, HideBySig
    GetEncodingName(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Security.PrivateKeyFactory: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    CreateKey(Byte[]): PrivateScope, Public, Static, HideBySig
    CreateKey(Stream): PrivateScope, Public, Static, HideBySig
    CreateKey(PrivateKeyInfo): PrivateScope, Public, Static, HideBySig
    DecryptKey(Char[], EncryptedPrivateKeyInfo): PrivateScope, Public, Static, HideBySig
    DecryptKey(Char[], Byte[]): PrivateScope, Public, Static, HideBySig
    DecryptKey(Char[], Stream): PrivateScope, Public, Static, HideBySig
    EncryptKey(DerObjectIdentifier, Char[], Byte[], Int32, AsymmetricKeyParameter): PrivateScope, Public, Static, HideBySig
    EncryptKey(String, Char[], Byte[], Int32, AsymmetricKeyParameter): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Security.PublicKeyFactory: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    CreateKey(Byte[]): PrivateScope, Public, Static, HideBySig
    CreateKey(Stream): PrivateScope, Public, Static, HideBySig
    CreateKey(SubjectPublicKeyInfo): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Security.SecureRandom: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Random
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Prng.IRandomGenerator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(String): PrivateScope, Public, Static, HideBySig
    GetSeed(Int32): PrivateScope, Public, Static, HideBySig
    GenerateSeed(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSeed(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSeed(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Next(): PrivateScope, Public, Virtual, HideBySig
    Next(Int32): PrivateScope, Public, Virtual, HideBySig
    Next(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    NextBytes(Byte[]): PrivateScope, Public, Virtual, HideBySig
    NextBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextDouble(): PrivateScope, Public, Virtual, HideBySig
    NextInt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextLong(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Security.SecurityUtilityException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Security.SignatureException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Security.GeneralSecurityException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Security.SignerUtilities: AutoLayout, AnsiClass, Class, Public, Sealed
  Fields:
    System.Collections.IDictionary algorithms : Assembly, Static, InitOnly
    System.Collections.IDictionary oids : Assembly, Static, InitOnly
  Properties:
    System.Collections.ICollection Algorithms 'get ' : 
  Methods:
    GetObjectIdentifier(String): PrivateScope, Public, Static, HideBySig
    get_Algorithms(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetDefaultX509Parameters(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    GetDefaultX509Parameters(String): PrivateScope, Public, Static, HideBySig
    GetSigner(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    GetSigner(String): PrivateScope, Public, Static, HideBySig
    GetEncodingName(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Security.WrapperUtilities: AutoLayout, AnsiClass, Class, Public, Sealed
  Methods:
    GetWrapper(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
    GetWrapper(String): PrivateScope, Public, Static, HideBySig
    GetAlgorithmName(DerObjectIdentifier): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Tsp.GenTimeAccuracy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Tsp.Accuracy): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Seconds 'get ' : 
    Int32 Millis 'get ' : 
    Int32 Micros 'get ' : 
  Methods:
    get_Seconds(): PrivateScope, Public, HideBySig, SpecialName
    get_Millis(): PrivateScope, Public, HideBySig, SpecialName
    get_Micros(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Tsp.TimeStampRequest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.X509.X509ExtensionBase
    Void .ctor(Org.BouncyCastle.Asn1.Tsp.TimeStampReq): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Version 'get ' : 
    System.String MessageImprintAlgOid 'get ' : 
    System.String ReqPolicy 'get ' : 
    Org.BouncyCastle.Math.BigInteger Nonce 'get ' : 
    Boolean CertReq 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions Extensions 'get ' : 
    Boolean HasExtensions 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_MessageImprintAlgOid(): PrivateScope, Public, HideBySig, SpecialName
    GetMessageImprintDigest(): PrivateScope, Public, HideBySig
    get_ReqPolicy(): PrivateScope, Public, HideBySig, SpecialName
    get_Nonce(): PrivateScope, Public, HideBySig, SpecialName
    get_CertReq(): PrivateScope, Public, HideBySig, SpecialName
    Validate(IList, IList, IList): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
    get_Extensions(): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasExtensions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetExtension(DerObjectIdentifier): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetExtensionOids(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Tsp.TimeStampRequestGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetReqPolicy(String): PrivateScope, Public, HideBySig
    SetCertReq(Boolean): PrivateScope, Public, HideBySig
    AddExtension(String, Boolean, Asn1Encodable): PrivateScope, Public, HideBySig (Obsolete)
    AddExtension(String, Boolean, Byte[]): PrivateScope, Public, HideBySig (Obsolete)
    AddExtension(DerObjectIdentifier, Boolean, Asn1Encodable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddExtension(DerObjectIdentifier, Boolean, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Generate(String, Byte[]): PrivateScope, Public, HideBySig
    Generate(String, Byte[], BigInteger): PrivateScope, Public, HideBySig
    Generate(DerObjectIdentifier, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Generate(DerObjectIdentifier, Byte[], BigInteger): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Tsp.TimeStampResponse: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Tsp.TimeStampResp): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Status 'get ' : 
    Org.BouncyCastle.Tsp.TimeStampToken TimeStampToken 'get ' : 
  Methods:
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    GetStatusString(): PrivateScope, Public, HideBySig
    GetFailInfo(): PrivateScope, Public, HideBySig
    get_TimeStampToken(): PrivateScope, Public, HideBySig, SpecialName
    Validate(TimeStampRequest): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Tsp.TimeStampResponseGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Tsp.TimeStampTokenGenerator, System.Collections.IList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Tsp.TimeStampTokenGenerator, System.Collections.IList, System.Collections.IList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Tsp.TimeStampTokenGenerator, System.Collections.IList, System.Collections.IList, System.Collections.IList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Generate(TimeStampRequest, BigInteger, DateTime): PrivateScope, Public, HideBySig
    Generate(TimeStampRequest, BigInteger, DateTimeObject): PrivateScope, Public, HideBySig
    GenerateFailResponse(PkiStatus, Int32, String): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Tsp.TimeStampToken: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Cms.ContentInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Cms.CmsSignedData): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Tsp.TimeStampTokenInfo TimeStampInfo 'get ' : 
    Org.BouncyCastle.Cms.SignerID SignerID 'get ' : 
    Org.BouncyCastle.Asn1.Cms.AttributeTable SignedAttributes 'get ' : 
    Org.BouncyCastle.Asn1.Cms.AttributeTable UnsignedAttributes 'get ' : 
  Methods:
    get_TimeStampInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_SignerID(): PrivateScope, Public, HideBySig, SpecialName
    get_SignedAttributes(): PrivateScope, Public, HideBySig, SpecialName
    get_UnsignedAttributes(): PrivateScope, Public, HideBySig, SpecialName
    GetCertificates(String): PrivateScope, Public, HideBySig
    GetCrls(String): PrivateScope, Public, HideBySig
    GetAttributeCertificates(String): PrivateScope, Public, HideBySig
    Validate(X509Certificate): PrivateScope, Public, HideBySig
    ToCmsSignedData(): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Tsp.TimeStampTokenGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter, Org.BouncyCastle.X509.X509Certificate, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter, Org.BouncyCastle.X509.X509Certificate, System.String, System.String, Org.BouncyCastle.Asn1.Cms.AttributeTable, Org.BouncyCastle.Asn1.Cms.AttributeTable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetCertificates(IX509Store): PrivateScope, Public, HideBySig
    SetCrls(IX509Store): PrivateScope, Public, HideBySig
    SetAccuracySeconds(Int32): PrivateScope, Public, HideBySig
    SetAccuracyMillis(Int32): PrivateScope, Public, HideBySig
    SetAccuracyMicros(Int32): PrivateScope, Public, HideBySig
    SetOrdering(Boolean): PrivateScope, Public, HideBySig
    SetTsa(GeneralName): PrivateScope, Public, HideBySig
    Generate(TimeStampRequest, BigInteger, DateTime): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Tsp.TimeStampTokenInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Tsp.TstInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsOrdered 'get ' : 
    Org.BouncyCastle.Asn1.Tsp.Accuracy Accuracy 'get ' : 
    System.DateTime GenTime 'get ' : 
    Org.BouncyCastle.Tsp.GenTimeAccuracy GenTimeAccuracy 'get ' : 
    System.String Policy 'get ' : 
    Org.BouncyCastle.Math.BigInteger SerialNumber 'get ' : 
    Org.BouncyCastle.Asn1.X509.GeneralName Tsa 'get ' : 
    Org.BouncyCastle.Math.BigInteger Nonce 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier HashAlgorithm 'get ' : 
    System.String MessageImprintAlgOid 'get ' : 
    Org.BouncyCastle.Asn1.Tsp.TstInfo TstInfo 'get ' : 
  Methods:
    get_IsOrdered(): PrivateScope, Public, HideBySig, SpecialName
    get_Accuracy(): PrivateScope, Public, HideBySig, SpecialName
    get_GenTime(): PrivateScope, Public, HideBySig, SpecialName
    get_GenTimeAccuracy(): PrivateScope, Public, HideBySig, SpecialName
    get_Policy(): PrivateScope, Public, HideBySig, SpecialName
    get_SerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_Tsa(): PrivateScope, Public, HideBySig, SpecialName
    get_Nonce(): PrivateScope, Public, HideBySig, SpecialName
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_MessageImprintAlgOid(): PrivateScope, Public, HideBySig, SpecialName
    GetMessageImprintDigest(): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
    get_TstInfo(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Tsp.TspAlgorithms: AutoLayout, AnsiClass, Class, Public, Abstract
  Fields:
    System.String MD5 : Public, Static, InitOnly
    System.String Sha1 : Public, Static, InitOnly
    System.String Sha224 : Public, Static, InitOnly
    System.String Sha256 : Public, Static, InitOnly
    System.String Sha384 : Public, Static, InitOnly
    System.String Sha512 : Public, Static, InitOnly
    System.String RipeMD128 : Public, Static, InitOnly
    System.String RipeMD160 : Public, Static, InitOnly
    System.String RipeMD256 : Public, Static, InitOnly
    System.String Gost3411 : Public, Static, InitOnly
    System.Collections.IList Allowed : Public, Static, InitOnly
Class Org.BouncyCastle.Tsp.TspException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Tsp.TspUtil: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetSignatureTimestamps(SignerInformation): PrivateScope, Public, Static, HideBySig
    ValidateCertificate(X509Certificate): PrivateScope, Public, Static, HideBySig
    GetDigestAlgName(String): PrivateScope, Assembly, Static, HideBySig
    GetDigestLength(String): PrivateScope, Assembly, Static, HideBySig
    CreateDigestInstance(String): PrivateScope, Assembly, Static, HideBySig
    GetCriticalExtensionOids(X509Extensions): PrivateScope, Assembly, Static, HideBySig
    GetNonCriticalExtensionOids(X509Extensions): PrivateScope, Assembly, Static, HideBySig
    GetExtensionOids(X509Extensions): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Tsp.TspValidationException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.Tsp.TspException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 FailureCode 'get ' : 
  Methods:
    get_FailureCode(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Utilities.Arrays: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    AreEqual(Boolean[], Boolean[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Char[], Char[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
    AreSame(Byte[], Byte[]): PrivateScope, Public, Static, HideBySig (Obsolete)
    ConstantTimeAreEqual(Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Int32[], Int32[]): PrivateScope, Public, Static, HideBySig
    ToString(Object[]): PrivateScope, Public, Static, HideBySig
    GetHashCode(Byte[]): PrivateScope, Public, Static, HideBySig
    Clone(Byte[]): PrivateScope, Public, Static, HideBySig
    Clone(Int32[]): PrivateScope, Public, Static, HideBySig
    Fill(Byte[], Byte): PrivateScope, Public, Static, HideBySig
    Copy(Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Utilities.BigIntegers: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    AsUnsignedByteArray(BigInteger): PrivateScope, Public, Static, HideBySig
    AsUnsignedByteArray(Int32, BigInteger): PrivateScope, Public, Static, HideBySig
    CreateRandomInRange(BigInteger, BigInteger, SecureRandom): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Apache.Bzip2.BZip2Constants: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32[] rNums : Public, Static
    Int32 baseBlockSize = 100000 : Public, Static, Literal, HasDefault
    Int32 MAX_ALPHA_SIZE = 258 : Public, Static, Literal, HasDefault
    Int32 MAX_CODE_LEN = 23 : Public, Static, Literal, HasDefault
    Int32 RUNA = 0 : Public, Static, Literal, HasDefault
    Int32 RUNB = 1 : Public, Static, Literal, HasDefault
    Int32 N_GROUPS = 6 : Public, Static, Literal, HasDefault
    Int32 G_SIZE = 50 : Public, Static, Literal, HasDefault
    Int32 N_ITERS = 4 : Public, Static, Literal, HasDefault
    Int32 MAX_SELECTORS = 18002 : Public, Static, Literal, HasDefault
    Int32 NUM_OVERSHOOT_BYTES = 20 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Apache.Bzip2.CBZip2InputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    InitIntArray(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    InitCharArray(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Org.BouncyCastle.Apache.Bzip2.CRC: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 globalCrc : Assembly
    Int32[] crc32Table : Public, Static
  Methods:
    InitialiseCRC(): PrivateScope, Assembly, HideBySig
    GetFinalCRC(): PrivateScope, Assembly, HideBySig
    GetGlobalCRC(): PrivateScope, Assembly, HideBySig
    SetGlobalCRC(Int32): PrivateScope, Assembly, HideBySig
    UpdateCRC(Int32): PrivateScope, Assembly, HideBySig
Class Org.BouncyCastle.Utilities.Collections.CollectionUtilities: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    AddRange(IList, ICollection): PrivateScope, Public, Static, HideBySig
    CheckElementsAreOfType(IEnumerable, Type): PrivateScope, Public, Static, HideBySig
    ReadOnly(IDictionary): PrivateScope, Public, Static, HideBySig
    ReadOnly(IList): PrivateScope, Public, Static, HideBySig
    ReadOnly(ISet): PrivateScope, Public, Static, HideBySig
    ToString(IEnumerable): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Utilities.Collections.EmptyEnumerable: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.Collections.IEnumerable
  Fields:
    System.Collections.IEnumerable Instance : Public, Static, InitOnly
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Utilities.Collections.EmptyEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.Collections.IEnumerator
  Fields:
    System.Collections.IEnumerator Instance : Public, Static, InitOnly
  Properties:
    System.Object Current 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Org.BouncyCastle.Utilities.Collections.EnumerableProxy: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerable
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Utilities.Collections.ISet: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Boolean IsEmpty 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
  Methods:
    Add(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddAll(IEnumerable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Contains(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Remove(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RemoveAll(IEnumerable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Utilities.Collections.HashSet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Utilities.Collections.ISet
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Boolean IsEmpty 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    Add(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddAll(IEnumerable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Array, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAll(IEnumerable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Org.BouncyCastle.Utilities.Date.DateTimeObject: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.DateTime Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Utilities.Date.DateTimeUtilities: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Fields:
    System.DateTime UnixEpoch : Public, Static, InitOnly
  Methods:
    DateTimeToUnixMs(DateTime): PrivateScope, Public, Static, HideBySig
    UnixMsToDateTime(Int64): PrivateScope, Public, Static, HideBySig
    CurrentUnixMs(): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Utilities.Encoders.Base64: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    ToBase64String(Byte[]): PrivateScope, Public, Static, HideBySig
    ToBase64String(Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Encode(Byte[]): PrivateScope, Public, Static, HideBySig
    Encode(Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Encode(Byte[], Stream): PrivateScope, Public, Static, HideBySig
    Encode(Byte[], Int32, Int32, Stream): PrivateScope, Public, Static, HideBySig
    Decode(Byte[]): PrivateScope, Public, Static, HideBySig
    Decode(String): PrivateScope, Public, Static, HideBySig
    Decode(String, Stream): PrivateScope, Public, Static, HideBySig
Interface Org.BouncyCastle.Utilities.Encoders.IEncoder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Encode(Byte[], Int32, Int32, Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Decode(Byte[], Int32, Int32, Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DecodeString(String, Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Utilities.Encoders.Base64Encoder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Utilities.Encoders.IEncoder
  Methods:
    Encode(Byte[], Int32, Int32, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Decode(Byte[], Int32, Int32, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DecodeString(String, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Utilities.Encoders.BufferedDecoder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Utilities.Encoders.ITranslator, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] buffer : Assembly
    Int32 bufOff : Assembly
    Org.BouncyCastle.Utilities.Encoders.ITranslator translator : Assembly
  Methods:
    ProcessByte(Byte, Byte[], Int32): PrivateScope, Public, HideBySig
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Utilities.Encoders.BufferedEncoder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Utilities.Encoders.ITranslator, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] Buffer : Assembly
    Int32 bufOff : Assembly
    Org.BouncyCastle.Utilities.Encoders.ITranslator translator : Assembly
  Methods:
    ProcessByte(Byte, Byte[], Int32): PrivateScope, Public, HideBySig
    ProcessBytes(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.Utilities.Encoders.Hex: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    ToHexString(Byte[]): PrivateScope, Public, Static, HideBySig
    ToHexString(Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Encode(Byte[]): PrivateScope, Public, Static, HideBySig
    Encode(Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Encode(Byte[], Stream): PrivateScope, Public, Static, HideBySig
    Encode(Byte[], Int32, Int32, Stream): PrivateScope, Public, Static, HideBySig
    Decode(Byte[]): PrivateScope, Public, Static, HideBySig
    Decode(String): PrivateScope, Public, Static, HideBySig
    Decode(String, Stream): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Utilities.Encoders.HexEncoder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Utilities.Encoders.IEncoder
  Methods:
    Encode(Byte[], Int32, Int32, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Decode(Byte[], Int32, Int32, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DecodeString(String, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Utilities.Encoders.ITranslator: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetEncodedBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Encode(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDecodedBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Decode(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Utilities.Encoders.HexTranslator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Utilities.Encoders.ITranslator
  Methods:
    GetEncodedBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Encode(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDecodedBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Decode(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Utilities.Encoders.UrlBase64: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Byte[]): PrivateScope, Public, Static, HideBySig
    Encode(Byte[], Stream): PrivateScope, Public, Static, HideBySig
    Decode(Byte[]): PrivateScope, Public, Static, HideBySig
    Decode(Byte[], Stream): PrivateScope, Public, Static, HideBySig
    Decode(String): PrivateScope, Public, Static, HideBySig
    Decode(String, Stream): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Utilities.Encoders.UrlBase64Encoder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Utilities.Encoders.Base64Encoder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Utilities.IO.PushbackStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Utilities.FilterStream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Unread(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Utilities.IO.StreamOverflowException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Utilities.IO.Streams: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    Drain(Stream): PrivateScope, Public, Static, HideBySig
    ReadAll(Stream): PrivateScope, Public, Static, HideBySig
    ReadAllLimited(Stream, Int32): PrivateScope, Public, Static, HideBySig
    ReadFully(Stream, Byte[]): PrivateScope, Public, Static, HideBySig
    ReadFully(Stream, Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    PipeAll(Stream, Stream): PrivateScope, Public, Static, HideBySig
    PipeAllLimited(Stream, Int64, Stream): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Utilities.Net.IPAddress: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsValid(String): PrivateScope, Public, Static, HideBySig
    IsValidWithNetMask(String): PrivateScope, Public, Static, HideBySig
    IsValidIPv4(String): PrivateScope, Public, Static, HideBySig
    IsValidIPv4WithNetmask(String): PrivateScope, Public, Static, HideBySig
    IsValidIPv6WithNetmask(String): PrivateScope, Public, Static, HideBySig
    IsValidIPv6(String): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Utilities.Platform: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Fields:
    System.String NewLine : Assembly, Static, InitOnly
  Methods:
    CompareIgnoreCase(String, String): PrivateScope, Assembly, Static, HideBySig
    GetEnvironmentVariable(String): PrivateScope, Assembly, Static, HideBySig
    CreateNotImplementedException(String): PrivateScope, Assembly, Static, HideBySig
    CreateArrayList(): PrivateScope, Assembly, Static, HideBySig
    CreateArrayList(Int32): PrivateScope, Assembly, Static, HideBySig
    CreateArrayList(ICollection): PrivateScope, Assembly, Static, HideBySig
    CreateArrayList(IEnumerable): PrivateScope, Assembly, Static, HideBySig
    CreateHashtable(): PrivateScope, Assembly, Static, HideBySig
    CreateHashtable(Int32): PrivateScope, Assembly, Static, HideBySig
    CreateHashtable(IDictionary): PrivateScope, Assembly, Static, HideBySig
    ToLowerInvariant(String): PrivateScope, Assembly, Static, HideBySig
    ToUpperInvariant(String): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Utilities.Strings: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    IsOneOf(String, String[]): PrivateScope, Assembly, Static, HideBySig
    FromByteArray(Byte[]): PrivateScope, Public, Static, HideBySig
    ToByteArray(Char[]): PrivateScope, Public, Static, HideBySig
    ToByteArray(String): PrivateScope, Public, Static, HideBySig
    FromAsciiByteArray(Byte[]): PrivateScope, Public, Static, HideBySig
    ToAsciiByteArray(Char[]): PrivateScope, Public, Static, HideBySig
    ToAsciiByteArray(String): PrivateScope, Public, Static, HideBySig
    FromUtf8ByteArray(Byte[]): PrivateScope, Public, Static, HideBySig
    ToUtf8ByteArray(Char[]): PrivateScope, Public, Static, HideBySig
    ToUtf8ByteArray(String): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Utilities.Zlib.Adler32: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    adler32(Int64, Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
Class Org.BouncyCastle.Utilities.Zlib.Deflate: AutoLayout, AnsiClass, Class, Public, Sealed
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Utilities.Zlib.ZStream strm : Assembly
    Int32 status : Assembly
    Byte[] pending_buf : Assembly
    Int32 pending_buf_size : Assembly
    Int32 pending_out : Assembly
    Int32 pending : Assembly
    Int32 noheader : Assembly
    Byte data_type : Assembly
    Byte method : Assembly
    Int32 last_flush : Assembly
    Int32 w_size : Assembly
    Int32 w_bits : Assembly
    Int32 w_mask : Assembly
    Byte[] window : Assembly
    Int32 window_size : Assembly
    Int16[] prev : Assembly
    Int16[] head : Assembly
    Int32 ins_h : Assembly
    Int32 hash_size : Assembly
    Int32 hash_bits : Assembly
    Int32 hash_mask : Assembly
    Int32 hash_shift : Assembly
    Int32 block_start : Assembly
    Int32 match_length : Assembly
    Int32 prev_match : Assembly
    Int32 match_available : Assembly
    Int32 strstart : Assembly
    Int32 match_start : Assembly
    Int32 lookahead : Assembly
    Int32 prev_length : Assembly
    Int32 max_chain_length : Assembly
    Int32 max_lazy_match : Assembly
    Int32 level : Assembly
    Int32 strategy : Assembly
    Int32 good_match : Assembly
    Int32 nice_match : Assembly
    Int16[] dyn_ltree : Assembly
    Int16[] dyn_dtree : Assembly
    Int16[] bl_tree : Assembly
    Org.BouncyCastle.Utilities.Zlib.Tree l_desc : Assembly
    Org.BouncyCastle.Utilities.Zlib.Tree d_desc : Assembly
    Org.BouncyCastle.Utilities.Zlib.Tree bl_desc : Assembly
    Int16[] bl_count : Assembly
    Int32[] heap : Assembly
    Int32 heap_len : Assembly
    Int32 heap_max : Assembly
    Byte[] depth : Assembly
    Int32 l_buf : Assembly
    Int32 lit_bufsize : Assembly
    Int32 last_lit : Assembly
    Int32 d_buf : Assembly
    Int32 opt_len : Assembly
    Int32 static_len : Assembly
    Int32 matches : Assembly
    Int32 last_eob_len : Assembly
    UInt32 bi_buf : Assembly
    Int32 bi_valid : Assembly
  Methods:
    lm_init(): PrivateScope, Assembly, HideBySig
    tr_init(): PrivateScope, Assembly, HideBySig
    init_block(): PrivateScope, Assembly, HideBySig
    pqdownheap(Int16[], Int32): PrivateScope, Assembly, HideBySig
    smaller(Int16[], Int32, Int32, Byte[]): PrivateScope, Assembly, Static, HideBySig
    scan_tree(Int16[], Int32): PrivateScope, Assembly, HideBySig
    build_bl_tree(): PrivateScope, Assembly, HideBySig
    send_all_trees(Int32, Int32, Int32): PrivateScope, Assembly, HideBySig
    send_tree(Int16[], Int32): PrivateScope, Assembly, HideBySig
    put_byte(Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    put_byte(Byte): PrivateScope, Assembly, HideBySig
    put_short(Int32): PrivateScope, Assembly, HideBySig
    putShortMSB(Int32): PrivateScope, Assembly, HideBySig
    send_code(Int32, Int16[]): PrivateScope, Assembly, HideBySig
    send_bits(Int32, Int32): PrivateScope, Assembly, HideBySig
    _tr_align(): PrivateScope, Assembly, HideBySig
    _tr_tally(Int32, Int32): PrivateScope, Assembly, HideBySig
    compress_block(Int16[], Int16[]): PrivateScope, Assembly, HideBySig
    set_data_type(): PrivateScope, Assembly, HideBySig
    bi_flush(): PrivateScope, Assembly, HideBySig
    bi_windup(): PrivateScope, Assembly, HideBySig
    copy_block(Int32, Int32, Boolean): PrivateScope, Assembly, HideBySig
    flush_block_only(Boolean): PrivateScope, Assembly, HideBySig
    deflate_stored(Int32): PrivateScope, Assembly, HideBySig
    _tr_stored_block(Int32, Int32, Boolean): PrivateScope, Assembly, HideBySig
    _tr_flush_block(Int32, Int32, Boolean): PrivateScope, Assembly, HideBySig
    fill_window(): PrivateScope, Assembly, HideBySig
    deflate_fast(Int32): PrivateScope, Assembly, HideBySig
    deflate_slow(Int32): PrivateScope, Assembly, HideBySig
    longest_match(Int32): PrivateScope, Assembly, HideBySig
    deflateInit(ZStream, Int32, Int32): PrivateScope, Assembly, HideBySig
    deflateInit(ZStream, Int32): PrivateScope, Assembly, HideBySig
    deflateInit2(ZStream, Int32, Int32, Int32, Int32, Int32): PrivateScope, Assembly, HideBySig
    deflateReset(ZStream): PrivateScope, Assembly, HideBySig
    deflateEnd(): PrivateScope, Assembly, HideBySig
    deflateParams(ZStream, Int32, Int32): PrivateScope, Assembly, HideBySig
    deflateSetDictionary(ZStream, Byte[], Int32): PrivateScope, Assembly, HideBySig
    deflate(ZStream, Int32): PrivateScope, Assembly, HideBySig
Class Org.BouncyCastle.Utilities.Zlib.Deflate+Config: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 good_length : Assembly
    Int32 max_lazy : Assembly
    Int32 nice_length : Assembly
    Int32 max_chain : Assembly
    Int32 func : Assembly
Class Org.BouncyCastle.Utilities.Zlib.InfBlocks: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Utilities.Zlib.ZStream, System.Object, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 mode : Assembly
    Int32 left : Assembly
    Int32 table : Assembly
    Int32 index : Assembly
    Int32[] blens : Assembly
    Int32[] bb : Assembly
    Int32[] tb : Assembly
    Org.BouncyCastle.Utilities.Zlib.InfCodes codes : Assembly
    Int32 bitk : Assembly
    Int32 bitb : Assembly
    Int32[] hufts : Assembly
    Byte[] window : Assembly
    Int32 end : Assembly
    Int32 read : Assembly
    Int32 write : Assembly
    System.Object checkfn : Assembly
    Int64 check : Assembly
    Org.BouncyCastle.Utilities.Zlib.InfTree inftree : Assembly
  Methods:
    reset(ZStream, Int64[]): PrivateScope, Assembly, HideBySig
    proc(ZStream, Int32): PrivateScope, Assembly, HideBySig
    free(ZStream): PrivateScope, Assembly, HideBySig
    set_dictionary(Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    sync_point(): PrivateScope, Assembly, HideBySig
    inflate_flush(ZStream, Int32): PrivateScope, Assembly, HideBySig
Class Org.BouncyCastle.Utilities.Zlib.InfCodes: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    init(Int32, Int32, Int32[], Int32, Int32[], Int32, ZStream): PrivateScope, Assembly, HideBySig
    proc(InfBlocks, ZStream, Int32): PrivateScope, Assembly, HideBySig
    free(ZStream): PrivateScope, Assembly, HideBySig
    inflate_fast(Int32, Int32, Int32[], Int32, Int32[], Int32, InfBlocks, ZStream): PrivateScope, Assembly, HideBySig
Class Org.BouncyCastle.Utilities.Zlib.Inflate: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 mode : Assembly
    Int32 method : Assembly
    Int64[] was : Assembly
    Int64 need : Assembly
    Int32 marker : Assembly
    Int32 nowrap : Assembly
    Int32 wbits : Assembly
    Org.BouncyCastle.Utilities.Zlib.InfBlocks blocks : Assembly
    Int32 Z_NO_FLUSH = 0 : Assembly, Static, Literal, HasDefault
    Int32 Z_PARTIAL_FLUSH = 1 : Assembly, Static, Literal, HasDefault
    Int32 Z_SYNC_FLUSH = 2 : Assembly, Static, Literal, HasDefault
    Int32 Z_FULL_FLUSH = 3 : Assembly, Static, Literal, HasDefault
    Int32 Z_FINISH = 4 : Assembly, Static, Literal, HasDefault
  Methods:
    inflateReset(ZStream): PrivateScope, Assembly, HideBySig
    inflateEnd(ZStream): PrivateScope, Assembly, HideBySig
    inflateInit(ZStream, Int32): PrivateScope, Assembly, HideBySig
    inflate(ZStream, Int32): PrivateScope, Assembly, HideBySig
    inflateSetDictionary(ZStream, Byte[], Int32): PrivateScope, Assembly, HideBySig
    inflateSync(ZStream): PrivateScope, Assembly, HideBySig
    inflateSyncPoint(ZStream): PrivateScope, Assembly, HideBySig
Class Org.BouncyCastle.Utilities.Zlib.InfTree: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    inflate_trees_bits(Int32[], Int32[], Int32[], Int32[], ZStream): PrivateScope, Assembly, HideBySig
    inflate_trees_dynamic(Int32, Int32, Int32[], Int32[], Int32[], Int32[], Int32[], Int32[], ZStream): PrivateScope, Assembly, HideBySig
    inflate_trees_fixed(Int32[], Int32[], Int32[][], Int32[][], ZStream): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Utilities.Zlib.JZlib: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Z_NO_COMPRESSION = 0 : Public, Static, Literal, HasDefault
    Int32 Z_BEST_SPEED = 1 : Public, Static, Literal, HasDefault
    Int32 Z_BEST_COMPRESSION = 9 : Public, Static, Literal, HasDefault
    Int32 Z_DEFAULT_COMPRESSION = -1 : Public, Static, Literal, HasDefault
    Int32 Z_FILTERED = 1 : Public, Static, Literal, HasDefault
    Int32 Z_HUFFMAN_ONLY = 2 : Public, Static, Literal, HasDefault
    Int32 Z_DEFAULT_STRATEGY = 0 : Public, Static, Literal, HasDefault
    Int32 Z_NO_FLUSH = 0 : Public, Static, Literal, HasDefault
    Int32 Z_PARTIAL_FLUSH = 1 : Public, Static, Literal, HasDefault
    Int32 Z_SYNC_FLUSH = 2 : Public, Static, Literal, HasDefault
    Int32 Z_FULL_FLUSH = 3 : Public, Static, Literal, HasDefault
    Int32 Z_FINISH = 4 : Public, Static, Literal, HasDefault
    Int32 Z_OK = 0 : Public, Static, Literal, HasDefault
    Int32 Z_STREAM_END = 1 : Public, Static, Literal, HasDefault
    Int32 Z_NEED_DICT = 2 : Public, Static, Literal, HasDefault
    Int32 Z_ERRNO = -1 : Public, Static, Literal, HasDefault
    Int32 Z_STREAM_ERROR = -2 : Public, Static, Literal, HasDefault
    Int32 Z_DATA_ERROR = -3 : Public, Static, Literal, HasDefault
    Int32 Z_MEM_ERROR = -4 : Public, Static, Literal, HasDefault
    Int32 Z_BUF_ERROR = -5 : Public, Static, Literal, HasDefault
    Int32 Z_VERSION_ERROR = -6 : Public, Static, Literal, HasDefault
  Methods:
    version(): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Utilities.Zlib.StaticTree: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Int16[], Int32[], Int32, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int16[] static_tree : Assembly
    Int32[] extra_bits : Assembly
    Int32 extra_base : Assembly
    Int32 elems : Assembly
    Int32 max_length : Assembly
    Int16[] static_ltree : Assembly, Static, InitOnly
    Int16[] static_dtree : Assembly, Static, InitOnly
    Org.BouncyCastle.Utilities.Zlib.StaticTree static_l_desc : Assembly, Static, InitOnly
    Org.BouncyCastle.Utilities.Zlib.StaticTree static_d_desc : Assembly, Static, InitOnly
    Org.BouncyCastle.Utilities.Zlib.StaticTree static_bl_desc : Assembly, Static, InitOnly
    Int32 MAX_BL_BITS = 7 : Assembly, Static, Literal, HasDefault
Class Org.BouncyCastle.Utilities.Zlib.Tree: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int16[] dyn_tree : Assembly
    Int32 max_code : Assembly
    Org.BouncyCastle.Utilities.Zlib.StaticTree stat_desc : Assembly
    Int32[] extra_lbits : Assembly, Static, InitOnly
    Int32[] extra_dbits : Assembly, Static, InitOnly
    Int32[] extra_blbits : Assembly, Static, InitOnly
    Byte[] bl_order : Assembly, Static, InitOnly
    Byte[] _dist_code : Assembly, Static, InitOnly
    Byte[] _length_code : Assembly, Static, InitOnly
    Int32[] base_length : Assembly, Static, InitOnly
    Int32[] base_dist : Assembly, Static, InitOnly
    Int32 MAX_BL_BITS = 7 : Assembly, Static, Literal, HasDefault
    Int32 END_BLOCK = 256 : Assembly, Static, Literal, HasDefault
    Int32 REP_3_6 = 16 : Assembly, Static, Literal, HasDefault
    Int32 REPZ_3_10 = 17 : Assembly, Static, Literal, HasDefault
    Int32 REPZ_11_138 = 18 : Assembly, Static, Literal, HasDefault
    Int32 Buf_size = 16 : Assembly, Static, Literal, HasDefault
    Int32 DIST_CODE_LEN = 512 : Assembly, Static, Literal, HasDefault
  Methods:
    d_code(Int32): PrivateScope, Assembly, Static, HideBySig
    gen_bitlen(Deflate): PrivateScope, Assembly, HideBySig
    build_tree(Deflate): PrivateScope, Assembly, HideBySig
    gen_codes(Int16[], Int32, Int16[]): PrivateScope, Assembly, Static, HideBySig
    bi_reverse(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Utilities.Zlib.ZDeflaterOutputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    Finish(): PrivateScope, Public, HideBySig
    End(): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Utilities.Zlib.ZInflaterInputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Utilities.Zlib.ZStream: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] next_in : Public
    Int32 next_in_index : Public
    Int32 avail_in : Public
    Int64 total_in : Public
    Byte[] next_out : Public
    Int32 next_out_index : Public
    Int32 avail_out : Public
    Int64 total_out : Public
    System.String msg : Public
    Org.BouncyCastle.Utilities.Zlib.Deflate dstate : Assembly
    Org.BouncyCastle.Utilities.Zlib.Inflate istate : Assembly
    Int32 data_type : Assembly
    Int64 adler : Public
    Org.BouncyCastle.Utilities.Zlib.Adler32 _adler : Assembly
  Methods:
    inflateInit(): PrivateScope, Public, HideBySig
    inflateInit(Boolean): PrivateScope, Public, HideBySig
    inflateInit(Int32): PrivateScope, Public, HideBySig
    inflateInit(Int32, Boolean): PrivateScope, Public, HideBySig
    inflate(Int32): PrivateScope, Public, HideBySig
    inflateEnd(): PrivateScope, Public, HideBySig
    inflateSync(): PrivateScope, Public, HideBySig
    inflateSetDictionary(Byte[], Int32): PrivateScope, Public, HideBySig
    deflateInit(Int32): PrivateScope, Public, HideBySig
    deflateInit(Int32, Boolean): PrivateScope, Public, HideBySig
    deflateInit(Int32, Int32): PrivateScope, Public, HideBySig
    deflateInit(Int32, Int32, Boolean): PrivateScope, Public, HideBySig
    deflate(Int32): PrivateScope, Public, HideBySig
    deflateEnd(): PrivateScope, Public, HideBySig
    deflateParams(Int32, Int32): PrivateScope, Public, HideBySig
    deflateSetDictionary(Byte[], Int32): PrivateScope, Public, HideBySig
    flush_pending(): PrivateScope, Assembly, HideBySig
    read_buf(Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    free(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.X509.AttributeCertificateHolder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509Name, Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.X509.X509Certificate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509Name): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.String, System.String, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.X509.Store.IX509Selector
    System.ICloneable
  Fields:
    Org.BouncyCastle.Asn1.X509.Holder holder : Assembly, InitOnly
  Properties:
    Int32 DigestedObjectType 'get ' : 
    System.String DigestAlgorithm 'get ' : 
    System.String OtherObjectTypeID 'get ' : 
    Org.BouncyCastle.Math.BigInteger SerialNumber 'get ' : 
  Methods:
    get_DigestedObjectType(): PrivateScope, Public, HideBySig, SpecialName
    get_DigestAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    GetObjectDigest(): PrivateScope, Public, HideBySig
    get_OtherObjectTypeID(): PrivateScope, Public, HideBySig, SpecialName
    GetEntityNames(): PrivateScope, Public, HideBySig
    GetIssuer(): PrivateScope, Public, HideBySig
    get_SerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Match(X509Certificate): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Match(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.X509.AttributeCertificateIssuer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.X509.AttCertIssuer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509Name): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.X509.Store.IX509Selector
    System.ICloneable
  Fields:
    Org.BouncyCastle.Asn1.Asn1Encodable form : Assembly, InitOnly
  Methods:
    GetPrincipals(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Match(X509Certificate): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Match(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.X509.Extension.AuthorityKeyIdentifierStructure: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X509.AuthorityKeyIdentifier
    Void .ctor(Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.X509.X509Certificate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.X509.Extension.SubjectKeyIdentifierStructure: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.X509.SubjectKeyIdentifier
    Void .ctor(Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.X509.Extension.X509ExtensionUtilities: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FromExtensionValue(Asn1OctetString): PrivateScope, Public, Static, HideBySig
    GetIssuerAlternativeNames(X509Certificate): PrivateScope, Public, Static, HideBySig
    GetSubjectAlternativeNames(X509Certificate): PrivateScope, Public, Static, HideBySig
Interface Org.BouncyCastle.X509.IX509AttributeCertificate: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Org.BouncyCastle.X509.IX509Extension
  Properties:
    Int32 Version 'get ' : 
    Org.BouncyCastle.Math.BigInteger SerialNumber 'get ' : 
    System.DateTime NotBefore 'get ' : 
    System.DateTime NotAfter 'get ' : 
    Org.BouncyCastle.X509.AttributeCertificateHolder Holder 'get ' : 
    Org.BouncyCastle.X509.AttributeCertificateIssuer Issuer 'get ' : 
    Boolean IsValidNow 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SerialNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_NotBefore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_NotAfter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Holder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Issuer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAttributes(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetIssuerUniqueID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_IsValidNow(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    IsValid(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CheckValidity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CheckValidity(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSignature(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Verify(AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetEncoded(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.X509.PemParser: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadPemObject(Stream): PrivateScope, Assembly, HideBySig
Class Org.BouncyCastle.X509.PrincipalUtilities: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetIssuerX509Principal(X509Certificate): PrivateScope, Public, Static, HideBySig
    GetSubjectX509Principal(X509Certificate): PrivateScope, Public, Static, HideBySig
    GetIssuerX509Principal(X509Crl): PrivateScope, Public, Static, HideBySig
Interface Org.BouncyCastle.X509.Store.IX509Store: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetMatches(IX509Selector): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Org.BouncyCastle.X509.Store.IX509StoreParameters: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
Class Org.BouncyCastle.X509.Store.X509StoreException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.X509.Store.NoSuchStoreException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Org.BouncyCastle.X509.Store.X509StoreException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.X509.Store.IX509Selector
    System.ICloneable
  Properties:
    Org.BouncyCastle.X509.IX509AttributeCertificate AttributeCert 'get set' : 
    Org.BouncyCastle.Utilities.Date.DateTimeObject AttribueCertificateValid 'get set' :  (Obsolete)
    Org.BouncyCastle.Utilities.Date.DateTimeObject AttributeCertificateValid 'get set' : 
    Org.BouncyCastle.X509.AttributeCertificateHolder Holder 'get set' : 
    Org.BouncyCastle.X509.AttributeCertificateIssuer Issuer 'get set' : 
    Org.BouncyCastle.Math.BigInteger SerialNumber 'get set' : 
  Methods:
    Match(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AttributeCert(): PrivateScope, Public, HideBySig, SpecialName
    set_AttributeCert(IX509AttributeCertificate): PrivateScope, Public, HideBySig, SpecialName
    get_AttribueCertificateValid(): PrivateScope, Public, HideBySig, SpecialName
    set_AttribueCertificateValid(DateTimeObject): PrivateScope, Public, HideBySig, SpecialName
    get_AttributeCertificateValid(): PrivateScope, Public, HideBySig, SpecialName
    set_AttributeCertificateValid(DateTimeObject): PrivateScope, Public, HideBySig, SpecialName
    get_Holder(): PrivateScope, Public, HideBySig, SpecialName
    set_Holder(AttributeCertificateHolder): PrivateScope, Public, HideBySig, SpecialName
    get_Issuer(): PrivateScope, Public, HideBySig, SpecialName
    set_Issuer(AttributeCertificateIssuer): PrivateScope, Public, HideBySig, SpecialName
    get_SerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_SerialNumber(BigInteger): PrivateScope, Public, HideBySig, SpecialName
    AddTargetName(GeneralName): PrivateScope, Public, HideBySig
    AddTargetName(Byte[]): PrivateScope, Public, HideBySig
    SetTargetNames(IEnumerable): PrivateScope, Public, HideBySig
    GetTargetNames(): PrivateScope, Public, HideBySig
    AddTargetGroup(GeneralName): PrivateScope, Public, HideBySig
    AddTargetGroup(Byte[]): PrivateScope, Public, HideBySig
    SetTargetGroups(IEnumerable): PrivateScope, Public, HideBySig
    GetTargetGroups(): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.X509.Store.X509CertPairStoreSelector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.X509.Store.IX509Selector
    System.ICloneable
  Properties:
    Org.BouncyCastle.X509.X509CertificatePair CertPair 'get set' : 
    Org.BouncyCastle.X509.Store.X509CertStoreSelector ForwardSelector 'get set' : 
    Org.BouncyCastle.X509.Store.X509CertStoreSelector ReverseSelector 'get set' : 
  Methods:
    get_CertPair(): PrivateScope, Public, HideBySig, SpecialName
    set_CertPair(X509CertificatePair): PrivateScope, Public, HideBySig, SpecialName
    get_ForwardSelector(): PrivateScope, Public, HideBySig, SpecialName
    set_ForwardSelector(X509CertStoreSelector): PrivateScope, Public, HideBySig, SpecialName
    get_ReverseSelector(): PrivateScope, Public, HideBySig, SpecialName
    set_ReverseSelector(X509CertStoreSelector): PrivateScope, Public, HideBySig, SpecialName
    Match(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.X509.Store.X509CollectionStore: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Collections.ICollection): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.X509.Store.IX509Store
  Methods:
    GetMatches(IX509Selector): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.X509.Store.X509CollectionStoreParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.ICollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.X509.Store.IX509StoreParameters
  Methods:
    GetCollection(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.X509.Store.X509CrlStoreSelector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.X509.Store.X509CrlStoreSelector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.X509.Store.IX509Selector
    System.ICloneable
  Properties:
    Org.BouncyCastle.X509.X509Certificate CertificateChecking 'get set' : 
    Org.BouncyCastle.Utilities.Date.DateTimeObject DateAndTime 'get set' : 
    System.Collections.ICollection Issuers 'get set' : 
    Org.BouncyCastle.Math.BigInteger MaxCrlNumber 'get set' : 
    Org.BouncyCastle.Math.BigInteger MinCrlNumber 'get set' : 
    Org.BouncyCastle.X509.IX509AttributeCertificate AttrCertChecking 'get set' : 
    Boolean CompleteCrlEnabled 'get set' : 
    Boolean DeltaCrlIndicatorEnabled 'get set' : 
    Byte[] IssuingDistributionPoint 'get set' : 
    Boolean IssuingDistributionPointEnabled 'get set' : 
    Org.BouncyCastle.Math.BigInteger MaxBaseCrlNumber 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_CertificateChecking(): PrivateScope, Public, HideBySig, SpecialName
    set_CertificateChecking(X509Certificate): PrivateScope, Public, HideBySig, SpecialName
    get_DateAndTime(): PrivateScope, Public, HideBySig, SpecialName
    set_DateAndTime(DateTimeObject): PrivateScope, Public, HideBySig, SpecialName
    get_Issuers(): PrivateScope, Public, HideBySig, SpecialName
    set_Issuers(ICollection): PrivateScope, Public, HideBySig, SpecialName
    get_MaxCrlNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxCrlNumber(BigInteger): PrivateScope, Public, HideBySig, SpecialName
    get_MinCrlNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_MinCrlNumber(BigInteger): PrivateScope, Public, HideBySig, SpecialName
    get_AttrCertChecking(): PrivateScope, Public, HideBySig, SpecialName
    set_AttrCertChecking(IX509AttributeCertificate): PrivateScope, Public, HideBySig, SpecialName
    get_CompleteCrlEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_CompleteCrlEnabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DeltaCrlIndicatorEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_DeltaCrlIndicatorEnabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IssuingDistributionPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_IssuingDistributionPoint(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_IssuingDistributionPointEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_IssuingDistributionPointEnabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MaxBaseCrlNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxBaseCrlNumber(BigInteger): PrivateScope, Public, HideBySig, SpecialName
    Match(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.X509.Store.X509StoreFactory: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    Create(String, IX509StoreParameters): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.X509.SubjectPublicKeyInfoFactory: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    CreateSubjectPublicKeyInfo(AsymmetricKeyParameter): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.X509.X509AttrCertParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadAttrCert(Byte[]): PrivateScope, Public, HideBySig
    ReadAttrCerts(Byte[]): PrivateScope, Public, HideBySig
    ReadAttrCert(Stream): PrivateScope, Public, HideBySig
    ReadAttrCerts(Stream): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.X509.X509Attribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Org.BouncyCastle.Asn1.Asn1EncodableVector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Oid 'get ' : 
  Methods:
    get_Oid(): PrivateScope, Public, HideBySig, SpecialName
    GetValues(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.X509.X509Certificate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.X509.X509ExtensionBase
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509CertificateStructure): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.X509CertificateStructure CertificateStructure 'get ' : 
    Boolean IsValidNow 'get ' : 
    Int32 Version 'get ' : 
    Org.BouncyCastle.Math.BigInteger SerialNumber 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Name IssuerDN 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Name SubjectDN 'get ' : 
    System.DateTime NotBefore 'get ' : 
    System.DateTime NotAfter 'get ' : 
    System.String SigAlgName 'get ' : 
    System.String SigAlgOid 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString IssuerUniqueID 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString SubjectUniqueID 'get ' : 
  Methods:
    get_CertificateStructure(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsValidNow(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsValid(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CheckValidity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CheckValidity(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Version(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SerialNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IssuerDN(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SubjectDN(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NotBefore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NotAfter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetTbsCertificate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSignature(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SigAlgName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SigAlgOid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSigAlgParams(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IssuerUniqueID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SubjectUniqueID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetKeyUsage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetExtendedKeyUsage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBasicConstraints(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSubjectAlternativeNames(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIssuerAlternativeNames(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPublicKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEncoded(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Verify(AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.X509.X509CertificatePair: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.X509.X509Certificate, Org.BouncyCastle.X509.X509Certificate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.CertificatePair): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.X509.X509Certificate Forward 'get ' : 
    Org.BouncyCastle.X509.X509Certificate Reverse 'get ' : 
  Methods:
    GetEncoded(): PrivateScope, Public, HideBySig
    get_Forward(): PrivateScope, Public, HideBySig, SpecialName
    get_Reverse(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.X509.X509CertificateParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadCertificate(Byte[]): PrivateScope, Public, HideBySig
    ReadCertificates(Byte[]): PrivateScope, Public, HideBySig
    ReadCertificate(Stream): PrivateScope, Public, HideBySig
    ReadCertificates(Stream): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.X509.X509CertPairParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadCertPair(Byte[]): PrivateScope, Public, HideBySig
    ReadCertPairs(Byte[]): PrivateScope, Public, HideBySig
    ReadCertPair(Stream): PrivateScope, Public, HideBySig
    ReadCertPairs(Stream): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.X509.X509Crl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.X509.X509ExtensionBase
    Void .ctor(Org.BouncyCastle.Asn1.X509.CertificateList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Version 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Name IssuerDN 'get ' : 
    System.DateTime ThisUpdate 'get ' : 
    Org.BouncyCastle.Utilities.Date.DateTimeObject NextUpdate 'get ' : 
    System.String SigAlgName 'get ' : 
    System.String SigAlgOid 'get ' : 
  Methods:
    GetEncoded(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Verify(AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Version(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IssuerDN(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ThisUpdate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NextUpdate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetRevokedCertificate(BigInteger): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRevokedCertificates(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTbsCertList(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSignature(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SigAlgName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SigAlgOid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSigAlgParams(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    IsRevoked(X509Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.X509.X509CrlEntry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.X509.X509ExtensionBase
    Void .ctor(Org.BouncyCastle.Asn1.X509.CrlEntry): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.CrlEntry, Boolean, Org.BouncyCastle.Asn1.X509.X509Name): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Math.BigInteger SerialNumber 'get ' : 
    System.DateTime RevocationDate 'get ' : 
    Boolean HasExtensions 'get ' : 
  Methods:
    GetCertificateIssuer(): PrivateScope, Public, HideBySig
    GetEncoded(): PrivateScope, Public, HideBySig
    get_SerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_RevocationDate(): PrivateScope, Public, HideBySig, SpecialName
    get_HasExtensions(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.X509.X509CrlParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadCrl(Byte[]): PrivateScope, Public, HideBySig
    ReadCrls(Byte[]): PrivateScope, Public, HideBySig
    ReadCrl(Stream): PrivateScope, Public, HideBySig
    ReadCrls(Stream): PrivateScope, Public, HideBySig
Class Org.BouncyCastle.X509.X509KeyUsage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 DigitalSignature = 128 : Public, Static, Literal, HasDefault
    Int32 NonRepudiation = 64 : Public, Static, Literal, HasDefault
    Int32 KeyEncipherment = 32 : Public, Static, Literal, HasDefault
    Int32 DataEncipherment = 16 : Public, Static, Literal, HasDefault
    Int32 KeyAgreement = 8 : Public, Static, Literal, HasDefault
    Int32 KeyCertSign = 4 : Public, Static, Literal, HasDefault
    Int32 CrlSign = 2 : Public, Static, Literal, HasDefault
    Int32 EncipherOnly = 1 : Public, Static, Literal, HasDefault
    Int32 DecipherOnly = 32768 : Public, Static, Literal, HasDefault
  Methods:
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.X509.X509SignatureUtilities: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetSignatureParameters(ISigner, Asn1Encodable): PrivateScope, Assembly, Static, HideBySig
    GetSignatureName(AlgorithmIdentifier): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.X509.X509Utilities: NotPublic
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetAlgorithmOid(String): PrivateScope, Assembly, Static, HideBySig
    GetSigAlgID(DerObjectIdentifier, String): PrivateScope, Assembly, Static, HideBySig
    GetAlgNames(): PrivateScope, Assembly, Static, HideBySig
    GetSignatureForObject(DerObjectIdentifier, String, AsymmetricKeyParameter, SecureRandom, Asn1Encodable): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.X509.X509V1CertificateGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.IEnumerable SignatureAlgNames 'get ' : 
  Methods:
    Reset(): PrivateScope, Public, HideBySig
    SetSerialNumber(BigInteger): PrivateScope, Public, HideBySig
    SetIssuerDN(X509Name): PrivateScope, Public, HideBySig
    SetNotBefore(DateTime): PrivateScope, Public, HideBySig
    SetNotAfter(DateTime): PrivateScope, Public, HideBySig
    SetSubjectDN(X509Name): PrivateScope, Public, HideBySig
    SetPublicKey(AsymmetricKeyParameter): PrivateScope, Public, HideBySig
    SetSignatureAlgorithm(String): PrivateScope, Public, HideBySig
    Generate(AsymmetricKeyParameter): PrivateScope, Public, HideBySig
    Generate(AsymmetricKeyParameter, SecureRandom): PrivateScope, Public, HideBySig
    get_SignatureAlgNames(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.X509.X509V2AttributeCertificate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.X509.X509ExtensionBase
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.AttributeCertificate): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.X509.IX509AttributeCertificate
  Properties:
    Int32 Version 'get ' : 
    Org.BouncyCastle.Math.BigInteger SerialNumber 'get ' : 
    Org.BouncyCastle.X509.AttributeCertificateHolder Holder 'get ' : 
    Org.BouncyCastle.X509.AttributeCertificateIssuer Issuer 'get ' : 
    System.DateTime NotBefore 'get ' : 
    System.DateTime NotAfter 'get ' : 
    Boolean IsValidNow 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SerialNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Holder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Issuer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NotBefore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NotAfter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetIssuerUniqueID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsValidNow(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsValid(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CheckValidity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CheckValidity(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSignature(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Verify(AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEncoded(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAttributes(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.X509.X509V2AttributeCertificateGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.IEnumerable SignatureAlgNames 'get ' : 
  Methods:
    Reset(): PrivateScope, Public, HideBySig
    SetHolder(AttributeCertificateHolder): PrivateScope, Public, HideBySig
    SetIssuer(AttributeCertificateIssuer): PrivateScope, Public, HideBySig
    SetSerialNumber(BigInteger): PrivateScope, Public, HideBySig
    SetNotBefore(DateTime): PrivateScope, Public, HideBySig
    SetNotAfter(DateTime): PrivateScope, Public, HideBySig
    SetSignatureAlgorithm(String): PrivateScope, Public, HideBySig
    AddAttribute(X509Attribute): PrivateScope, Public, HideBySig
    SetIssuerUniqueId(Boolean[]): PrivateScope, Public, HideBySig
    AddExtension(String, Boolean, Asn1Encodable): PrivateScope, Public, HideBySig
    AddExtension(String, Boolean, Byte[]): PrivateScope, Public, HideBySig
    Generate(AsymmetricKeyParameter): PrivateScope, Public, HideBySig
    Generate(AsymmetricKeyParameter, SecureRandom): PrivateScope, Public, HideBySig
    get_SignatureAlgNames(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.X509.X509V2CrlGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.IEnumerable SignatureAlgNames 'get ' : 
  Methods:
    Reset(): PrivateScope, Public, HideBySig
    SetIssuerDN(X509Name): PrivateScope, Public, HideBySig
    SetThisUpdate(DateTime): PrivateScope, Public, HideBySig
    SetNextUpdate(DateTime): PrivateScope, Public, HideBySig
    AddCrlEntry(BigInteger, DateTime, Int32): PrivateScope, Public, HideBySig
    AddCrlEntry(BigInteger, DateTime, Int32, DateTime): PrivateScope, Public, HideBySig
    AddCrlEntry(BigInteger, DateTime, X509Extensions): PrivateScope, Public, HideBySig
    AddCrl(X509Crl): PrivateScope, Public, HideBySig
    SetSignatureAlgorithm(String): PrivateScope, Public, HideBySig
    AddExtension(String, Boolean, Asn1Encodable): PrivateScope, Public, HideBySig
    AddExtension(DerObjectIdentifier, Boolean, Asn1Encodable): PrivateScope, Public, HideBySig
    AddExtension(String, Boolean, Byte[]): PrivateScope, Public, HideBySig
    AddExtension(DerObjectIdentifier, Boolean, Byte[]): PrivateScope, Public, HideBySig
    Generate(AsymmetricKeyParameter): PrivateScope, Public, HideBySig
    Generate(AsymmetricKeyParameter, SecureRandom): PrivateScope, Public, HideBySig
    get_SignatureAlgNames(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.X509.X509V3CertificateGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.IEnumerable SignatureAlgNames 'get ' : 
  Methods:
    Reset(): PrivateScope, Public, HideBySig
    SetSerialNumber(BigInteger): PrivateScope, Public, HideBySig
    SetIssuerDN(X509Name): PrivateScope, Public, HideBySig
    SetNotBefore(DateTime): PrivateScope, Public, HideBySig
    SetNotAfter(DateTime): PrivateScope, Public, HideBySig
    SetSubjectDN(X509Name): PrivateScope, Public, HideBySig
    SetPublicKey(AsymmetricKeyParameter): PrivateScope, Public, HideBySig
    SetSignatureAlgorithm(String): PrivateScope, Public, HideBySig
    SetSubjectUniqueID(Boolean[]): PrivateScope, Public, HideBySig
    SetIssuerUniqueID(Boolean[]): PrivateScope, Public, HideBySig
    AddExtension(String, Boolean, Asn1Encodable): PrivateScope, Public, HideBySig
    AddExtension(DerObjectIdentifier, Boolean, Asn1Encodable): PrivateScope, Public, HideBySig
    AddExtension(String, Boolean, Byte[]): PrivateScope, Public, HideBySig
    AddExtension(DerObjectIdentifier, Boolean, Byte[]): PrivateScope, Public, HideBySig
    CopyAndAddExtension(String, Boolean, X509Certificate): PrivateScope, Public, HideBySig
    CopyAndAddExtension(DerObjectIdentifier, Boolean, X509Certificate): PrivateScope, Public, HideBySig
    Generate(AsymmetricKeyParameter): PrivateScope, Public, HideBySig
    Generate(AsymmetricKeyParameter, SecureRandom): PrivateScope, Public, HideBySig
    get_SignatureAlgNames(): PrivateScope, Public, HideBySig, SpecialName
Class System.util.collections.HashSet2`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
    System.Collections.Generic.Dictionary`2[T,System.Object] InternalSet 'get ' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddAndCheck(T): PrivateScope, Public, HideBySig
    Add(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddAll(IEnumerable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(T[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    RetainAll(ICollection`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_InternalSet(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
Class System.util.collections.OrderedTree: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Item [System.IComparable] 'get set' : 
    System.util.collections.OrderedTreeEnumerator Keys 'get ' : 
    System.util.collections.OrderedTreeEnumerator Values 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Item(IComparable): PrivateScope, Public, HideBySig, SpecialName
    set_Item(IComparable, Object): PrivateScope, Public, HideBySig, SpecialName
    Add(IComparable, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RotateLeft(OrderedTreeNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RotateRight(OrderedTreeNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ContainsKey(IComparable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetData(IComparable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMinKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMaxKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMinValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMaxValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Keys(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    KeyElements(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Values(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Elements(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Elements(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(IComparable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveMin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveMax(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class System.util.collections.OrderedTreeEnumerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.util.collections.OrderedTreeNode, Boolean, Boolean, System.util.collections.OrderedTreeNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    System.IComparable Key 'get set' : 
    System.Object Value 'get set' : 
    System.Object Current 'get ' : 
  Methods:
    get_Key(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Key(IComparable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Value(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    HasMoreElements(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextElement(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.util.collections.OrderedTreeNode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean RED = False : Public, Static, Literal, HasDefault
    Boolean BLACK = True : Public, Static, Literal, HasDefault
  Properties:
    System.IComparable Key 'get set' : 
    System.Object Data 'get set' : 
    Boolean Color 'get set' : 
    System.util.collections.OrderedTreeNode Left 'get set' : 
    System.util.collections.OrderedTreeNode Right 'get set' : 
    System.util.collections.OrderedTreeNode Parent 'get set' : 
  Methods:
    get_Key(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Key(IComparable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Data(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Data(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Color(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Color(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Left(OrderedTreeNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Right(OrderedTreeNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Parent(OrderedTreeNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class System.util.FilterStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
Class System.util.ListIterator`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(System.Collections.Generic.IList`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    HasNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Next(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Previous(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.util.PushbackStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.util.FilterStream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Unread(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.util.RectangleJ: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(iTextSharp.text.Rectangle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 OUT_LEFT = 1 : Public, Static, Literal, HasDefault
    Int32 OUT_TOP = 2 : Public, Static, Literal, HasDefault
    Int32 OUT_RIGHT = 4 : Public, Static, Literal, HasDefault
    Int32 OUT_BOTTOM = 8 : Public, Static, Literal, HasDefault
  Properties:
    Single X   'get set' : 
    Single Y   'get set' : 
    Single Width 'get set' : 
    Single Height 'get set' : 
  Methods:
    get_X(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_X(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Y(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Y(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Width(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Height(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(RectangleJ): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Outcode(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IntersectsLine(Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Intersection(RectangleJ): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Point2D): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.util.StringTokenizer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    HasMoreTokens(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextToken(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextToken(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CountTokens(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.util.Util: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    USR(Int32, Int32): PrivateScope, Public, Static, HideBySig
    EqualsIgnoreCase(String, String): PrivateScope, Public, Static, HideBySig
    CompareToIgnoreCase(String, String): PrivateScope, Public, Static, HideBySig
    GetStandartEnUSLocale(): PrivateScope, Public, Static, HideBySig
    GetArrayHashCode(T[]): PrivateScope, Public, Static, HideBySig
    Compare(Single, Single): PrivateScope, Public, Static, HideBySig
    ArraysAreEqual(T[], T[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Stack`1, Stack`1): PrivateScope, Public, Static, HideBySig
    Min(T[]): PrivateScope, Public, Static, HideBySig
    Max(T[]): PrivateScope, Public, Static, HideBySig
    AddAll(ICollection`1, IEnumerable`1, Int32): PrivateScope, Public, Static, HideBySig
    AddAll(ICollection`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    AddAll(Queue`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
Class System.util.zlib.Adler32: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    adler32(Int64, Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
Class System.util.zlib.Deflate: AutoLayout, AnsiClass, Class, Public, Sealed
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.util.zlib.ZStream strm : Assembly
    Int32 status : Assembly
    Byte[] pending_buf : Assembly
    Int32 pending_buf_size : Assembly
    Int32 pending_out : Assembly
    Int32 pending : Assembly
    Int32 noheader : Assembly
    Byte data_type : Assembly
    Byte method : Assembly
    Int32 last_flush : Assembly
    Int32 w_size : Assembly
    Int32 w_bits : Assembly
    Int32 w_mask : Assembly
    Byte[] window : Assembly
    Int32 window_size : Assembly
    Int16[] prev : Assembly
    Int16[] head : Assembly
    Int32 ins_h : Assembly
    Int32 hash_size : Assembly
    Int32 hash_bits : Assembly
    Int32 hash_mask : Assembly
    Int32 hash_shift : Assembly
    Int32 block_start : Assembly
    Int32 match_length : Assembly
    Int32 prev_match : Assembly
    Int32 match_available : Assembly
    Int32 strstart : Assembly
    Int32 match_start : Assembly
    Int32 lookahead : Assembly
    Int32 prev_length : Assembly
    Int32 max_chain_length : Assembly
    Int32 max_lazy_match : Assembly
    Int32 level : Assembly
    Int32 strategy : Assembly
    Int32 good_match : Assembly
    Int32 nice_match : Assembly
    Int16[] dyn_ltree : Assembly
    Int16[] dyn_dtree : Assembly
    Int16[] bl_tree : Assembly
    System.util.zlib.Tree l_desc : Assembly
    System.util.zlib.Tree d_desc : Assembly
    System.util.zlib.Tree bl_desc : Assembly
    Int16[] bl_count : Assembly
    Int32[] heap : Assembly
    Int32 heap_len : Assembly
    Int32 heap_max : Assembly
    Byte[] depth : Assembly
    Int32 l_buf : Assembly
    Int32 lit_bufsize : Assembly
    Int32 last_lit : Assembly
    Int32 d_buf : Assembly
    Int32 opt_len : Assembly
    Int32 static_len : Assembly
    Int32 matches : Assembly
    Int32 last_eob_len : Assembly
    UInt32 bi_buf : Assembly
    Int32 bi_valid : Assembly
  Methods:
    lm_init(): PrivateScope, Assembly, HideBySig
    tr_init(): PrivateScope, Assembly, HideBySig
    init_block(): PrivateScope, Assembly, HideBySig
    pqdownheap(Int16[], Int32): PrivateScope, Assembly, HideBySig
    smaller(Int16[], Int32, Int32, Byte[]): PrivateScope, Assembly, Static, HideBySig
    scan_tree(Int16[], Int32): PrivateScope, Assembly, HideBySig
    build_bl_tree(): PrivateScope, Assembly, HideBySig
    send_all_trees(Int32, Int32, Int32): PrivateScope, Assembly, HideBySig
    send_tree(Int16[], Int32): PrivateScope, Assembly, HideBySig
    put_byte(Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    put_byte(Byte): PrivateScope, Assembly, HideBySig
    put_short(Int32): PrivateScope, Assembly, HideBySig
    putShortMSB(Int32): PrivateScope, Assembly, HideBySig
    send_code(Int32, Int16[]): PrivateScope, Assembly, HideBySig
    send_bits(Int32, Int32): PrivateScope, Assembly, HideBySig
    _tr_align(): PrivateScope, Assembly, HideBySig
    _tr_tally(Int32, Int32): PrivateScope, Assembly, HideBySig
    compress_block(Int16[], Int16[]): PrivateScope, Assembly, HideBySig
    set_data_type(): PrivateScope, Assembly, HideBySig
    bi_flush(): PrivateScope, Assembly, HideBySig
    bi_windup(): PrivateScope, Assembly, HideBySig
    copy_block(Int32, Int32, Boolean): PrivateScope, Assembly, HideBySig
    flush_block_only(Boolean): PrivateScope, Assembly, HideBySig
    deflate_stored(Int32): PrivateScope, Assembly, HideBySig
    _tr_stored_block(Int32, Int32, Boolean): PrivateScope, Assembly, HideBySig
    _tr_flush_block(Int32, Int32, Boolean): PrivateScope, Assembly, HideBySig
    fill_window(): PrivateScope, Assembly, HideBySig
    deflate_fast(Int32): PrivateScope, Assembly, HideBySig
    deflate_slow(Int32): PrivateScope, Assembly, HideBySig
    longest_match(Int32): PrivateScope, Assembly, HideBySig
    deflateInit(ZStream, Int32, Int32): PrivateScope, Assembly, HideBySig
    deflateInit(ZStream, Int32): PrivateScope, Assembly, HideBySig
    deflateInit2(ZStream, Int32, Int32, Int32, Int32, Int32): PrivateScope, Assembly, HideBySig
    deflateReset(ZStream): PrivateScope, Assembly, HideBySig
    deflateEnd(): PrivateScope, Assembly, HideBySig
    deflateParams(ZStream, Int32, Int32): PrivateScope, Assembly, HideBySig
    deflateSetDictionary(ZStream, Byte[], Int32): PrivateScope, Assembly, HideBySig
    deflate(ZStream, Int32): PrivateScope, Assembly, HideBySig
Class System.util.zlib.Deflate+Config: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 good_length : Assembly
    Int32 max_lazy : Assembly
    Int32 nice_length : Assembly
    Int32 max_chain : Assembly
    Int32 func : Assembly
Class System.util.zlib.InfBlocks: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.util.zlib.ZStream, System.Object, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 mode : Assembly
    Int32 left : Assembly
    Int32 table : Assembly
    Int32 index : Assembly
    Int32[] blens : Assembly
    Int32[] bb : Assembly
    Int32[] tb : Assembly
    System.util.zlib.InfCodes codes : Assembly
    Int32 bitk : Assembly
    Int32 bitb : Assembly
    Int32[] hufts : Assembly
    Byte[] window : Assembly
    Int32 end : Assembly
    Int32 read : Assembly
    Int32 write : Assembly
    System.Object checkfn : Assembly
    Int64 check : Assembly
    System.util.zlib.InfTree inftree : Assembly
  Methods:
    reset(ZStream, Int64[]): PrivateScope, Assembly, HideBySig
    proc(ZStream, Int32): PrivateScope, Assembly, HideBySig
    free(ZStream): PrivateScope, Assembly, HideBySig
    set_dictionary(Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    sync_point(): PrivateScope, Assembly, HideBySig
    inflate_flush(ZStream, Int32): PrivateScope, Assembly, HideBySig
Class System.util.zlib.InfCodes: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    init(Int32, Int32, Int32[], Int32, Int32[], Int32, ZStream): PrivateScope, Assembly, HideBySig
    proc(InfBlocks, ZStream, Int32): PrivateScope, Assembly, HideBySig
    free(ZStream): PrivateScope, Assembly, HideBySig
    inflate_fast(Int32, Int32, Int32[], Int32, Int32[], Int32, InfBlocks, ZStream): PrivateScope, Assembly, HideBySig
Class System.util.zlib.Inflate: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 mode : Assembly
    Int32 method : Assembly
    Int64[] was : Assembly
    Int64 need : Assembly
    Int32 marker : Assembly
    Int32 nowrap : Assembly
    Int32 wbits : Assembly
    System.util.zlib.InfBlocks blocks : Assembly
    Int32 Z_NO_FLUSH = 0 : Assembly, Static, Literal, HasDefault
    Int32 Z_PARTIAL_FLUSH = 1 : Assembly, Static, Literal, HasDefault
    Int32 Z_SYNC_FLUSH = 2 : Assembly, Static, Literal, HasDefault
    Int32 Z_FULL_FLUSH = 3 : Assembly, Static, Literal, HasDefault
    Int32 Z_FINISH = 4 : Assembly, Static, Literal, HasDefault
  Methods:
    inflateReset(ZStream): PrivateScope, Assembly, HideBySig
    inflateEnd(ZStream): PrivateScope, Assembly, HideBySig
    inflateInit(ZStream, Int32): PrivateScope, Assembly, HideBySig
    inflate(ZStream, Int32): PrivateScope, Assembly, HideBySig
    inflateSetDictionary(ZStream, Byte[], Int32): PrivateScope, Assembly, HideBySig
    inflateSync(ZStream): PrivateScope, Assembly, HideBySig
    inflateSyncPoint(ZStream): PrivateScope, Assembly, HideBySig
Class System.util.zlib.InfTree: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    inflate_trees_bits(Int32[], Int32[], Int32[], Int32[], ZStream): PrivateScope, Assembly, HideBySig
    inflate_trees_dynamic(Int32, Int32, Int32[], Int32[], Int32[], Int32[], Int32[], Int32[], ZStream): PrivateScope, Assembly, HideBySig
    inflate_trees_fixed(Int32[], Int32[], Int32[][], Int32[][], ZStream): PrivateScope, Assembly, Static, HideBySig
Class System.util.zlib.JZlib: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Z_NO_COMPRESSION = 0 : Public, Static, Literal, HasDefault
    Int32 Z_BEST_SPEED = 1 : Public, Static, Literal, HasDefault
    Int32 Z_BEST_COMPRESSION = 9 : Public, Static, Literal, HasDefault
    Int32 Z_DEFAULT_COMPRESSION = -1 : Public, Static, Literal, HasDefault
    Int32 Z_FILTERED = 1 : Public, Static, Literal, HasDefault
    Int32 Z_HUFFMAN_ONLY = 2 : Public, Static, Literal, HasDefault
    Int32 Z_DEFAULT_STRATEGY = 0 : Public, Static, Literal, HasDefault
    Int32 Z_NO_FLUSH = 0 : Public, Static, Literal, HasDefault
    Int32 Z_PARTIAL_FLUSH = 1 : Public, Static, Literal, HasDefault
    Int32 Z_SYNC_FLUSH = 2 : Public, Static, Literal, HasDefault
    Int32 Z_FULL_FLUSH = 3 : Public, Static, Literal, HasDefault
    Int32 Z_FINISH = 4 : Public, Static, Literal, HasDefault
    Int32 Z_OK = 0 : Public, Static, Literal, HasDefault
    Int32 Z_STREAM_END = 1 : Public, Static, Literal, HasDefault
    Int32 Z_NEED_DICT = 2 : Public, Static, Literal, HasDefault
    Int32 Z_ERRNO = -1 : Public, Static, Literal, HasDefault
    Int32 Z_STREAM_ERROR = -2 : Public, Static, Literal, HasDefault
    Int32 Z_DATA_ERROR = -3 : Public, Static, Literal, HasDefault
    Int32 Z_MEM_ERROR = -4 : Public, Static, Literal, HasDefault
    Int32 Z_BUF_ERROR = -5 : Public, Static, Literal, HasDefault
    Int32 Z_VERSION_ERROR = -6 : Public, Static, Literal, HasDefault
  Methods:
    version(): PrivateScope, Public, Static, HideBySig
Class System.util.zlib.StaticTree: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Int16[], Int32[], Int32, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int16[] static_tree : Assembly
    Int32[] extra_bits : Assembly
    Int32 extra_base : Assembly
    Int32 elems : Assembly
    Int32 max_length : Assembly
    Int16[] static_ltree : Assembly, Static, InitOnly
    Int16[] static_dtree : Assembly, Static, InitOnly
    System.util.zlib.StaticTree static_l_desc : Assembly, Static, InitOnly
    System.util.zlib.StaticTree static_d_desc : Assembly, Static, InitOnly
    System.util.zlib.StaticTree static_bl_desc : Assembly, Static, InitOnly
    Int32 MAX_BL_BITS = 7 : Assembly, Static, Literal, HasDefault
Class System.util.zlib.Tree: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int16[] dyn_tree : Assembly
    Int32 max_code : Assembly
    System.util.zlib.StaticTree stat_desc : Assembly
    Int32[] extra_lbits : Assembly, Static, InitOnly
    Int32[] extra_dbits : Assembly, Static, InitOnly
    Int32[] extra_blbits : Assembly, Static, InitOnly
    Byte[] bl_order : Assembly, Static, InitOnly
    Byte[] _dist_code : Assembly, Static, InitOnly
    Byte[] _length_code : Assembly, Static, InitOnly
    Int32[] base_length : Assembly, Static, InitOnly
    Int32[] base_dist : Assembly, Static, InitOnly
    Int32 MAX_BL_BITS = 7 : Assembly, Static, Literal, HasDefault
    Int32 END_BLOCK = 256 : Assembly, Static, Literal, HasDefault
    Int32 REP_3_6 = 16 : Assembly, Static, Literal, HasDefault
    Int32 REPZ_3_10 = 17 : Assembly, Static, Literal, HasDefault
    Int32 REPZ_11_138 = 18 : Assembly, Static, Literal, HasDefault
    Int32 Buf_size = 16 : Assembly, Static, Literal, HasDefault
    Int32 DIST_CODE_LEN = 512 : Assembly, Static, Literal, HasDefault
  Methods:
    d_code(Int32): PrivateScope, Assembly, Static, HideBySig
    gen_bitlen(Deflate): PrivateScope, Assembly, HideBySig
    build_tree(Deflate): PrivateScope, Assembly, HideBySig
    gen_codes(Int16[], Int32, Int16[]): PrivateScope, Assembly, Static, HideBySig
    bi_reverse(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
Class System.util.zlib.ZDeflaterOutputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    Finish(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    End(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Virtual, HideBySig
Class System.util.zlib.ZInflaterInputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
Class System.util.zlib.ZStream: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] next_in : Public
    Int32 next_in_index : Public
    Int32 avail_in : Public
    Int64 total_in : Public
    Byte[] next_out : Public
    Int32 next_out_index : Public
    Int32 avail_out : Public
    Int64 total_out : Public
    System.String msg : Public
    System.util.zlib.Deflate dstate : Assembly
    System.util.zlib.Inflate istate : Assembly
    Int32 data_type : Assembly
    Int64 adler : Public
    System.util.zlib.Adler32 _adler : Assembly
  Methods:
    inflateInit(): PrivateScope, Public, HideBySig
    inflateInit(Boolean): PrivateScope, Public, HideBySig
    inflateInit(Int32): PrivateScope, Public, HideBySig
    inflateInit(Int32, Boolean): PrivateScope, Public, HideBySig
    inflate(Int32): PrivateScope, Public, HideBySig
    inflateEnd(): PrivateScope, Public, HideBySig
    inflateSync(): PrivateScope, Public, HideBySig
    inflateSetDictionary(Byte[], Int32): PrivateScope, Public, HideBySig
    deflateInit(Int32): PrivateScope, Public, HideBySig
    deflateInit(Int32, Boolean): PrivateScope, Public, HideBySig
    deflateInit(Int32, Int32): PrivateScope, Public, HideBySig
    deflateInit(Int32, Int32, Boolean): PrivateScope, Public, HideBySig
    deflate(Int32): PrivateScope, Public, HideBySig
    deflateEnd(): PrivateScope, Public, HideBySig
    deflateParams(Int32, Int32): PrivateScope, Public, HideBySig
    deflateSetDictionary(Byte[], Int32): PrivateScope, Public, HideBySig
    flush_pending(): PrivateScope, Assembly, HideBySig
    read_buf(Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    free(): PrivateScope, Public, HideBySig
Interface iTextSharp.text.api.IWriterOperation: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Write(PdfWriter, Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.error_messages.LocalizedResource: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.Globalization.CultureInfo, System.Reflection.Assembly): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetMessage(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.html.HtmlUtilities: AutoLayout, AnsiClass, Class, Public (Obsolete)
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32[] FONTSIZES : Public, Static, InitOnly
    Single DEFAULT_FONT_SIZE = 12 : Public, Static, Literal, HasDefault
  Methods:
    ParseLength(String): PrivateScope, Public, Static, HideBySig
    ParseLength(String, Single): PrivateScope, Public, Static, HideBySig
    DecodeColor(String): PrivateScope, Public, Static, HideBySig
    ParseAttributes(String): PrivateScope, Public, Static, HideBySig
    RemoveComment(String, String, String): PrivateScope, Public, Static, HideBySig
    EliminateWhiteSpace(String): PrivateScope, Public, Static, HideBySig
    GetIndexedFontSize(String, String): PrivateScope, Public, Static, HideBySig
    AlignmentValue(String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.html.simpleparser.CellWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
    Void .ctor(System.String, iTextSharp.text.html.simpleparser.ChainedProperties): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.ITextElementArray
    iTextSharp.text.IElement
  Properties:
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
    Int32 Type 'get ' : 
    iTextSharp.text.pdf.PdfPCell Cell 'get ' : 
    Single Width 'get ' : 
    Boolean IsPercentage 'get ' : 
  Methods:
    CreatePdfPCell(String, ChainedProperties): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Cell(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNestable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Width(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPercentage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.html.simpleparser.ElementFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.IFontProvider FontProvider 'get set' : 
  Methods:
    set_FontProvider(IFontProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FontProvider(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetFont(ChainedProperties): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateChunk(String, ChainedProperties): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateParagraph(ChainedProperties): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateListItem(ChainedProperties): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHyphenation(ChainedProperties): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateLineSeparator(IDictionary`2, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateImage(String, IDictionary`2, ChainedProperties, IDocListener, IImageProvider, Dictionary`2, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateList(String, ChainedProperties): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.html.simpleparser.HTMLTagProcessors: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :System.Collections.Generic.Dictionary`2[System.String,iTextSharp.text.html.simpleparser.IHTMLTagProcessor]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.html.simpleparser.IHTMLTagProcessor EM_STRONG_STRIKE_SUP_SUP : Public, Static
    iTextSharp.text.html.simpleparser.IHTMLTagProcessor A : Public, Static
    iTextSharp.text.html.simpleparser.IHTMLTagProcessor BR : Public, Static
    iTextSharp.text.html.simpleparser.IHTMLTagProcessor UL_OL : Public, Static
    iTextSharp.text.html.simpleparser.IHTMLTagProcessor HR : Public, Static
    iTextSharp.text.html.simpleparser.IHTMLTagProcessor SPAN : Public, Static
    iTextSharp.text.html.simpleparser.IHTMLTagProcessor H : Public, Static
    iTextSharp.text.html.simpleparser.IHTMLTagProcessor LI : Public, Static
    iTextSharp.text.html.simpleparser.IHTMLTagProcessor PRE : Public, Static
    iTextSharp.text.html.simpleparser.IHTMLTagProcessor DIV : Public, Static
    iTextSharp.text.html.simpleparser.IHTMLTagProcessor TABLE : Public, Static
    iTextSharp.text.html.simpleparser.IHTMLTagProcessor TR : Public, Static
    iTextSharp.text.html.simpleparser.IHTMLTagProcessor TD : Public, Static
    iTextSharp.text.html.simpleparser.IHTMLTagProcessor IMG : Public, Static
Interface iTextSharp.text.html.simpleparser.IHTMLTagProcessor: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract (Obsolete)
  Methods:
    StartElement(HTMLWorker, String, IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndElement(HTMLWorker, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.html.simpleparser.IImageProcessor: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract (Obsolete)
  Methods:
    Process(Image, IDictionary`2, ChainedProperties, IDocListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.html.simpleparser.ILinkProcessor: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract (Obsolete)
  Methods:
    Process(Paragraph, ChainedProperties): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.html.simpleparser.ImageStore: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :System.Collections.Generic.Dictionary`2[System.String,iTextSharp.text.Image]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.html.simpleparser.TableWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
    Void .ctor(System.Collections.Generic.IDictionary`2[System.String,System.String]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.IElement
  Properties:
    Single[] ColWidths 'set' : 
    Int32 Type 'get ' : 
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
  Methods:
    AddRow(IList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_ColWidths(Single[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreateTable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNestable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Interface iTextSharp.text.log.ILogger: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetLogger(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetLogger(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsLogging(Level): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct iTextSharp.text.log.Level: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    iTextSharp.text.log.Level ERROR = 0 : Public, Static, Literal, HasDefault
    iTextSharp.text.log.Level WARN = 1 : Public, Static, Literal, HasDefault
    iTextSharp.text.log.Level INFO = 2 : Public, Static, Literal, HasDefault
    iTextSharp.text.log.Level DEBUG = 3 : Public, Static, Literal, HasDefault
    iTextSharp.text.log.Level TRACE = 4 : Public, Static, Literal, HasDefault
Class iTextSharp.text.log.LoggerFactory: AutoLayout, AnsiClass, Class, Public
  Methods:
    GetLogger(Type): PrivateScope, Public, Static, HideBySig
    GetLogger(String): PrivateScope, Public, Static, HideBySig
    GetInstance(): PrivateScope, Public, Static, HideBySig
    SetLogger(ILogger): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Logger(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.log.NoOpLogger: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.log.ILogger
  Methods:
    GetLogger(Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsLogging(Level): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetLogger(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.log.SysoLogger: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.log.ILogger
  Methods:
    GetLogger(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLogger(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsLogging(Level): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Warn(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Trace(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Debug(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Info(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Error(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Error(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.codec.LZWCompressor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Compress(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Flush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.codec.LZWStringTable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddCharString(Int16, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FindCharString(Int16, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearTable(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Hash(Int16, Byte): PrivateScope, Public, Static, HideBySig
    ExpandCode(Byte[], Int32, Int16, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.testutils.CompareTool: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Compare(String, String, String, String, IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Compare(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCompareByContentErrorsLimit(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGenerateCompareByContentXmlReport(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFloatAbsoluteError(Single): PrivateScope, Public, HideBySig
    SetFloatRelativeError(Single): PrivateScope, Public, HideBySig
    SetXmlReportName(String): PrivateScope, Public, HideBySig
    GetXmlReportName(): PrivateScope, Public, HideBySig
    CompareByContent(String, String, String, String, IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CompareByContent(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CompareDictionaries(PdfDictionary, PdfDictionary): PrivateScope, Public, HideBySig
    CompareContentStreamsByParsing(PdfObject, PdfObject): PrivateScope, Public, HideBySig
    CompareContentStreamsByParsing(PdfObject, PdfObject, PdfDictionary, PdfDictionary): PrivateScope, Public, HideBySig
    CompareStreams(PRStream, PRStream): PrivateScope, Public, HideBySig
    CompareArrays(PdfArray, PdfArray): PrivateScope, Public, HideBySig
    CompareNames(PdfName, PdfName): PrivateScope, Public, HideBySig
    CompareNumbers(PdfNumber, PdfNumber): PrivateScope, Public, HideBySig
    CompareStrings(PdfString, PdfString): PrivateScope, Public, HideBySig
    CompareLiterals(PdfLiteral, PdfLiteral): PrivateScope, Public, HideBySig
    CompareBooleans(PdfBoolean, PdfBoolean): PrivateScope, Public, HideBySig
    CompareXmp(Byte[], Byte[]): PrivateScope, Public, HideBySig
    CompareXmp(Byte[], Byte[], Boolean): PrivateScope, Public, HideBySig
    CompareXmp(String, String): PrivateScope, Public, HideBySig
    CompareXmp(String, String, Boolean): PrivateScope, Public, HideBySig
    CompareXmls(Byte[], Byte[]): PrivateScope, Public, HideBySig
    CompareDocumentInfo(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CompareLinks(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.FloatLayout: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.Generic.List`1[iTextSharp.text.IElement], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    iTextSharp.text.pdf.ColumnText compositeColumn : Public
    System.Collections.Generic.List`1[iTextSharp.text.IElement] content : Public
  Properties:
    Single YLine 'get set' : 
    Single FilledWidth 'get set' : 
    Int32 RunDirection 'get set' : 
  Methods:
    get_YLine(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_YLine(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FilledWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FilledWidth(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetSimpleColumn(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_RunDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_RunDirection(Int32): PrivateScope, Public, HideBySig, SpecialName
    Layout(PdfContentByte, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.fonts.cmaps.AbstractCMap: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Int32 Supplement 'get set' : 
    System.String Name 'get set' : 
    System.String Ordering 'get set' : 
    System.String Registry 'get set' : 
  Methods:
    get_Supplement(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Supplement(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Ordering(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Ordering(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Registry(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Registry(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddChar(PdfString, PdfObject): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    AddRange(PdfString, PdfString, PdfObject): PrivateScope, Assembly, HideBySig
    DecodeStringToByte(PdfString): PrivateScope, Public, Static, HideBySig
    DecodeStringToUnicode(PdfString): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.pdf.fonts.cmaps.ICidLocation: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetLocation(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.fonts.cmaps.CidLocationFromByte: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.fonts.cmaps.ICidLocation
  Methods:
    GetLocation(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.fonts.cmaps.CidResource: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.fonts.cmaps.ICidLocation
  Methods:
    GetLocation(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.fonts.cmaps.CMapByteCid: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.fonts.cmaps.AbstractCMap
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddChar(PdfString, PdfObject): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DecodeSingle(CMapSequence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DecodeSequence(CMapSequence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.fonts.cmaps.CMapCache: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetCachedCMapUniCid(String): PrivateScope, Public, Static, HideBySig
    GetCachedCMapCidUni(String): PrivateScope, Public, Static, HideBySig
    GetCachedCMapCidByte(String): PrivateScope, Public, Static, HideBySig
    GetCachedCMapByteCid(String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.fonts.cmaps.CMapCidByte: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.fonts.cmaps.AbstractCMap
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddChar(PdfString, PdfObject): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Lookup(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.fonts.cmaps.CMapCidUni: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.fonts.cmaps.AbstractCMap
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddChar(PdfString, PdfObject): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Lookup(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.fonts.cmaps.CMapParserEx: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ParseCid(String, AbstractCMap, ICidLocation): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.fonts.cmaps.CMapSequence: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] seq : Public
    Int32 off : Public
    Int32 len : Public
Class iTextSharp.text.pdf.fonts.cmaps.CMapToUnicode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.fonts.cmaps.AbstractCMap
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    HasOneByteMappings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasTwoByteMappings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Lookup(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateReverseMapping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateDirectMapping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddChar(Int32, String): PrivateScope, Assembly, HideBySig
    AddChar(PdfString, PdfObject): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetIdentity(): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.fonts.cmaps.CMapUniCid: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.fonts.cmaps.AbstractCMap
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddChar(PdfString, PdfObject): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Lookup(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExportToUnicode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.intern.PdfIsoKeys: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 PDFISOKEY_COLOR = 1 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_CMYK = 2 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_RGB = 3 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_FONT = 4 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_IMAGE = 5 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_GSTATE = 6 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_LAYER = 7 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_TRAILER = 8 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_STREAM = 9 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_FILESPEC = 10 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_OBJECT = 11 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_CANVAS = 12 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_ANNOTATION = 13 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_ACTION = 14 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_FORM = 15 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_STRUCTELEM = 16 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_INLINE_IMAGE = 17 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_GRAY = 18 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_OUTPUTINTENT = 19 : Public, Static, Literal, HasDefault
    Int32 PDFISOKEY_FORM_XOBJ = 20 : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.LongHashtable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Size 'get ' : 
    Int64 Item [Int64] 'get set' : 
  Methods:
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ContainsKey(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int64): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int64, Int64): PrivateScope, Public, HideBySig, SpecialName
    Remove(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToOrderedKeys(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetKeys(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEntryIterator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.LongHashtable+LongHashtableEntry: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 hash : Assembly
    Int64 key : Assembly
    Int64 value : Assembly
    LongHashtableEntry next : Assembly
  Properties:
    Int64 Key  'get ' : 
    Int64 Value 'get ' : 
  Methods:
    get_Key(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.LongHashtable+LongHashtableIterator: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(LongHashtableEntry[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    HasNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Next(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.crypto.AESCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Boolean, Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Update(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoFinal(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.parser.InlineImageInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[], iTextSharp.text.pdf.PdfDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfDictionary ImageDictionary 'get ' : 
    Byte[] Samples 'get ' : 
  Methods:
    get_ImageDictionary(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Samples(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.parser.InlineImageUtils: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    ParseInlineImage(PdfContentParser, PdfDictionary): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.parser.InlineImageUtils+InlineImageParseException: AutoLayout, AnsiClass, Class, NestedPublic, Serializable, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.PdfConcatenate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfCopy Writer 'get ' : 
  Methods:
    AddPages(PdfReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Writer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Open(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.PdfDiv: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.IElement
    iTextSharp.text.api.ISpaceable
    iTextSharp.text.pdf.interfaces.IAccessibleElement
  Properties:
    System.Nullable`1[System.Single] Left 'get set' : 
    System.Nullable`1[System.Single] Top 'get set' : 
    System.Nullable`1[System.Single] Right 'get set' : 
    System.Nullable`1[System.Single] Bottom 'get set' : 
    System.Nullable`1[System.Single] Width 'get set' : 
    System.Nullable`1[System.Single] Height 'get set' : 
    System.Nullable`1[System.Single] PercentageHeight 'get set' : 
    System.Nullable`1[System.Single] PercentageWidth 'get set' : 
    Single ContentWidth 'get set' : 
    Single ContentHeight 'get set' : 
    Int32 TextAlignment 'get set' : 
    Single PaddingLeft 'get set' : 
    Single PaddingRight 'get set' : 
    Single PaddingTop 'get set' : 
    Single PaddingBottom 'get set' : 
    FloatType Float 'get set' : 
    PositionType Position 'get set' : 
    iTextSharp.text.pdf.FloatLayout FloatLayout 'get set' : 
    DisplayType Display 'get set' : 
    iTextSharp.text.BaseColor BackgroundColor 'get set' : 
    iTextSharp.text.Image BackgroundImage 'set' : 
    Single YLine 'get ' : 
    Int32 RunDirection 'get set' : 
    Single SpacingBefore 'get set' : 
    Single SpacingAfter 'get set' : 
    System.Collections.Generic.List`1[iTextSharp.text.IElement] Content 'get ' : 
    BorderTopStyle BorderStyle 'get set' : 
    Boolean KeepTogether 'get set' : 
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
    Int32 Type 'get ' : 
    iTextSharp.text.pdf.PdfName Role 'get set' : 
    iTextSharp.text.AccessibleElementId ID 'get set' : 
    Boolean IsInline 'get ' : 
  Methods:
    get_Left(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Left(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Top(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Right(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Bottom(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Width(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Height(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PercentageHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PercentageHeight(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PercentageWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PercentageWidth(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ContentWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ContentWidth(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ContentHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ContentHeight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    getActualHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getActualWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_TextAlignment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TextAlignment(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PaddingLeft(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PaddingLeft(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PaddingRight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PaddingRight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PaddingTop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PaddingTop(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PaddingBottom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PaddingBottom(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Float(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Float(FloatType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Position(PositionType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FloatLayout(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FloatLayout(FloatLayout): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Display(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Display(DisplayType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BackgroundColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BackgroundColor(BaseColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BackgroundImage(Image): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetBackgroundImage(Image, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_YLine(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RunDirection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RunDirection(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SpacingBefore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SpacingBefore(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SpacingAfter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SpacingAfter(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Content(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BorderStyle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BorderStyle(BorderTopStyle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_KeepTogether(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_KeepTogether(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNestable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddElement(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Layout(PdfContentByte, Boolean, Boolean, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttribute(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessibleAttribute(PdfName, PdfObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessibleAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Role(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Role(PdfName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ID(AccessibleElementId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct iTextSharp.text.pdf.PdfDiv+FloatType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    FloatType NONE = 0 : Public, Static, Literal, HasDefault
    FloatType LEFT = 1 : Public, Static, Literal, HasDefault
    FloatType RIGHT = 2 : Public, Static, Literal, HasDefault
Struct iTextSharp.text.pdf.PdfDiv+PositionType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    PositionType STATIC = 0 : Public, Static, Literal, HasDefault
    PositionType ABSOLUTE = 1 : Public, Static, Literal, HasDefault
    PositionType FIXED = 2 : Public, Static, Literal, HasDefault
    PositionType RELATIVE = 3 : Public, Static, Literal, HasDefault
Struct iTextSharp.text.pdf.PdfDiv+DisplayType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DisplayType DEFAULT_NULL_VALUE = 0 : Public, Static, Literal, HasDefault
    DisplayType NONE = 1 : Public, Static, Literal, HasDefault
    DisplayType BLOCK = 2 : Public, Static, Literal, HasDefault
    DisplayType INLINE = 3 : Public, Static, Literal, HasDefault
    DisplayType INLINE_BLOCK = 4 : Public, Static, Literal, HasDefault
    DisplayType INLINE_TABLE = 5 : Public, Static, Literal, HasDefault
    DisplayType LIST_ITEM = 6 : Public, Static, Literal, HasDefault
    DisplayType RUN_IN = 7 : Public, Static, Literal, HasDefault
    DisplayType TABLE = 8 : Public, Static, Literal, HasDefault
    DisplayType TABLE_CAPTION = 9 : Public, Static, Literal, HasDefault
    DisplayType TABLE_CELL = 10 : Public, Static, Literal, HasDefault
    DisplayType TABLE_COLUMN_GROUP = 11 : Public, Static, Literal, HasDefault
    DisplayType TABLE_COLUMN = 12 : Public, Static, Literal, HasDefault
    DisplayType TABLE_FOOTER_GROUP = 13 : Public, Static, Literal, HasDefault
    DisplayType TABLE_HEADER_GROUP = 14 : Public, Static, Literal, HasDefault
    DisplayType TABLE_ROW = 15 : Public, Static, Literal, HasDefault
    DisplayType TABLE_ROW_GROUP = 16 : Public, Static, Literal, HasDefault
Struct iTextSharp.text.pdf.PdfDiv+BorderTopStyle: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    BorderTopStyle NONE = 0 : Public, Static, Literal, HasDefault
    BorderTopStyle DOTTED = 1 : Public, Static, Literal, HasDefault
    BorderTopStyle DASHED = 2 : Public, Static, Literal, HasDefault
    BorderTopStyle SOLID = 3 : Public, Static, Literal, HasDefault
    BorderTopStyle DOUBLE = 4 : Public, Static, Literal, HasDefault
    BorderTopStyle GROOVE = 5 : Public, Static, Literal, HasDefault
    BorderTopStyle RIDGE = 6 : Public, Static, Literal, HasDefault
    BorderTopStyle INSET = 7 : Public, Static, Literal, HasDefault
    BorderTopStyle OUTSET = 8 : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.PdfSigLockDictionary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.PdfDictionary
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(LockPermissions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(LockAction, System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(LockAction, LockPermissions, System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.PdfSigLockDictionary+LockAction: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  Fields:
    LockAction ALL : Public, Static, InitOnly
    LockAction INCLUDE : Public, Static, InitOnly
    LockAction EXCLUDE : Public, Static, InitOnly
  Properties:
    iTextSharp.text.pdf.PdfName Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PdfSigLockDictionary+LockPermissions: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  Fields:
    LockPermissions NO_CHANGES_ALLOWED : Public, Static, InitOnly
    LockPermissions FORM_FILLING : Public, Static, InitOnly
    LockPermissions FORM_FILLING_AND_ANNOTATION : Public, Static, InitOnly
  Properties:
    iTextSharp.text.pdf.PdfNumber Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.PdfStructTreeController: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    CheckTagged(PdfReader): PrivateScope, Public, Static, HideBySig
    GetDirectObject(PdfObject): PrivateScope, Public, Static, HideBySig
    CopyStructTreeForPage(PdfNumber, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetKDict(PdfDictionary): PrivateScope, Assembly, Static, HideBySig
    CompareObjects(PdfObject, PdfObject): PrivateScope, Public, Static, HideBySig
    AddClass(PdfObject): PrivateScope, Assembly, HideBySig
    AddRole(PdfName): PrivateScope, Assembly, HideBySig
Struct iTextSharp.text.pdf.PdfStructTreeController+ReturnType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ReturnType BELOW = 0 : Public, Static, Literal, HasDefault
    ReturnType FOUND = 1 : Public, Static, Literal, HasDefault
    ReturnType ABOVE = 2 : Public, Static, Literal, HasDefault
    ReturnType NOTFOUND = 3 : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.security.CertificateInfo: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetIssuerFields(X509Certificate): PrivateScope, Public, Static, HideBySig
    GetIssuer(Byte[]): PrivateScope, Public, Static, HideBySig
    GetSubjectFields(X509Certificate): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.security.CertificateInfo+X509Name: AutoLayout, AnsiClass, Class, NestedPublic
    Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.Dictionary`2[System.String,System.Collections.Generic.List`1[System.String]] values : Public
    Org.BouncyCastle.Asn1.DerObjectIdentifier C : Public, Static
    Org.BouncyCastle.Asn1.DerObjectIdentifier O : Public, Static
    Org.BouncyCastle.Asn1.DerObjectIdentifier OU : Public, Static
    Org.BouncyCastle.Asn1.DerObjectIdentifier T : Public, Static
    Org.BouncyCastle.Asn1.DerObjectIdentifier CN : Public, Static
    Org.BouncyCastle.Asn1.DerObjectIdentifier SN : Public, Static
    Org.BouncyCastle.Asn1.DerObjectIdentifier L : Public, Static
    Org.BouncyCastle.Asn1.DerObjectIdentifier ST : Public, Static
    Org.BouncyCastle.Asn1.DerObjectIdentifier SURNAME : Public, Static
    Org.BouncyCastle.Asn1.DerObjectIdentifier GIVENNAME : Public, Static
    Org.BouncyCastle.Asn1.DerObjectIdentifier INITIALS : Public, Static
    Org.BouncyCastle.Asn1.DerObjectIdentifier GENERATION : Public, Static
    Org.BouncyCastle.Asn1.DerObjectIdentifier UNIQUE_IDENTIFIER : Public, Static
    Org.BouncyCastle.Asn1.DerObjectIdentifier EmailAddress : Public, Static
    Org.BouncyCastle.Asn1.DerObjectIdentifier E : Public, Static
    Org.BouncyCastle.Asn1.DerObjectIdentifier DC : Public, Static
    Org.BouncyCastle.Asn1.DerObjectIdentifier UID : Public, Static
    System.Collections.Generic.Dictionary`2[Org.BouncyCastle.Asn1.DerObjectIdentifier,System.String] DefaultSymbols : Public, Static, InitOnly
  Methods:
    GetField(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldArray(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFields(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.security.CertificateInfo+X509NameTokenizer: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    HasMoreTokens(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextToken(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.security.CertificateUtil: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetCRLURL(X509Certificate): PrivateScope, Public, Static, HideBySig
    GetOCSPURL(X509Certificate): PrivateScope, Public, Static, HideBySig
    GetTSAURL(X509Certificate): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.security.CertificateVerification: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    VerifyCertificate(X509Certificate, ICollection`1, DateTime): PrivateScope, Public, Static, HideBySig
    VerifyCertificates(ICollection`1, ICollection`1, ICollection`1, DateTime): PrivateScope, Public, Static, HideBySig
    VerifyCertificates(ICollection`1, ICollection`1, DateTime): PrivateScope, Public, Static, HideBySig
    VerifyOcspCertificates(BasicOcspResp, ICollection`1): PrivateScope, Public, Static, HideBySig
    VerifyTimestampCertificates(TimeStampToken, ICollection`1): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.security.CertificateVerifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.security.CertificateVerifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean OnlineCheckingAllowed 'set' : 
  Methods:
    set_OnlineCheckingAllowed(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Verify(X509Certificate, X509Certificate, DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.pdf.security.ICrlClient: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetEncoded(X509Certificate, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.security.CrlClientOffline: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.security.ICrlClient
  Methods:
    GetEncoded(X509Certificate, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.security.CrlClientOnline: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.ICollection`1[Org.BouncyCastle.X509.X509Certificate]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.security.ICrlClient
  Methods:
    GetEncoded(X509Certificate, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.security.RootStoreVerifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.security.CertificateVerifier
    Void .ctor(iTextSharp.text.pdf.security.CertificateVerifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[Org.BouncyCastle.X509.X509Certificate] Certificates 'set' : 
  Methods:
    set_Certificates(List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Verify(X509Certificate, X509Certificate, DateTime): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.security.CrlVerifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.security.RootStoreVerifier
    Void .ctor(iTextSharp.text.pdf.security.CertificateVerifier, System.Collections.Generic.List`1[Org.BouncyCastle.X509.X509Crl]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Verify(X509Certificate, X509Certificate, DateTime): PrivateScope, Public, Virtual, HideBySig
    Verify(X509Crl, X509Certificate, X509Certificate, DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCrl(X509Certificate, X509Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsSignatureValid(X509Crl, X509Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.security.DigestAlgorithms: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Fields:
    System.String SHA1 = SHA-1 : Public, Static, Literal, HasDefault
    System.String SHA256 = SHA-256 : Public, Static, Literal, HasDefault
    System.String SHA384 = SHA-384 : Public, Static, Literal, HasDefault
    System.String SHA512 = SHA-512 : Public, Static, Literal, HasDefault
    System.String RIPEMD160 = RIPEMD160 : Public, Static, Literal, HasDefault
  Methods:
    GetMessageDigestFromOid(String): PrivateScope, Public, Static, HideBySig
    GetMessageDigest(String): PrivateScope, Public, Static, HideBySig
    Digest(Stream, String): PrivateScope, Public, Static, HideBySig
    Digest(Stream, IDigest): PrivateScope, Public, Static, HideBySig
    GetDigest(String): PrivateScope, Public, Static, HideBySig
    GetAllowedDigests(String): PrivateScope, Public, Static, HideBySig
    Digest(String, Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Digest(String, Byte[]): PrivateScope, Public, Static, HideBySig
    Digest(IDigest, Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Digest(IDigest, Byte[]): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.security.EncryptionAlgorithms: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    GetAlgorithm(String): PrivateScope, Public, Static, HideBySig
Interface iTextSharp.text.pdf.security.IOcspClient: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetEncoded(X509Certificate, X509Certificate, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.pdf.security.ITSAClient: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetTokenSizeEstimate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMessageDigest(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetTimeStampToken(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.security.LtvTimestamp: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Timestamp(PdfSignatureAppearance, ITSAClient, String): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.security.LtvVerification: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfStamper): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddVerification(String, IOcspClient, ICrlClient, CertificateOption, Level, CertificateInclusion): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddVerification(String, ICollection`1, ICollection`1, ICollection`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Merge(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct iTextSharp.text.pdf.security.LtvVerification+Level: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Level OCSP = 0 : Public, Static, Literal, HasDefault
    Level CRL = 1 : Public, Static, Literal, HasDefault
    Level OCSP_CRL = 2 : Public, Static, Literal, HasDefault
    Level OCSP_OPTIONAL_CRL = 3 : Public, Static, Literal, HasDefault
Struct iTextSharp.text.pdf.security.LtvVerification+CertificateOption: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CertificateOption SIGNING_CERTIFICATE = 0 : Public, Static, Literal, HasDefault
    CertificateOption WHOLE_CHAIN = 1 : Public, Static, Literal, HasDefault
Struct iTextSharp.text.pdf.security.LtvVerification+CertificateInclusion: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CertificateInclusion YES = 0 : Public, Static, Literal, HasDefault
    CertificateInclusion NO = 1 : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.security.LtvVerifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.security.RootStoreVerifier
    Void .ctor(iTextSharp.text.pdf.PdfReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.security.CertificateVerifier Verifier 'set' : 
    CertificateOption CertificateOption 'set' : 
    Boolean VerifyRootCertificate 'set' : 
  Methods:
    set_Verifier(CertificateVerifier): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CertificateOption(CertificateOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_VerifyRootCertificate(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Verify(List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VerifySignature(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VerifyChain(X509Certificate[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Verify(X509Certificate, X509Certificate, DateTime): PrivateScope, Public, Virtual, HideBySig
    SwitchToPreviousRevision(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCRLsFromDSS(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetOCSPResponsesFromDSS(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct iTextSharp.text.pdf.security.CryptoStandard: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    iTextSharp.text.pdf.security.CryptoStandard CMS = 0 : Public, Static, Literal, HasDefault
    iTextSharp.text.pdf.security.CryptoStandard CADES = 1 : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.security.MakeSignature: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    SignDetached(PdfSignatureAppearance, IExternalSignature, ICollection`1, ICollection`1, IOcspClient, ITSAClient, Int32, CryptoStandard): PrivateScope, Public, Static, HideBySig
    SignDetached(PdfSignatureAppearance, IExternalSignature, ICollection`1, ICollection`1, IOcspClient, ITSAClient, Int32, CryptoStandard, SignaturePolicyInfo): PrivateScope, Public, Static, HideBySig
    SignDetached(PdfSignatureAppearance, IExternalSignature, ICollection`1, ICollection`1, IOcspClient, ITSAClient, Int32, CryptoStandard, SignaturePolicyIdentifier): PrivateScope, Public, Static, HideBySig
    ProcessCrl(X509Certificate, ICollection`1): PrivateScope, Public, Static, HideBySig
    SignExternalContainer(PdfSignatureAppearance, IExternalSignatureContainer, Int32): PrivateScope, Public, Static, HideBySig
    SignDeferred(PdfReader, String, Stream, IExternalSignatureContainer): PrivateScope, Public, Static, HideBySig
Class iTextSharp.text.pdf.security.OcspClientBouncyCastle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(iTextSharp.text.pdf.security.OcspVerifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.security.IOcspClient
  Methods:
    GetBasicOCSPResp(X509Certificate, X509Certificate, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEncoded(X509Certificate, X509Certificate, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.security.OcspVerifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :iTextSharp.text.pdf.security.RootStoreVerifier
    Void .ctor(iTextSharp.text.pdf.security.CertificateVerifier, System.Collections.Generic.List`1[Org.BouncyCastle.Ocsp.BasicOcspResp]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Verify(X509Certificate, X509Certificate, DateTime): PrivateScope, Public, Virtual, HideBySig
    Verify(BasicOcspResp, X509Certificate, X509Certificate, DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsValidResponse(BasicOcspResp, X509Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VerifyResponse(BasicOcspResp, X509Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    IsSignatureValid(BasicOcspResp, X509Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetOcspResponse(X509Certificate, X509Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.security.PdfPKCS7: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.ICipherParameters, System.Collections.Generic.ICollection`1[Org.BouncyCastle.X509.X509Certificate], System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], iTextSharp.text.pdf.PdfName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SignName 'get set' : 
    System.String Reason 'get set' : 
    System.String Location 'get set' : 
    System.DateTime SignDate 'get set' : 
    Int32 Version 'get ' : 
    Int32 SigningInfoVersion 'get ' : 
    System.String DigestAlgorithmOid 'get ' : 
    System.String DigestEncryptionAlgorithmOid 'get ' : 
    Org.BouncyCastle.X509.X509Certificate[] Certificates 'get ' : 
    Org.BouncyCastle.X509.X509Certificate[] SignCertificateChain 'get ' : 
    Org.BouncyCastle.X509.X509Certificate SigningCertificate 'get ' : 
    System.Collections.Generic.ICollection`1[Org.BouncyCastle.X509.X509Crl] CRLs 'get ' : 
    Org.BouncyCastle.Ocsp.BasicOcspResp Ocsp 'get ' : 
    Boolean IsTsp 'get ' : 
    Org.BouncyCastle.Tsp.TimeStampToken TimeStampToken 'get ' : 
    System.DateTime TimeStampDate 'get ' : 
  Methods:
    GetHashClass(): PrivateScope, Assembly, HideBySig
    SetSignaturePolicy(SignaturePolicyInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSignaturePolicy(SignaturePolicyIdentifier): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SignName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SignName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Reason(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Reason(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Location(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SignDate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SignDate(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Version(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SigningInfoVersion(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DigestAlgorithmOid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetHashAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_DigestEncryptionAlgorithmOid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetDigestAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetExternalDigest(Byte[], Byte[], String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Update(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEncodedPKCS1(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEncodedPKCS7(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEncodedPKCS7(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEncodedPKCS7(Byte[], ITSAClient, Byte[], ICollection`1, CryptoStandard): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getAuthenticatedAttributeBytes(Byte[], Byte[], ICollection`1, CryptoStandard): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Verify(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VerifyTimestampImprint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Certificates(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SignCertificateChain(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SigningCertificate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CRLs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Ocsp(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsRevocationValid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsTsp(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TimeStampToken(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TimeStampDate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetFilterSubtype(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEncryptionAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.security.PrivateKeySignature: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.ICipherParameters, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.security.IExternalSignature
  Methods:
    Sign(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHashAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEncryptionAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.security.SecurityIDs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ID_PKCS7_DATA = 1.2.840.113549.1.7.1 : Public, Static, Literal, HasDefault
    System.String ID_PKCS7_SIGNED_DATA = 1.2.840.113549.1.7.2 : Public, Static, Literal, HasDefault
    System.String ID_RSA = 1.2.840.113549.1.1.1 : Public, Static, Literal, HasDefault
    System.String ID_DSA = 1.2.840.10040.4.1 : Public, Static, Literal, HasDefault
    System.String ID_ECDSA = 1.2.840.10045.2.1 : Public, Static, Literal, HasDefault
    System.String ID_CONTENT_TYPE = 1.2.840.113549.1.9.3 : Public, Static, Literal, HasDefault
    System.String ID_MESSAGE_DIGEST = 1.2.840.113549.1.9.4 : Public, Static, Literal, HasDefault
    System.String ID_SIGNING_TIME = 1.2.840.113549.1.9.5 : Public, Static, Literal, HasDefault
    System.String ID_ADBE_REVOCATION = 1.2.840.113583.1.1.8 : Public, Static, Literal, HasDefault
    System.String ID_TSA = 1.2.840.113583.1.1.9.1 : Public, Static, Literal, HasDefault
    System.String ID_OCSP = 1.3.6.1.5.5.7.48.1 : Public, Static, Literal, HasDefault
    System.String ID_AA_SIGNING_CERTIFICATE_V1 = 1.2.840.113549.1.9.16.2.12 : Public, Static, Literal, HasDefault
    System.String ID_AA_SIGNING_CERTIFICATE_V2 = 1.2.840.113549.1.9.16.2.47 : Public, Static, Literal, HasDefault
Class iTextSharp.text.pdf.security.SignaturePermissions: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfDictionary, iTextSharp.text.pdf.security.SignaturePermissions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Certification 'get ' : 
    Boolean FillInAllowed 'get ' : 
    Boolean AnnotationsAllowed 'get ' : 
    System.Collections.Generic.List`1[iTextSharp.text.pdf.security.SignaturePermissions+FieldLock] FieldLocks 'get ' : 
  Methods:
    get_Certification(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FillInAllowed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AnnotationsAllowed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FieldLocks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class iTextSharp.text.pdf.security.SignaturePermissions+FieldLock: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfName, iTextSharp.text.pdf.PdfArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    iTextSharp.text.pdf.PdfName Action 'get ' : 
    iTextSharp.text.pdf.PdfArray Fields 'get ' : 
  Methods:
    get_Action(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Fields(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.security.TSAClientBouncyCastle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String, Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.security.ITSAClient
  Fields:
    Int32 DEFAULTTOKENSIZE = 4096 : Public, Static, Literal, HasDefault
    System.String DEFAULTHASHALGORITHM = SHA-256 : Public, Static, Literal, HasDefault
  Methods:
    SetTSAInfo(ITSAInfoBouncyCastle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTSAReqPolicy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTSAReqPolicy(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTokenSizeEstimate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMessageDigest(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTimeStampToken(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface iTextSharp.text.pdf.security.ITSAInfoBouncyCastle: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    InspectTimeStampTokenInfo(TimeStampTokenInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.pdf.security.VerificationException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Security.GeneralSecurityException
    Void .ctor(Org.BouncyCastle.X509.X509Certificate, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.pdf.security.VerificationOK: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.X509.X509Certificate, iTextSharp.text.pdf.security.CertificateVerifier, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class iTextSharp.text.pdf.security.X509Certificate2Signature: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Security.Cryptography.X509Certificates.X509Certificate2, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.pdf.security.IExternalSignature
  Methods:
    Sign(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHashAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEncryptionAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.pdf.TtfUnicodeWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(iTextSharp.text.pdf.PdfWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class iTextSharp.text.Version: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String AGPL : Public, Static
  Properties:
    System.String Product 'get ' : 
    System.String Release 'get ' : 
    System.String GetVersion 'get ' : 
    System.String Key 'get ' : 
    Boolean IsAGPLVersion 'get ' : 
  Methods:
    GetInstance(): PrivateScope, Public, Static, HideBySig
    get_Product(): PrivateScope, Public, HideBySig, SpecialName
    get_Release(): PrivateScope, Public, HideBySig, SpecialName
    get_GetVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAGPLVersion(): PrivateScope, Public, Static, HideBySig, SpecialName
Class iTextSharp.text.WritableDirectElement: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.IElement
    iTextSharp.text.api.IWriterOperation
  Fields:
    Int32 DIRECT_ELEMENT_TYPE_UNKNOWN : Public, Static, InitOnly
    Int32 DIRECT_ELEMENT_TYPE_HEADER : Public, Static, InitOnly
  Properties:
    Int32 DirectElemenType 'get ' : 
    Int32 Type 'get ' : 
    System.Collections.Generic.IList`1[iTextSharp.text.Chunk] Chunks 'get ' : 
  Methods:
    get_DirectElemenType(): PrivateScope, Public, HideBySig, SpecialName
    Process(IElementListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNestable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Chunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Write(PdfWriter, Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface iTextSharp.text.xml.simpleparser.INewLineHandler: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    IsNewLineTag(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class iTextSharp.text.xml.simpleparser.handler.HTMLNewLineHandler: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.xml.simpleparser.INewLineHandler
  Methods:
    IsNewLineTag(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.xml.simpleparser.handler.NeverNewLineHandler: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    iTextSharp.text.xml.simpleparser.INewLineHandler
  Methods:
    IsNewLineTag(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.xml.XmlDomWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetCanonical(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetOutput(Stream, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetOutput(TextWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(XmlNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.xml.XmlToTxt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    iTextSharp.text.xml.simpleparser.ISimpleXMLDocHandler
  Methods:
    Parse(Stream): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    StartElement(String, IDictionary`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndElement(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    StartDocument(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndDocument(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Text(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class iTextSharp.text.xml.XMLUtil: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    EscapeXML(String, Boolean): PrivateScope, Public, Static, HideBySig
    UnescapeXML(String): PrivateScope, Public, Static, HideBySig
    Unescape(String): PrivateScope, Public, Static, HideBySig
    IsValidCharacterValue(String): PrivateScope, Public, Static, HideBySig
    IsValidCharacterValue(Int32): PrivateScope, Public, Static, HideBySig
    FindInArray(Char, Char[], Int32): PrivateScope, Public, Static, HideBySig
    GetEncodingName(Byte[]): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Asn1.Asn1Exception: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Asn1.Asn1ParsingException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.InvalidOperationException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Asn1.Cmp.CAKeyUpdAnnContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Properties:
    Org.BouncyCastle.Asn1.Cmp.CmpCertificate OldWithNew 'get ' : 
    Org.BouncyCastle.Asn1.Cmp.CmpCertificate NewWithOld 'get ' : 
    Org.BouncyCastle.Asn1.Cmp.CmpCertificate NewWithNew 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_OldWithNew(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NewWithOld(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NewWithNew(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.CertConfirmContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToCertStatusArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.CertifiedKeyPair: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cmp.CertOrEncCert): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cmp.CertOrEncCert, Org.BouncyCastle.Asn1.Crmf.EncryptedValue, Org.BouncyCastle.Asn1.Crmf.PkiPublicationInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Cmp.CertOrEncCert CertOrEncCert 'get ' : 
    Org.BouncyCastle.Asn1.Crmf.EncryptedValue PrivateKey 'get ' : 
    Org.BouncyCastle.Asn1.Crmf.PkiPublicationInfo PublicationInfo 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_CertOrEncCert(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PrivateKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PublicationInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.CertOrEncCert: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cmp.CmpCertificate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Crmf.EncryptedValue): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Org.BouncyCastle.Asn1.Cmp.CmpCertificate Certificate 'get ' : 
    Org.BouncyCastle.Asn1.Crmf.EncryptedValue EncryptedCert 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Certificate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EncryptedCert(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.CertRepMessage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cmp.CmpCertificate[], Org.BouncyCastle.Asn1.Cmp.CertResponse[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetCAPubs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetResponse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.CertResponse: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo, Org.BouncyCastle.Asn1.Cmp.CertifiedKeyPair, Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger CertReqID 'get ' : 
    Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo Status 'get ' : 
    Org.BouncyCastle.Asn1.Cmp.CertifiedKeyPair CertifiedKeyPair 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_CertReqID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Status(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CertifiedKeyPair(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.CertStatus: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Byte[], Org.BouncyCastle.Math.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Asn1OctetString CertHash 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger CertReqID 'get ' : 
    Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo StatusInfo 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_CertHash(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CertReqID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_StatusInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.Challenge: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier Owf 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Owf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.CmpCertificate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.AttributeCertificate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509CertificateStructure): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Boolean IsX509v3PKCert 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509CertificateStructure X509v3PKCert 'get ' : 
    Org.BouncyCastle.Asn1.X509.AttributeCertificate X509v2AttrCert 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_IsX509v3PKCert(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_X509v3PKCert(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_X509v2AttrCert(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.CmpObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier passwordBasedMac : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier dhBasedMac : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier it_caProtEncCert : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier it_signKeyPairTypes : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier it_encKeyPairTypes : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier it_preferredSymAlg : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier it_caKeyUpdateInfo : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier it_currentCRL : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier it_unsupportedOIDs : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier it_keyPairParamReq : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier it_keyPairParamRep : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier it_revPassphrase : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier it_implicitConfirm : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier it_confirmWaitTime : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier it_origPKIMessage : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier it_suppLangTags : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier regCtrl_regToken : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier regCtrl_authenticator : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier regCtrl_pkiPublicationInfo : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier regCtrl_pkiArchiveOptions : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier regCtrl_oldCertID : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier regCtrl_protocolEncrKey : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier regCtrl_altCertTemplate : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier regInfo_utf8Pairs : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier regInfo_certReq : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier ct_encKeyWithID : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Cmp.CrlAnnContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToCertificateListArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.ErrorMsgContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo, Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.Cmp.PkiFreeText): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo PkiStatusInfo 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger ErrorCode 'get ' : 
    Org.BouncyCastle.Asn1.Cmp.PkiFreeText ErrorDetails 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_PkiStatusInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ErrorCode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ErrorDetails(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.GenMsgContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cmp.InfoTypeAndValue[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToInfoTypeAndValueArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.GenRepContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cmp.InfoTypeAndValue[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToInfoTypeAndValueArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.InfoTypeAndValue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier InfoType 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable InfoValue 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_InfoType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_InfoValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.KeyRecRepContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Properties:
    Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo Status 'get ' : 
    Org.BouncyCastle.Asn1.Cmp.CmpCertificate NewSigCert 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Status(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NewSigCert(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetCACerts(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetKeyPairHist(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.OobCertHash: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier HashAlg 'get ' : 
    Org.BouncyCastle.Asn1.Crmf.CertId CertID 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_HashAlg(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CertID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.PbmParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Byte[], Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Int32, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1OctetString, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Asn1OctetString Salt 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier Owf 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger IterationCount 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier Mac 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Salt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Owf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IterationCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Mac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.PkiBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Int32, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Fields:
    Int32 TYPE_INIT_REQ = 0 : Public, Static, Literal, HasDefault
    Int32 TYPE_INIT_REP = 1 : Public, Static, Literal, HasDefault
    Int32 TYPE_CERT_REQ = 2 : Public, Static, Literal, HasDefault
    Int32 TYPE_CERT_REP = 3 : Public, Static, Literal, HasDefault
    Int32 TYPE_P10_CERT_REQ = 4 : Public, Static, Literal, HasDefault
    Int32 TYPE_POPO_CHALL = 5 : Public, Static, Literal, HasDefault
    Int32 TYPE_POPO_REP = 6 : Public, Static, Literal, HasDefault
    Int32 TYPE_KEY_UPDATE_REQ = 7 : Public, Static, Literal, HasDefault
    Int32 TYPE_KEY_UPDATE_REP = 8 : Public, Static, Literal, HasDefault
    Int32 TYPE_KEY_RECOVERY_REQ = 9 : Public, Static, Literal, HasDefault
    Int32 TYPE_KEY_RECOVERY_REP = 10 : Public, Static, Literal, HasDefault
    Int32 TYPE_REVOCATION_REQ = 11 : Public, Static, Literal, HasDefault
    Int32 TYPE_REVOCATION_REP = 12 : Public, Static, Literal, HasDefault
    Int32 TYPE_CROSS_CERT_REQ = 13 : Public, Static, Literal, HasDefault
    Int32 TYPE_CROSS_CERT_REP = 14 : Public, Static, Literal, HasDefault
    Int32 TYPE_CA_KEY_UPDATE_ANN = 15 : Public, Static, Literal, HasDefault
    Int32 TYPE_CERT_ANN = 16 : Public, Static, Literal, HasDefault
    Int32 TYPE_REVOCATION_ANN = 17 : Public, Static, Literal, HasDefault
    Int32 TYPE_CRL_ANN = 18 : Public, Static, Literal, HasDefault
    Int32 TYPE_CONFIRM = 19 : Public, Static, Literal, HasDefault
    Int32 TYPE_NESTED = 20 : Public, Static, Literal, HasDefault
    Int32 TYPE_GEN_MSG = 21 : Public, Static, Literal, HasDefault
    Int32 TYPE_GEN_REP = 22 : Public, Static, Literal, HasDefault
    Int32 TYPE_ERROR = 23 : Public, Static, Literal, HasDefault
    Int32 TYPE_CERT_CONFIRM = 24 : Public, Static, Literal, HasDefault
    Int32 TYPE_POLL_REQ = 25 : Public, Static, Literal, HasDefault
    Int32 TYPE_POLL_REP = 26 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Type 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Content 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Content(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.PkiConfirmContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.PkiHeader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Int32, Org.BouncyCastle.Asn1.X509.GeneralName, Org.BouncyCastle.Asn1.X509.GeneralName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Org.BouncyCastle.Asn1.X509.GeneralName NULL_NAME : Public, Static, InitOnly
    Int32 CMP_1999 : Public, Static, InitOnly
    Int32 CMP_2000 : Public, Static, InitOnly
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Pvno 'get ' : 
    Org.BouncyCastle.Asn1.X509.GeneralName Sender 'get ' : 
    Org.BouncyCastle.Asn1.X509.GeneralName Recipient 'get ' : 
    Org.BouncyCastle.Asn1.DerGeneralizedTime MessageTime 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier ProtectionAlg 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString SenderKID 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString RecipKID 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString TransactionID 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString SenderNonce 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString RecipNonce 'get ' : 
    Org.BouncyCastle.Asn1.Cmp.PkiFreeText FreeText 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Pvno(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Sender(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Recipient(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MessageTime(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ProtectionAlg(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SenderKID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RecipKID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TransactionID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SenderNonce(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RecipNonce(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FreeText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetGeneralInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.PkiHeaderBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Org.BouncyCastle.Asn1.X509.GeneralName, Org.BouncyCastle.Asn1.X509.GeneralName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetMessageTime(DerGeneralizedTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetProtectionAlg(AlgorithmIdentifier): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSenderKID(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSenderKID(Asn1OctetString): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRecipKID(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRecipKID(DerOctetString): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTransactionID(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTransactionID(Asn1OctetString): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSenderNonce(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSenderNonce(Asn1OctetString): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRecipNonce(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRecipNonce(Asn1OctetString): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFreeText(PkiFreeText): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGeneralInfo(InfoTypeAndValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGeneralInfo(InfoTypeAndValue[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGeneralInfo(Asn1Sequence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Build(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Asn1.Cmp.PkiMessage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cmp.PkiHeader, Org.BouncyCastle.Asn1.Cmp.PkiBody, Org.BouncyCastle.Asn1.DerBitString, Org.BouncyCastle.Asn1.Cmp.CmpCertificate[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cmp.PkiHeader, Org.BouncyCastle.Asn1.Cmp.PkiBody, Org.BouncyCastle.Asn1.DerBitString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cmp.PkiHeader, Org.BouncyCastle.Asn1.Cmp.PkiBody): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Cmp.PkiHeader Header 'get ' : 
    Org.BouncyCastle.Asn1.Cmp.PkiBody Body 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString Protection 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Header(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Body(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Protection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetExtraCerts(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.PkiMessages: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cmp.PkiMessage[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToPkiMessageArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.PollRepContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Properties:
    Org.BouncyCastle.Asn1.DerInteger CertReqID 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger CheckAfter 'get ' : 
    Org.BouncyCastle.Asn1.Cmp.PkiFreeText Reason 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_CertReqID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CheckAfter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Reason(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.PollReqContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetCertReqIDs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.PopoDecKeyChallContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToChallengeArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.PopoDecKeyRespContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToDerIntegerArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.ProtectedPart: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cmp.PkiHeader, Org.BouncyCastle.Asn1.Cmp.PkiBody): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Cmp.PkiHeader Header 'get ' : 
    Org.BouncyCastle.Asn1.Cmp.PkiBody Body 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Header(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Body(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.RevAnnContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Properties:
    Org.BouncyCastle.Asn1.Cmp.PkiStatusEncodable Status 'get ' : 
    Org.BouncyCastle.Asn1.Crmf.CertId CertID 'get ' : 
    Org.BouncyCastle.Asn1.DerGeneralizedTime WillBeRevokedAt 'get ' : 
    Org.BouncyCastle.Asn1.DerGeneralizedTime BadSinceDate 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions CrlDetails 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Status(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CertID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_WillBeRevokedAt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BadSinceDate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CrlDetails(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.RevDetails: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Crmf.CertTemplate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Crmf.CertTemplate, Org.BouncyCastle.Asn1.X509.X509Extensions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Crmf.CertTemplate CertDetails 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions CrlEntryDetails 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_CertDetails(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CrlEntryDetails(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.RevRepContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetStatus(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRevCerts(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCrls(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cmp.RevRepContentBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(PkiStatusInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(PkiStatusInfo, CertId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddCrl(CertificateList): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Build(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Asn1.Cmp.RevReqContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cmp.RevDetails[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToRevDetailsArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.Attributes: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.Evidence: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.TimeStampTokenEvidence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Org.BouncyCastle.Asn1.Cms.TimeStampTokenEvidence TstEvidence 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_TstEvidence(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.MetaData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerBoolean, Org.BouncyCastle.Asn1.DerUtf8String, Org.BouncyCastle.Asn1.DerIA5String, Org.BouncyCastle.Asn1.Cms.Attributes): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsHashProtected 'get ' : 
    Org.BouncyCastle.Asn1.DerUtf8String FileName 'get ' : 
    Org.BouncyCastle.Asn1.DerIA5String MediaType 'get ' : 
    Org.BouncyCastle.Asn1.Cms.Attributes OtherMetaData 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
    get_IsHashProtected(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FileName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MediaType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OtherMetaData(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Org.BouncyCastle.Asn1.Cms.TimeStampAndCrl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.ContentInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Cms.ContentInfo TimeStampToken 'get ' : 
    Org.BouncyCastle.Asn1.X509.CertificateList Crl 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_TimeStampToken(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Crl(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.TimeStampedData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.DerIA5String, Org.BouncyCastle.Asn1.Cms.MetaData, Org.BouncyCastle.Asn1.Asn1OctetString, Org.BouncyCastle.Asn1.Cms.Evidence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerIA5String DataUri 'get ' : 
    Org.BouncyCastle.Asn1.Cms.MetaData MetaData 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString Content 'get ' : 
    Org.BouncyCastle.Asn1.Cms.Evidence TemporalEvidence 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_DataUri(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MetaData(): PrivateScope, Public, HideBySig, SpecialName
    get_Content(): PrivateScope, Public, HideBySig, SpecialName
    get_TemporalEvidence(): PrivateScope, Public, HideBySig, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Cms.TimeStampedDataParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    Org.BouncyCastle.Asn1.DerIA5String DataUri 'get ' : 
    Org.BouncyCastle.Asn1.Cms.MetaData MetaData 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetStringParser Content 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_DataUri(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MetaData(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Content(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetTemporalEvidence(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Asn1.Cms.TimeStampTokenEvidence: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.TimeStampAndCrl[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.TimeStampAndCrl): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToTimeStampAndCrlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.AttributeTypeAndValue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(System.String, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier, Org.BouncyCastle.Asn1.Asn1Encodable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerObjectIdentifier Type 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Value 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.CertId: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Properties:
    Org.BouncyCastle.Asn1.X509.GeneralName Issuer 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger SerialNumber 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_Issuer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SerialNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.CertReqMessages: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Crmf.CertReqMsg[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToCertReqMsgArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.CertReqMsg: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Crmf.CertRequest, Org.BouncyCastle.Asn1.Crmf.ProofOfPossession, Org.BouncyCastle.Asn1.Crmf.AttributeTypeAndValue[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Crmf.CertRequest CertReq 'get ' : 
    Org.BouncyCastle.Asn1.Crmf.ProofOfPossession Popo 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_CertReq(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Popo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetRegInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.CertRequest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Int32, Org.BouncyCastle.Asn1.Crmf.CertTemplate, Org.BouncyCastle.Asn1.Crmf.Controls): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.DerInteger, Org.BouncyCastle.Asn1.Crmf.CertTemplate, Org.BouncyCastle.Asn1.Crmf.Controls): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.DerInteger CertReqID 'get ' : 
    Org.BouncyCastle.Asn1.Crmf.CertTemplate CertTemplate 'get ' : 
    Org.BouncyCastle.Asn1.Crmf.Controls Controls 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_CertReqID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CertTemplate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Controls(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.CertTemplate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Properties:
    Int32 Version 'get ' : 
    Org.BouncyCastle.Asn1.DerInteger SerialNumber 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier SigningAlg 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Name Issuer 'get ' : 
    Org.BouncyCastle.Asn1.Crmf.OptionalValidity Validity 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Name Subject 'get ' : 
    Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo PublicKey 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString IssuerUID 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString SubjectUID 'get ' : 
    Org.BouncyCastle.Asn1.X509.X509Extensions Extensions 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SerialNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SigningAlg(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Issuer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Validity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Subject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PublicKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IssuerUID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SubjectUID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Extensions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.CertTemplateBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetVersion(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSerialNumber(DerInteger): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSigningAlg(AlgorithmIdentifier): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetIssuer(X509Name): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetValidity(OptionalValidity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSubject(X509Name): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPublicKey(SubjectPublicKeyInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetIssuerUID(DerBitString): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSubjectUID(DerBitString): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetExtensions(X509Extensions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Build(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Asn1.Crmf.Controls: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Crmf.AttributeTypeAndValue[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    ToAttributeTypeAndValueArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.CrmfObjectIdentifiers: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_pkix : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_pkip : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_regCtrl : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_regCtrl_regToken : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_regCtrl_authenticator : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_regCtrl_pkiPublicationInfo : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_regCtrl_pkiArchiveOptions : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.DerObjectIdentifier id_ct_encKeyWithID : Public, Static, InitOnly
Class Org.BouncyCastle.Asn1.Crmf.EncKeyWithID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Pkcs.PrivateKeyInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Pkcs.PrivateKeyInfo, Org.BouncyCastle.Asn1.DerUtf8String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Pkcs.PrivateKeyInfo, Org.BouncyCastle.Asn1.X509.GeneralName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Pkcs.PrivateKeyInfo PrivateKey 'get ' : 
    Boolean HasIdentifier 'get ' : 
    Boolean IsIdentifierUtf8String 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Identifier 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_PrivateKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasIdentifier(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsIdentifierUtf8String(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Identifier(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.EncryptedKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cms.EnvelopedData): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Crmf.EncryptedValue): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Properties:
    Boolean IsEncryptedValue 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Value 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_IsEncryptedValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.EncryptedValue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.DerBitString, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.Asn1OctetString, Org.BouncyCastle.Asn1.DerBitString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier IntendedAlg 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier SymmAlg 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString EncSymmKey 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier KeyAlg 'get ' : 
    Org.BouncyCastle.Asn1.Asn1OctetString ValueHint 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString EncValue 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_IntendedAlg(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SymmAlg(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EncSymmKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_KeyAlg(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ValueHint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EncValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.OptionalValidity: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Properties:
    Org.BouncyCastle.Asn1.X509.Time NotBefore 'get ' : 
    Org.BouncyCastle.Asn1.X509.Time NotAfter 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_NotBefore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NotAfter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.PkiArchiveOptions: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Crmf.EncryptedKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Asn1OctetString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Fields:
    Int32 encryptedPrivKey = 0 : Public, Static, Literal, HasDefault
    Int32 keyGenParameters = 1 : Public, Static, Literal, HasDefault
    Int32 archiveRemGenPrivKey = 2 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Type 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Value 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.PkiPublicationInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Properties:
    Org.BouncyCastle.Asn1.DerInteger Action 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Action(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetPubInfos(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.PKMacValue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Cmp.PbmParameter, Org.BouncyCastle.Asn1.DerBitString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.DerBitString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier AlgID 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString MacValue 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_AlgID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MacValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.PopoPrivKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Crmf.SubsequentMessage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Fields:
    Int32 thisMessage = 0 : Public, Static, Literal, HasDefault
    Int32 subsequentMessage = 1 : Public, Static, Literal, HasDefault
    Int32 dhMAC = 2 : Public, Static, Literal, HasDefault
    Int32 agreeMAC = 3 : Public, Static, Literal, HasDefault
    Int32 encryptedKey = 4 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Type 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Value 'get ' : 
  Methods:
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.PopoSigningKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.Crmf.PopoSigningKeyInput, Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier, Org.BouncyCastle.Asn1.DerBitString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.Crmf.PopoSigningKeyInput PoposkInput 'get ' : 
    Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier AlgorithmIdentifier 'get ' : 
    Org.BouncyCastle.Asn1.DerBitString Signature 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetInstance(Asn1TaggedObject, Boolean): PrivateScope, Public, Static, HideBySig
    get_PoposkInput(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AlgorithmIdentifier(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Signature(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.PopoSigningKeyInput: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.GeneralName, Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Crmf.PKMacValue, Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Asn1.X509.GeneralName Sender 'get ' : 
    Org.BouncyCastle.Asn1.Crmf.PKMacValue PublicKeyMac 'get ' : 
    Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo PublicKey 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Sender(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PublicKeyMac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PublicKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.ProofOfPossession: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Crmf.PopoSigningKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Org.BouncyCastle.Asn1.Crmf.PopoPrivKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Asn1.IAsn1Choice
  Fields:
    Int32 TYPE_RA_VERIFIED = 0 : Public, Static, Literal, HasDefault
    Int32 TYPE_SIGNING_KEY = 1 : Public, Static, Literal, HasDefault
    Int32 TYPE_KEY_ENCIPHERMENT = 2 : Public, Static, Literal, HasDefault
    Int32 TYPE_KEY_AGREEMENT = 3 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Type 'get ' : 
    Org.BouncyCastle.Asn1.Asn1Encodable Object 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Object(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.SinglePubInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
  Properties:
    Org.BouncyCastle.Asn1.X509.GeneralName PubLocation 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_PubLocation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Crmf.SubsequentMessage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.DerInteger
  Fields:
    Org.BouncyCastle.Asn1.Crmf.SubsequentMessage encrCert : Public, Static, InitOnly
    Org.BouncyCastle.Asn1.Crmf.SubsequentMessage challengeResp : Public, Static, InitOnly
  Methods:
    ValueOf(Int32): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Asn1.Icao.CscaMasterList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(Org.BouncyCastle.Asn1.X509.X509CertificateStructure[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Version 'get ' : 
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetCertStructs(): PrivateScope, Public, HideBySig
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Asn1.Icao.LdsVersionInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Asn1.Asn1Encodable
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstance(Object): PrivateScope, Public, Static, HideBySig
    GetLdsVersion(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUnicodeVersion(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Object(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Bcpg.RevocationKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.SignatureSubpacket
    Void .ctor(Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Org.BouncyCastle.Bcpg.RevocationKeyTag, Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Bcpg.RevocationKeyTag SignatureClass 'get ' : 
    Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag Algorithm 'get ' : 
  Methods:
    get_SignatureClass(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Algorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetFingerprint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Org.BouncyCastle.Bcpg.RevocationKeyTag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Bcpg.RevocationKeyTag ClassDefault = 128 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.RevocationKeyTag ClassSensitive = 64 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Bcpg.RevocationReason: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Bcpg.SignatureSubpacket
    Void .ctor(Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Org.BouncyCastle.Bcpg.RevocationReasonTag, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetRevocationReason(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRevocationDescription(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Org.BouncyCastle.Bcpg.RevocationReasonTag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Bcpg.RevocationReasonTag NoReason = 0 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.RevocationReasonTag KeySuperseded = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.RevocationReasonTag KeyCompromised = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.RevocationReasonTag KeyRetired = 3 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Bcpg.RevocationReasonTag UserNoLongerValid = 32 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Cms.DefaultAuthenticatedAttributeTableGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Asn1.Cms.AttributeTable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Cms.CmsAttributeTableGenerator
  Methods:
    GetAttributes(IDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Cms.OriginatorInfoGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.X509.X509Certificate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.X509.Store.IX509Store): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.X509.Store.IX509Store, Org.BouncyCastle.X509.Store.IX509Store): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Generate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Cms.OriginatorInformation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Asn1.Cms.OriginatorInfo): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetCertificates(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCrls(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToAsn1Structure(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Generators.SCrypt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Generate(Byte[], Byte[], Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
Interface Org.BouncyCastle.Crypto.Modes.Gcm.IGcmExponentiator: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Init(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ExponentiateX(Int64, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Modes.Gcm.BasicGcmExponentiator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Modes.Gcm.IGcmExponentiator
  Methods:
    Init(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ExponentiateX(Int64, Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Modes.Gcm.Tables1kGcmExponentiator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Modes.Gcm.IGcmExponentiator
  Methods:
    Init(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ExponentiateX(Int64, Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Org.BouncyCastle.Crypto.Tls.AlertDescription: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Crypto.Tls.AlertDescription close_notify = 0 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription unexpected_message = 10 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription bad_record_mac = 20 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription decryption_failed = 21 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription record_overflow = 22 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription decompression_failure = 30 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription handshake_failure = 40 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription bad_certificate = 42 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription unsupported_certificate = 43 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription certificate_revoked = 44 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription certificate_expired = 45 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription certificate_unknown = 46 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription illegal_parameter = 47 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription unknown_ca = 48 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription access_denied = 49 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription decode_error = 50 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription decrypt_error = 51 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription export_restriction = 60 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription protocol_version = 70 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription insufficient_security = 71 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription internal_error = 80 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription user_canceled = 90 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription no_renegotiation = 100 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription unsupported_extension = 110 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription certificate_unobtainable = 111 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription unrecognized_name = 112 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription bad_certificate_status_response = 113 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription bad_certificate_hash_value = 114 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertDescription unknown_psk_identity = 115 : Public, Static, Literal, HasDefault
Struct Org.BouncyCastle.Crypto.Tls.AlertLevel: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Crypto.Tls.AlertLevel warning = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.AlertLevel fatal = 2 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Crypto.Tls.CertificateRequest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Tls.ClientCertificateType[], System.Collections.IList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Crypto.Tls.ClientCertificateType[] CertificateTypes 'get ' : 
    System.Collections.IList CertificateAuthorities 'get ' : 
  Methods:
    get_CertificateTypes(): PrivateScope, Public, HideBySig, SpecialName
    get_CertificateAuthorities(): PrivateScope, Public, HideBySig, SpecialName
Struct Org.BouncyCastle.Crypto.Tls.CipherSuite: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_NULL_WITH_NULL_NULL = 0 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_RSA_WITH_NULL_MD5 = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_RSA_WITH_NULL_SHA = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5 = 3 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_RSA_WITH_RC4_128_MD5 = 4 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_RSA_WITH_RC4_128_SHA = 5 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 = 6 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_RSA_WITH_IDEA_CBC_SHA = 7 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA = 8 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_RSA_WITH_DES_CBC_SHA = 9 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA = 10 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA = 11 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_DSS_WITH_DES_CBC_SHA = 12 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA = 13 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA = 14 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_RSA_WITH_DES_CBC_SHA = 15 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA = 16 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA = 17 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA = 18 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = 19 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA = 20 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA = 21 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = 22 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5 = 23 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_anon_WITH_RC4_128_MD5 = 24 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA = 25 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA = 26 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = 27 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA = 47 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_DSS_WITH_AES_128_CBC_SHA = 48 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_RSA_WITH_AES_128_CBC_SHA = 49 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA = 50 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA = 51 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA = 52 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA = 53 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_DSS_WITH_AES_256_CBC_SHA = 54 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_RSA_WITH_AES_256_CBC_SHA = 55 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA = 56 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA = 57 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA = 58 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_PSK_WITH_RC4_128_SHA = 138 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_PSK_WITH_3DES_EDE_CBC_SHA = 139 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_PSK_WITH_AES_128_CBC_SHA = 140 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_PSK_WITH_AES_256_CBC_SHA = 141 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DHE_PSK_WITH_RC4_128_SHA = 142 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA = 143 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DHE_PSK_WITH_AES_128_CBC_SHA = 144 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_DHE_PSK_WITH_AES_256_CBC_SHA = 145 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_RSA_PSK_WITH_RC4_128_SHA = 146 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA = 147 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_RSA_PSK_WITH_AES_128_CBC_SHA = 148 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_RSA_PSK_WITH_AES_256_CBC_SHA = 149 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA = 49153 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA = 49154 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA = 49155 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA = 49156 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA = 49157 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA = 49158 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA = 49159 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA = 49160 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = 49161 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = 49162 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA = 49163 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA = 49164 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA = 49165 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA = 49166 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA = 49167 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA = 49168 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA = 49169 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA = 49170 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = 49171 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = 49172 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_anon_WITH_NULL_SHA = 49173 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA = 49174 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA = 49175 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA = 49176 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA = 49177 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA = 49178 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA = 49179 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA = 49180 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_SRP_SHA_WITH_AES_128_CBC_SHA = 49181 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA = 49182 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA = 49183 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_SRP_SHA_WITH_AES_256_CBC_SHA = 49184 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA = 49185 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA = 49186 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = 49187 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = 49188 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 = 49189 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 = 49190 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = 49191 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = 49192 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 = 49193 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 = 49194 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = 49195 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = 49196 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 = 49197 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 = 49198 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = 49199 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = 49200 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 = 49201 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 = 49202 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV = 255 : Public, Static, Literal, HasDefault
Struct Org.BouncyCastle.Crypto.Tls.ClientCertificateType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Crypto.Tls.ClientCertificateType rsa_sign = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ClientCertificateType dss_sign = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ClientCertificateType rsa_fixed_dh = 3 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ClientCertificateType dss_fixed_dh = 4 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ClientCertificateType ecdsa_sign = 64 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ClientCertificateType rsa_fixed_ecdh = 65 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ClientCertificateType ecdsa_fixed_ecdh = 66 : Public, Static, Literal, HasDefault
Struct Org.BouncyCastle.Crypto.Tls.CompressionMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Crypto.Tls.CompressionMethod NULL = 0 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.CompressionMethod DEFLATE = 1 : Public, Static, Literal, HasDefault
Struct Org.BouncyCastle.Crypto.Tls.ContentType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Crypto.Tls.ContentType change_cipher_spec = 20 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ContentType alert = 21 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ContentType handshake = 22 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ContentType application_data = 23 : Public, Static, Literal, HasDefault
Interface Org.BouncyCastle.Crypto.Tls.TlsCredentials: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Org.BouncyCastle.Crypto.Tls.Certificate Certificate 'get ' : 
  Methods:
    get_Certificate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsCredentials
  Methods:
    GenerateAgreement(AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Tls.DefaultTlsAgreementCredentials: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Tls.Certificate, Org.BouncyCastle.Crypto.AsymmetricKeyParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials
    Org.BouncyCastle.Crypto.Tls.TlsCredentials
  Properties:
    Org.BouncyCastle.Crypto.Tls.Certificate Certificate 'get ' : 
  Methods:
    get_Certificate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GenerateAgreement(AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Crypto.Tls.TlsCipherFactory: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    CreateCipher(TlsClientContext, EncryptionAlgorithm, DigestAlgorithm): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Tls.DefaultTlsCipherFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsCipherFactory
  Methods:
    CreateCipher(TlsClientContext, EncryptionAlgorithm, DigestAlgorithm): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsCredentials
  Methods:
    GenerateCertificateSignature(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Tls.DefaultTlsSignerCredentials: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Tls.TlsClientContext, Org.BouncyCastle.Crypto.Tls.Certificate, Org.BouncyCastle.Crypto.AsymmetricKeyParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials
    Org.BouncyCastle.Crypto.Tls.TlsCredentials
  Properties:
    Org.BouncyCastle.Crypto.Tls.Certificate Certificate 'get ' : 
  Methods:
    get_Certificate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GenerateCertificateSignature(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Org.BouncyCastle.Crypto.Tls.DigestAlgorithm: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Crypto.Tls.DigestAlgorithm NULL = 0 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.DigestAlgorithm MD5 = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.DigestAlgorithm SHA = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.DigestAlgorithm SHA256 = 3 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.DigestAlgorithm SHA384 = 4 : Public, Static, Literal, HasDefault
Struct Org.BouncyCastle.Crypto.Tls.ECCurveType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Crypto.Tls.ECCurveType explicit_prime = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ECCurveType explicit_char2 = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ECCurveType named_curve = 3 : Public, Static, Literal, HasDefault
Struct Org.BouncyCastle.Crypto.Tls.ECPointFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Crypto.Tls.ECPointFormat uncompressed = 0 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ECPointFormat ansiX962_compressed_prime = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ECPointFormat ansiX962_compressed_char2 = 2 : Public, Static, Literal, HasDefault
Struct Org.BouncyCastle.Crypto.Tls.EncryptionAlgorithm: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Crypto.Tls.EncryptionAlgorithm NULL = 0 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.EncryptionAlgorithm RC4_40 = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.EncryptionAlgorithm RC4_128 = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.EncryptionAlgorithm RC2_CBC_40 = 3 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.EncryptionAlgorithm IDEA_CBC = 4 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.EncryptionAlgorithm DES40_CBC = 5 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.EncryptionAlgorithm DES_CBC = 6 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.EncryptionAlgorithm cls_3DES_EDE_CBC = 7 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.EncryptionAlgorithm AES_128_CBC = 8 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.EncryptionAlgorithm AES_256_CBC = 9 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.EncryptionAlgorithm AES_128_GCM = 10 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.EncryptionAlgorithm AES_256_GCM = 11 : Public, Static, Literal, HasDefault
Struct Org.BouncyCastle.Crypto.Tls.ExtensionType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Crypto.Tls.ExtensionType server_name = 0 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ExtensionType max_fragment_length = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ExtensionType client_certificate_url = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ExtensionType trusted_ca_keys = 3 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ExtensionType truncated_hmac = 4 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ExtensionType status_request = 5 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ExtensionType elliptic_curves = 10 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ExtensionType ec_point_formats = 11 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ExtensionType srp = 12 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.ExtensionType renegotiation_info = 65281 : Public, Static, Literal, HasDefault
Struct Org.BouncyCastle.Crypto.Tls.HandshakeType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Crypto.Tls.HandshakeType hello_request = 0 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.HandshakeType client_hello = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.HandshakeType server_hello = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.HandshakeType certificate = 11 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.HandshakeType server_key_exchange = 12 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.HandshakeType certificate_request = 13 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.HandshakeType server_hello_done = 14 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.HandshakeType certificate_verify = 15 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.HandshakeType client_key_exchange = 16 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.HandshakeType finished = 20 : Public, Static, Literal, HasDefault
Struct Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm NULL = 0 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm RSA = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm RSA_EXPORT = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm DHE_DSS = 3 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm DHE_DSS_EXPORT = 4 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm DHE_RSA = 5 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm DHE_RSA_EXPORT = 6 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm DH_DSS = 7 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm DH_DSS_EXPORT = 8 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm DH_RSA = 9 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm DH_RSA_EXPORT = 10 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm DH_anon = 11 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm DH_anon_export = 12 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm PSK = 13 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm DHE_PSK = 14 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm RSA_PSK = 15 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm ECDH_ECDSA = 16 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm ECDHE_ECDSA = 17 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm ECDH_RSA = 18 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm ECDHE_RSA = 19 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm ECDH_anon = 20 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm SRP = 21 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm SRP_DSS = 22 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm SRP_RSA = 23 : Public, Static, Literal, HasDefault
Interface Org.BouncyCastle.Crypto.Tls.TlsAuthentication: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    NotifyServerCertificate(Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetClientCredentials(CertificateRequest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
    Void .ctor(Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsAuthentication
  Methods:
    NotifyServerCertificate(Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetClientCredentials(CertificateRequest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Tls.LegacyTlsClient: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :Org.BouncyCastle.Crypto.Tls.DefaultTlsClient
    Void .ctor(Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
  Methods:
    GetAuthentication(): PrivateScope, Public, Virtual, HideBySig
Struct Org.BouncyCastle.Crypto.Tls.NamedCurve: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Org.BouncyCastle.Crypto.Tls.NamedCurve sect163k1 = 1 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve sect163r1 = 2 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve sect163r2 = 3 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve sect193r1 = 4 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve sect193r2 = 5 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve sect233k1 = 6 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve sect233r1 = 7 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve sect239k1 = 8 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve sect283k1 = 9 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve sect283r1 = 10 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve sect409k1 = 11 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve sect409r1 = 12 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve sect571k1 = 13 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve sect571r1 = 14 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve secp160k1 = 15 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve secp160r1 = 16 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve secp160r2 = 17 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve secp192k1 = 18 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve secp192r1 = 19 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve secp224k1 = 20 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve secp224r1 = 21 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve secp256k1 = 22 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve secp256r1 = 23 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve secp384r1 = 24 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve secp521r1 = 25 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve arbitrary_explicit_prime_curves = 65281 : Public, Static, Literal, HasDefault
    Org.BouncyCastle.Crypto.Tls.NamedCurve arbitrary_explicit_char2_curves = 65282 : Public, Static, Literal, HasDefault
Class Org.BouncyCastle.Crypto.Tls.NamedCurveHelper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetECParameters(NamedCurve): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Crypto.Tls.PskTlsClient: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Tls.TlsPskIdentity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Tls.TlsCipherFactory, Org.BouncyCastle.Crypto.Tls.TlsPskIdentity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsClient
  Methods:
    Init(TlsClientContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCipherSuites(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetClientExtensions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCompressionMethods(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NotifySessionID(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NotifySelectedCipherSuite(CipherSuite): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NotifySelectedCompressionMethod(CompressionMethod): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NotifySecureRenegotiation(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessServerExtensions(IDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetKeyExchange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAuthentication(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCompression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCipher(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Tls.SrpTlsClient: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.Tls.TlsCipherFactory, Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsClient
  Methods:
    Init(TlsClientContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCipherSuites(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetClientExtensions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCompressionMethods(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NotifySessionID(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NotifySelectedCipherSuite(CipherSuite): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NotifySelectedCompressionMethod(CompressionMethod): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NotifySecureRenegotiation(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessServerExtensions(IDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetKeyExchange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAuthentication(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCompression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCipher(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Tls.Ssl3Mac: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.IDigest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.IMac
  Fields:
    Byte[] MD5_IPAD : Assembly, Static, InitOnly
    Byte[] MD5_OPAD : Assembly, Static, InitOnly
    Byte[] SHA1_IPAD : Assembly, Static, InitOnly
    Byte[] SHA1_OPAD : Assembly, Static, InitOnly
  Properties:
    System.String AlgorithmName 'get ' : 
  Methods:
    get_AlgorithmName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Init(ICipherParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMacSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Update(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BlockUpdate(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DoFinal(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Crypto.Tls.TlsClientContext: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Org.BouncyCastle.Security.SecureRandom SecureRandom 'get ' : 
    Org.BouncyCastle.Crypto.Tls.SecurityParameters SecurityParameters 'get ' : 
    System.Object UserObject 'get set' : 
  Methods:
    get_SecureRandom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SecurityParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_UserObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_UserObject(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Org.BouncyCastle.Crypto.Tls.TlsClientContextImpl: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Security.SecureRandom, Org.BouncyCastle.Crypto.Tls.SecurityParameters): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsClientContext
  Properties:
    Org.BouncyCastle.Security.SecureRandom SecureRandom 'get ' : 
    Org.BouncyCastle.Crypto.Tls.SecurityParameters SecurityParameters 'get ' : 
    System.Object UserObject 'get set' : 
  Methods:
    get_SecureRandom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SecurityParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UserObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_UserObject(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Interface Org.BouncyCastle.Crypto.Tls.TlsCompression: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Compress(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Decompress(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Tls.TlsDeflateCompression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsCompression
  Fields:
    Int32 LEVEL_NONE = 0 : Public, Static, Literal, HasDefault
    Int32 LEVEL_FASTEST = 1 : Public, Static, Literal, HasDefault
    Int32 LEVEL_SMALLEST = 9 : Public, Static, Literal, HasDefault
    Int32 LEVEL_DEFAULT = -1 : Public, Static, Literal, HasDefault
  Methods:
    Compress(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Decompress(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Tls.TlsDheKeyExchange: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Tls.TlsDHKeyExchange
    Void .ctor(Org.BouncyCastle.Crypto.Tls.TlsClientContext, Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    SkipServerKeyExchange(): PrivateScope, Public, Virtual, HideBySig
    ProcessServerKeyExchange(Stream): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Tls.TlsDHUtilities: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    CalculateDHBasicAgreement(DHPublicKeyParameters, DHPrivateKeyParameters): PrivateScope, Public, Static, HideBySig
    GenerateDHKeyPair(SecureRandom, DHParameters): PrivateScope, Public, Static, HideBySig
    GenerateEphemeralClientKeyExchange(SecureRandom, DHParameters, Stream): PrivateScope, Public, Static, HideBySig
    ValidateDHPublicKey(DHPublicKeyParameters): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Crypto.Tls.TlsECDHKeyExchange: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Tls.TlsClientContext, Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  Methods:
    SkipServerCertificate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessServerCertificate(Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SkipServerKeyExchange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessServerKeyExchange(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ValidateCertificateRequest(CertificateRequest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SkipClientCredentials(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessClientCredentials(TlsCredentials): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateClientKeyExchange(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GeneratePremasterSecret(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Tls.TlsECDheKeyExchange: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Tls.TlsECDHKeyExchange
    Void .ctor(Org.BouncyCastle.Crypto.Tls.TlsClientContext, Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    SkipServerKeyExchange(): PrivateScope, Public, Virtual, HideBySig
    ProcessServerKeyExchange(Stream): PrivateScope, Public, Virtual, HideBySig
    ValidateCertificateRequest(CertificateRequest): PrivateScope, Public, Virtual, HideBySig
    ProcessClientCredentials(TlsCredentials): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Tls.TlsECDsaSigner: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Org.BouncyCastle.Crypto.Tls.TlsDsaSigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsValidPublicKey(AsymmetricKeyParameter): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Crypto.Tls.TlsFatalAlert: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(Org.BouncyCastle.Crypto.Tls.AlertDescription): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Org.BouncyCastle.Crypto.Tls.AlertDescription AlertDescription 'get ' : 
  Methods:
    get_AlertDescription(): PrivateScope, Public, HideBySig, SpecialName
Class Org.BouncyCastle.Crypto.Tls.TlsNullCompression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsCompression
  Methods:
    Compress(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Decompress(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Crypto.Tls.TlsPskIdentity: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    SkipIdentityHint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    NotifyIdentityHint(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPskIdentity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPsk(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Crypto.Tls.TlsPskKeyExchange: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.Tls.TlsClientContext, Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm, Org.BouncyCastle.Crypto.Tls.TlsPskIdentity): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  Methods:
    SkipServerCertificate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessServerCertificate(Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SkipServerKeyExchange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessServerKeyExchange(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ValidateCertificateRequest(CertificateRequest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SkipClientCredentials(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProcessClientCredentials(TlsCredentials): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateClientKeyExchange(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GeneratePremasterSecret(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Crypto.Tls.TlsRsaUtilities: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    GenerateEncryptedPreMasterSecret(SecureRandom, RsaKeyParameters, Stream): PrivateScope, Public, Static, HideBySig
Class Org.BouncyCastle.Crypto.Tls.TlsStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(Org.BouncyCastle.Crypto.Tls.TlsProtocolHandler): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
Interface Org.BouncyCastle.Utilities.IO.Pem.PemObjectGenerator: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Generate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.OpenSsl.MiscPemGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.String, Char[], Org.BouncyCastle.Security.SecureRandom): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Utilities.IO.Pem.PemObjectGenerator
  Methods:
    Generate(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.OpenSsl.Pkcs8Generator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Utilities.IO.Pem.PemObjectGenerator
  Fields:
    System.String PbeSha1_RC4_128 : Public, Static, InitOnly
    System.String PbeSha1_RC4_40 : Public, Static, InitOnly
    System.String PbeSha1_3DES : Public, Static, InitOnly
    System.String PbeSha1_2DES : Public, Static, InitOnly
    System.String PbeSha1_RC2_128 : Public, Static, InitOnly
    System.String PbeSha1_RC2_40 : Public, Static, InitOnly
  Properties:
    Org.BouncyCastle.Security.SecureRandom SecureRandom 'set' : 
    Char[] Password 'set' : 
    Int32 IterationCount 'set' : 
  Methods:
    set_SecureRandom(SecureRandom): PrivateScope, Public, HideBySig, SpecialName
    set_Password(Char[]): PrivateScope, Public, HideBySig, SpecialName
    set_IterationCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    Generate(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Pkix.PkixCrlUtilities: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FindCrls(X509CrlStoreSelector, PkixParameters, DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FindCrls(X509CrlStoreSelector, PkixParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Utilities.Collections.LinkedDictionary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IDictionary
    System.Collections.ICollection
    System.Collections.IEnumerable
  Fields:
    System.Collections.IDictionary hash : Assembly, InitOnly
    System.Collections.IList keys : Assembly, InitOnly
  Properties:
    Int32 Count 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
    System.Collections.ICollection Keys 'get ' : 
    System.Collections.ICollection Values 'get ' : 
    System.Object Item [System.Object] 'get set' : 
  Methods:
    Add(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Array, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Keys(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Values(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Org.BouncyCastle.Utilities.Collections.LinkedDictionaryEnumerator: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Org.BouncyCastle.Utilities.Collections.LinkedDictionary): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IDictionaryEnumerator
    System.Collections.IEnumerator
  Properties:
    System.Object Current 'get ' : 
    System.Collections.DictionaryEntry Entry 'get ' : 
    System.Object Key 'get ' : 
    System.Object Value 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Entry(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Key(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionary: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.Collections.IDictionary
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
    System.Collections.ICollection Keys 'get ' : 
    System.Collections.ICollection Values 'get ' : 
    System.Object Item [System.Object] 'get set' : 
  Methods:
    Add(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CopyTo(Array, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Remove(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Keys(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Values(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Item(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionaryProxy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionary
    Void .ctor(System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
    System.Collections.ICollection Keys 'get ' : 
    System.Collections.ICollection Values 'get ' : 
  Methods:
    Contains(Object): PrivateScope, Public, Virtual, HideBySig
    CopyTo(Array, Int32): PrivateScope, Public, Virtual, HideBySig
    get_Count(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Keys(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Values(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Org.BouncyCastle.Utilities.Collections.UnmodifiableList: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
    System.Object Item [Int32] 'get set' : 
  Methods:
    Add(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CopyTo(Array, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IndexOf(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Insert(Int32, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Remove(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Org.BouncyCastle.Utilities.Collections.UnmodifiableListProxy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Utilities.Collections.UnmodifiableList
    Void .ctor(System.Collections.IList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    Contains(Object): PrivateScope, Public, Virtual, HideBySig
    CopyTo(Array, Int32): PrivateScope, Public, Virtual, HideBySig
    get_Count(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig
    IndexOf(Object): PrivateScope, Public, Virtual, HideBySig
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Org.BouncyCastle.Utilities.Collections.UnmodifiableSet: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    Org.BouncyCastle.Utilities.Collections.ISet
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Boolean IsEmpty 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    Add(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddAll(IEnumerable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CopyTo(Array, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Remove(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAll(IEnumerable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Org.BouncyCastle.Utilities.Collections.UnmodifiableSetProxy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Utilities.Collections.UnmodifiableSet
    Void .ctor(Org.BouncyCastle.Utilities.Collections.ISet): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
    Boolean IsEmpty 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    Contains(Object): PrivateScope, Public, Virtual, HideBySig
    CopyTo(Array, Int32): PrivateScope, Public, Virtual, HideBySig
    get_Count(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Org.BouncyCastle.Utilities.Enums: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Methods:
    GetEnumValue(Type, String): PrivateScope, Assembly, Static, HideBySig
    GetEnumValues(Type): PrivateScope, Assembly, Static, HideBySig
    GetArbitraryValue(Type): PrivateScope, Assembly, Static, HideBySig
Class Org.BouncyCastle.Utilities.IO.Pem.PemGenerationException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Org.BouncyCastle.Utilities.IO.Pem.PemHeader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    System.String Value 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Utilities.IO.Pem.PemObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Collections.IList, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Org.BouncyCastle.Utilities.IO.Pem.PemObjectGenerator
  Properties:
    System.String Type 'get ' : 
    System.Collections.IList Headers 'get ' : 
    Byte[] Content 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_Headers(): PrivateScope, Public, HideBySig, SpecialName
    get_Content(): PrivateScope, Public, HideBySig, SpecialName
    Generate(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Org.BouncyCastle.Utilities.IO.Pem.PemObjectParser: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ParseObject(PemObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Org.BouncyCastle.Utilities.IO.TeeInputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Utilities.IO.BaseInputStream
    Void .ctor(System.IO.Stream, System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Close(): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Utilities.IO.TeeOutputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Org.BouncyCastle.Utilities.IO.BaseOutputStream
    Void .ctor(System.IO.Stream, System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Close(): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
Class Org.BouncyCastle.Utilities.Zlib.ZInputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int32 FlushMode 'get set' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    Int64 TotalIn 'get ' : 
    Int64 TotalOut 'get ' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Final, Virtual, HideBySig
    get_FlushMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FlushMode(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Length(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Final, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Final, Virtual, HideBySig
    get_TotalIn(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TotalOut(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Write(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig
Class System.util.collections.LinkedDictionary`2[TKey,TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IDictionary`2[TKey,TValue]
    System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.IEnumerable
  Properties:
    System.Collections.Generic.ICollection`1[TKey] Keys 'get ' : 
    System.Collections.Generic.ICollection`1[TValue] Values 'get ' : 
    TValue Item [TKey] 'get set' : 
  Methods:
    Add(TKey, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ContainsKey(TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Keys(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryGetValue(TKey, TValue&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Values(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(TKey, TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class System.util.collections.LinkedDictionary`2+ValueCollection[TKey,TValue]: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(System.Collections.Generic.LinkedList`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[TValue]
    System.Collections.Generic.IEnumerable`1[TValue]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
  Methods:
    Add(TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(TValue[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.util.collections.LinkedDictionary`2+ValueCollection+Enumerator[TKey,TValue]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
  :System.ValueType
    Void .ctor(System.Collections.Generic.LinkedList`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[TValue]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    TValue Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.util.collections.LinkedDictionary`2+KeyCollection[TKey,TValue]: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(System.Collections.Generic.LinkedList`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]], System.Collections.Generic.Dictionary`2[TKey,System.Collections.Generic.LinkedListNode`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[TKey]
    System.Collections.Generic.IEnumerable`1[TKey]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
  Methods:
    Add(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(TKey[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.util.collections.LinkedDictionary`2+KeyCollection+Enumerator[TKey,TValue]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
  :System.ValueType
    Void .ctor(System.Collections.Generic.LinkedList`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[TKey]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    TKey Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.util.collections.ReadOnlyDictionary`2[TKey,TValue]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(System.Collections.Generic.IDictionary`2[TKey,TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IDictionary`2[TKey,TValue]
    System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.IEnumerable
    System.Collections.ICollection
  Properties:
    Int32 Count 'get ' : 
    System.Collections.Generic.ICollection`1[TKey] Keys 'get ' : 
    System.Collections.Generic.ICollection`1[TValue] Values 'get ' : 
    TValue Item [TKey] 'get set' : 
  Methods:
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Keys(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Values(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(TKey, TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ContainsKey(TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryGetValue(TKey, TValue&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.util.zlib.ZInputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int32 FlushMode 'get set' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    Int64 TotalIn 'get ' : 
    Int64 TotalOut 'get ' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Final, Virtual, HideBySig
    get_FlushMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FlushMode(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Length(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Final, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Final, Virtual, HideBySig
    get_TotalIn(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TotalOut(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Write(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig
Class System.util.zlib.ZOutputStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int32 FlushMode 'get set' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    Int64 TotalIn 'get ' : 
    Int64 TotalOut 'get ' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    End(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Finish(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Flush(): PrivateScope, Public, Virtual, HideBySig
    get_FlushMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FlushMode(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Length(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Final, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Final, Virtual, HideBySig
    get_TotalIn(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TotalOut(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
